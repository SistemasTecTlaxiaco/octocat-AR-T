/*! For license information please see mindar-image.prod.js.LICENSE.txt */
(()=>{var t={61113:function(t){t.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(r,s,function(e){return t[e]}.bind(null,s));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e),n.d(e,"encode",(function(){return $})),n.d(e,"decode",(function(){return W})),n.d(e,"decodeAsync",(function(){return K})),n.d(e,"decodeArrayStream",(function(){return X})),n.d(e,"decodeStream",(function(){return Y})),n.d(e,"Decoder",(function(){return B})),n.d(e,"Encoder",(function(){return C})),n.d(e,"ExtensionCodec",(function(){return I})),n.d(e,"ExtData",(function(){return d})),n.d(e,"EXT_TIMESTAMP",(function(){return g})),n.d(e,"encodeDateToTimeSpec",(function(){return b})),n.d(e,"encodeTimeSpecToTimestamp",(function(){return y})),n.d(e,"decodeTimestampToTimeSpec",(function(){return w})),n.d(e,"encodeTimestampExtension",(function(){return x})),n.d(e,"decodeTimestampExtension",(function(){return v}));var r=function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,s,a=n.call(t),o=[];try{for(;(void 0===e||e-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(t){s={error:t}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(s)throw s.error}}return o},s=function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(r(arguments[e]));return t},a="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function o(t){for(var e=t.length,n=0,r=0;r<e;){var s=t.charCodeAt(r++);if(0!=(4294967168&s))if(0==(4294965248&s))n+=2;else{if(s>=55296&&s<=56319&&r<e){var a=t.charCodeAt(r);56320==(64512&a)&&(++r,s=((1023&s)<<10)+(1023&a)+65536)}n+=0==(4294901760&s)?3:4}else n++}return n}var i=a?new TextEncoder:void 0,l="undefined"!=typeof process?200:0,u=(null==i?void 0:i.encodeInto)?function(t,e,n){i.encodeInto(t,e.subarray(n))}:function(t,e,n){e.set(i.encode(t),n)};function c(t,e,n){for(var r=e,a=r+n,o=[],i="";r<a;){var l=t[r++];if(0==(128&l))o.push(l);else if(192==(224&l)){var u=63&t[r++];o.push((31&l)<<6|u)}else if(224==(240&l)){u=63&t[r++];var c=63&t[r++];o.push((31&l)<<12|u<<6|c)}else if(240==(248&l)){var h=(7&l)<<18|(u=63&t[r++])<<12|(c=63&t[r++])<<6|63&t[r++];h>65535&&(h-=65536,o.push(h>>>10&1023|55296),h=56320|1023&h),o.push(h)}else o.push(l);o.length>=4096&&(i+=String.fromCharCode.apply(String,s(o)),o.length=0)}return o.length>0&&(i+=String.fromCharCode.apply(String,s(o))),i}var h=a?new TextDecoder:null,p="undefined"!=typeof process?200:0,d=function(t,e){this.type=t,this.data=e};function f(t,e,n){var r=Math.floor(n/4294967296),s=n;t.setUint32(e,r),t.setUint32(e+4,s)}function m(t,e){return 4294967296*t.getInt32(e)+t.getUint32(e+4)}var g=-1;function y(t){var e,n=t.sec,r=t.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(e=new DataView(s.buffer)).setUint32(0,n),s}var a=n/4294967296,o=4294967295&n;return s=new Uint8Array(8),(e=new DataView(s.buffer)).setUint32(0,r<<2|3&a),e.setUint32(4,o),s}return s=new Uint8Array(12),(e=new DataView(s.buffer)).setUint32(0,r),f(e,4,n),s}function b(t){var e=t.getTime(),n=Math.floor(e/1e3),r=1e6*(e-1e3*n),s=Math.floor(r/1e9);return{sec:n+s,nsec:r-1e9*s}}function x(t){return t instanceof Date?y(b(t)):null}function w(t){var e=new DataView(t.buffer,t.byteOffset,t.byteLength);switch(t.byteLength){case 4:return{sec:e.getUint32(0),nsec:0};case 8:var n=e.getUint32(0);return{sec:4294967296*(3&n)+e.getUint32(4),nsec:n>>>2};case 12:return{sec:m(e,4),nsec:e.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+t.length)}}function v(t){var e=w(t);return new Date(1e3*e.sec+e.nsec/1e6)}var k={type:g,encode:x,decode:v},I=function(){function t(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return t.prototype.register=function(t){var e=t.type,n=t.encode,r=t.decode;if(e>=0)this.encoders[e]=n,this.decoders[e]=r;else{var s=1+e;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},t.prototype.tryToEncode=function(t,e){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(t,e)))return new d(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(t,e)))return new d(n,s)}return t instanceof d?t:null},t.prototype.decode=function(t,e,n){var r=e<0?this.builtInDecoders[-1-e]:this.decoders[e];return r?r(t,e,n):new d(e,t)},t.defaultCodec=new t,t}();function N(t){return t instanceof Uint8Array?t:ArrayBuffer.isView(t)?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):t instanceof ArrayBuffer?new Uint8Array(t):Uint8Array.from(t)}var S=function(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},C=function(){function t(t,e,n,r,s,a,o){void 0===t&&(t=I.defaultCodec),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===a&&(a=!1),void 0===o&&(o=!1),this.extensionCodec=t,this.context=e,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=a,this.ignoreUndefined=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return t.prototype.encode=function(t,e){if(e>this.maxDepth)throw new Error("Too deep objects in depth "+e);null==t?this.encodeNil():"boolean"==typeof t?this.encodeBoolean(t):"number"==typeof t?this.encodeNumber(t):"string"==typeof t?this.encodeString(t):this.encodeObject(t,e)},t.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},t.prototype.ensureBufferSizeToWrite=function(t){var e=this.pos+t;this.view.byteLength<e&&this.resizeBuffer(2*e)},t.prototype.resizeBuffer=function(t){var e=new ArrayBuffer(t),n=new Uint8Array(e),r=new DataView(e);n.set(this.bytes),this.view=r,this.bytes=n},t.prototype.encodeNil=function(){this.writeU8(192)},t.prototype.encodeBoolean=function(t){!1===t?this.writeU8(194):this.writeU8(195)},t.prototype.encodeNumber=function(t){Number.isSafeInteger(t)?t>=0?t<128?this.writeU8(t):t<256?(this.writeU8(204),this.writeU8(t)):t<65536?(this.writeU8(205),this.writeU16(t)):t<4294967296?(this.writeU8(206),this.writeU32(t)):(this.writeU8(207),this.writeU64(t)):t>=-32?this.writeU8(224|t+32):t>=-128?(this.writeU8(208),this.writeI8(t)):t>=-32768?(this.writeU8(209),this.writeI16(t)):t>=-2147483648?(this.writeU8(210),this.writeI32(t)):(this.writeU8(211),this.writeI64(t)):this.forceFloat32?(this.writeU8(202),this.writeF32(t)):(this.writeU8(203),this.writeF64(t))},t.prototype.writeStringHeader=function(t){if(t<32)this.writeU8(160+t);else if(t<256)this.writeU8(217),this.writeU8(t);else if(t<65536)this.writeU8(218),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too long string: "+t+" bytes in UTF-8");this.writeU8(219),this.writeU32(t)}},t.prototype.encodeString=function(t){var e=t.length;if(a&&e>l){var n=o(t);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),u(t,this.bytes,this.pos),this.pos+=n}else n=o(t),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(t,e,n){for(var r=t.length,s=n,a=0;a<r;){var o=t.charCodeAt(a++);if(0!=(4294967168&o)){if(0==(4294965248&o))e[s++]=o>>6&31|192;else{if(o>=55296&&o<=56319&&a<r){var i=t.charCodeAt(a);56320==(64512&i)&&(++a,o=((1023&o)<<10)+(1023&i)+65536)}0==(4294901760&o)?(e[s++]=o>>12&15|224,e[s++]=o>>6&63|128):(e[s++]=o>>18&7|240,e[s++]=o>>12&63|128,e[s++]=o>>6&63|128)}e[s++]=63&o|128}else e[s++]=o}}(t,this.bytes,this.pos),this.pos+=n},t.prototype.encodeObject=function(t,e){var n=this.extensionCodec.tryToEncode(t,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(t))this.encodeArray(t,e);else if(ArrayBuffer.isView(t))this.encodeBinary(t);else{if("object"!=typeof t)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(t));this.encodeMap(t,e)}},t.prototype.encodeBinary=function(t){var e=t.byteLength;if(e<256)this.writeU8(196),this.writeU8(e);else if(e<65536)this.writeU8(197),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large binary: "+e);this.writeU8(198),this.writeU32(e)}var n=N(t);this.writeU8a(n)},t.prototype.encodeArray=function(t,e){var n,r,s=t.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large array: "+s);this.writeU8(221),this.writeU32(s)}try{for(var a=S(t),o=a.next();!o.done;o=a.next()){var i=o.value;this.encode(i,e+1)}}catch(t){n={error:t}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}},t.prototype.countWithoutUndefined=function(t,e){var n,r,s=0;try{for(var a=S(e),o=a.next();!o.done;o=a.next())void 0!==t[o.value]&&s++}catch(t){n={error:t}}finally{try{o&&!o.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}return s},t.prototype.encodeMap=function(t,e){var n,r,s=Object.keys(t);this.sortKeys&&s.sort();var a=this.ignoreUndefined?this.countWithoutUndefined(t,s):s.length;if(a<16)this.writeU8(128+a);else if(a<65536)this.writeU8(222),this.writeU16(a);else{if(!(a<4294967296))throw new Error("Too large map object: "+a);this.writeU8(223),this.writeU32(a)}try{for(var o=S(s),i=o.next();!i.done;i=o.next()){var l=i.value,u=t[l];this.ignoreUndefined&&void 0===u||(this.encodeString(l),this.encode(u,e+1))}}catch(t){n={error:t}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}},t.prototype.encodeExtension=function(t){var e=t.data.length;if(1===e)this.writeU8(212);else if(2===e)this.writeU8(213);else if(4===e)this.writeU8(214);else if(8===e)this.writeU8(215);else if(16===e)this.writeU8(216);else if(e<256)this.writeU8(199),this.writeU8(e);else if(e<65536)this.writeU8(200),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too large extension object: "+e);this.writeU8(201),this.writeU32(e)}this.writeI8(t.type),this.writeU8a(t.data)},t.prototype.writeU8=function(t){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,t),this.pos++},t.prototype.writeU8a=function(t){var e=t.length;this.ensureBufferSizeToWrite(e),this.bytes.set(t,this.pos),this.pos+=e},t.prototype.writeI8=function(t){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,t),this.pos++},t.prototype.writeU16=function(t){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,t),this.pos+=2},t.prototype.writeI16=function(t){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,t),this.pos+=2},t.prototype.writeU32=function(t){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,t),this.pos+=4},t.prototype.writeI32=function(t){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,t),this.pos+=4},t.prototype.writeF32=function(t){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,t),this.pos+=4},t.prototype.writeF64=function(t){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,t),this.pos+=8},t.prototype.writeU64=function(t){this.ensureBufferSizeToWrite(8),function(t,e,n){var r=n/4294967296,s=n;t.setUint32(e,r),t.setUint32(e+4,s)}(this.view,this.pos,t),this.pos+=8},t.prototype.writeI64=function(t){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,t),this.pos+=8},t}(),T={};function $(t,e){void 0===e&&(e=T);var n=new C(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined);return n.encode(t,1),n.getUint8Array()}function E(t){return(t<0?"-":"")+"0x"+Math.abs(t).toString(16).padStart(2,"0")}var A=function(){function t(t,e){void 0===t&&(t=16),void 0===e&&(e=16),this.maxKeyLength=t,this.maxLengthPerKey=e,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return t.prototype.canBeCached=function(t){return t>0&&t<=this.maxKeyLength},t.prototype.get=function(t,e,n){var r=this.caches[n-1],s=r.length;t:for(var a=0;a<s;a++){for(var o=r[a],i=o.bytes,l=0;l<n;l++)if(i[l]!==t[e+l])continue t;return o.value}return null},t.prototype.store=function(t,e){var n=this.caches[t.length-1],r={bytes:t,value:e};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},t.prototype.decode=function(t,e,n){var r=this.get(t,e,n);if(null!=r)return r;var s=c(t,e,n),a=Uint8Array.prototype.slice.call(t,e,e+n);return this.store(a,s),s},t}(),R=function(t,e){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}},M=function(t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t="function"==typeof __values?__values(t):t[Symbol.iterator](),e={},r("next"),r("throw"),r("return"),e[Symbol.asyncIterator]=function(){return this},e);function r(n){e[n]=t[n]&&function(e){return new Promise((function(r,s){!function(t,e,n,r){Promise.resolve(r).then((function(e){t({value:e,done:n})}),e)}(r,s,(e=t[n](e)).done,e.value)}))}}},F=function(t){return this instanceof F?(this.v=t,this):new F(t)},D=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(t,e||[]),a=[];return r={},o("next"),o("throw"),o("return"),r[Symbol.asyncIterator]=function(){return this},r;function o(t){s[t]&&(r[t]=function(e){return new Promise((function(n,r){a.push([t,e,n,r])>1||i(t,e)}))})}function i(t,e){try{(n=s[t](e)).value instanceof F?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(t){c(a[0][3],t)}var n}function l(t){i("next",t)}function u(t){i("throw",t)}function c(t,e){t(e),a.shift(),a.length&&i(a[0][0],a[0][1])}},_=new DataView(new ArrayBuffer(0)),O=new Uint8Array(_.buffer),L=function(){try{_.getInt8(0)}catch(t){return t.constructor}throw new Error("never reached")}(),z=new L("Insufficient data"),P=new A,B=function(){function t(t,e,n,r,s,a,o,i){void 0===t&&(t=I.defaultCodec),void 0===n&&(n=4294967295),void 0===r&&(r=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=4294967295),void 0===o&&(o=4294967295),void 0===i&&(i=P),this.extensionCodec=t,this.context=e,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=a,this.maxExtLength=o,this.cachedKeyDecoder=i,this.totalPos=0,this.pos=0,this.view=_,this.bytes=O,this.headByte=-1,this.stack=[]}return t.prototype.setBuffer=function(t){this.bytes=N(t),this.view=function(t){if(t instanceof ArrayBuffer)return new DataView(t);var e=N(t);return new DataView(e.buffer,e.byteOffset,e.byteLength)}(this.bytes),this.pos=0},t.prototype.appendBuffer=function(t){if(-1!==this.headByte||this.hasRemaining()){var e=this.bytes.subarray(this.pos),n=N(t),r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),this.setBuffer(r)}else this.setBuffer(t)},t.prototype.hasRemaining=function(t){return void 0===t&&(t=1),this.view.byteLength-this.pos>=t},t.prototype.createNoExtraBytesError=function(t){var e=this.view,n=this.pos;return new RangeError("Extra "+(e.byteLength-n)+" byte(s) found at buffer["+t+"]")},t.prototype.decodeSingleSync=function(){var t=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return t},t.prototype.decodeSingleAsync=function(t){var e,n,r,s;return function(t,e,n,r){return new(n||(n=Promise))((function(s,a){function o(t){try{l(r.next(t))}catch(t){a(t)}}function i(t){try{l(r.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,i)}l((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var a,o,i,l,u,c,h,p;return R(this,(function(d){switch(d.label){case 0:a=!1,d.label=1;case 1:d.trys.push([1,6,7,12]),e=M(t),d.label=2;case 2:return[4,e.next()];case 3:if((n=d.sent()).done)return[3,5];if(i=n.value,a)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(i);try{o=this.decodeSync(),a=!0}catch(t){if(!(t instanceof L))throw t}this.totalPos+=this.pos,d.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=d.sent(),r={error:l},[3,12];case 7:return d.trys.push([7,,10,11]),n&&!n.done&&(s=e.return)?[4,s.call(e)]:[3,9];case 8:d.sent(),d.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,o]}throw c=(u=this).headByte,h=u.pos,p=u.totalPos,new RangeError("Insufficient data in parcing "+E(c)+" at "+p+" ("+h+" in the current buffer)")}}))}))},t.prototype.decodeArrayStream=function(t){return this.decodeMultiAsync(t,!0)},t.prototype.decodeStream=function(t){return this.decodeMultiAsync(t,!1)},t.prototype.decodeMultiAsync=function(t,e){return D(this,arguments,(function(){var n,r,s,a,o,i,l,u,c;return R(this,(function(h){switch(h.label){case 0:n=e,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),s=M(t),h.label=2;case 2:return[4,F(s.next())];case 3:if((a=h.sent()).done)return[3,12];if(o=a.value,e&&0===r)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,F(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((i=h.sent())instanceof L))throw i;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),a&&!a.done&&(c=s.return)?[4,F(c.call(s))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},t.prototype.decodeSync=function(){t:for(;;){var t=this.readHeadByte(),e=void 0;if(t>=224)e=t-256;else if(t<192)if(t<128)e=t;else if(t<144){if(0!=(r=t-128)){this.pushMapState(r),this.complete();continue t}e={}}else if(t<160){if(0!=(r=t-144)){this.pushArrayState(r),this.complete();continue t}e=[]}else{var n=t-160;e=this.decodeUtf8String(n,0)}else if(192===t)e=null;else if(194===t)e=!1;else if(195===t)e=!0;else if(202===t)e=this.readF32();else if(203===t)e=this.readF64();else if(204===t)e=this.readU8();else if(205===t)e=this.readU16();else if(206===t)e=this.readU32();else if(207===t)e=this.readU64();else if(208===t)e=this.readI8();else if(209===t)e=this.readI16();else if(210===t)e=this.readI32();else if(211===t)e=this.readI64();else if(217===t)n=this.lookU8(),e=this.decodeUtf8String(n,1);else if(218===t)n=this.lookU16(),e=this.decodeUtf8String(n,2);else if(219===t)n=this.lookU32(),e=this.decodeUtf8String(n,4);else if(220===t){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(221===t){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue t}e=[]}else if(222===t){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue t}e={}}else if(223===t){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue t}e={}}else if(196===t){var r=this.lookU8();e=this.decodeBinary(r,1)}else if(197===t)r=this.lookU16(),e=this.decodeBinary(r,2);else if(198===t)r=this.lookU32(),e=this.decodeBinary(r,4);else if(212===t)e=this.decodeExtension(1,0);else if(213===t)e=this.decodeExtension(2,0);else if(214===t)e=this.decodeExtension(4,0);else if(215===t)e=this.decodeExtension(8,0);else if(216===t)e=this.decodeExtension(16,0);else if(199===t)r=this.lookU8(),e=this.decodeExtension(r,1);else if(200===t)r=this.lookU16(),e=this.decodeExtension(r,2);else{if(201!==t)throw new Error("Unrecognized type byte: "+E(t));r=this.lookU32(),e=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var a=s[s.length-1];if(0===a.type){if(a.array[a.position]=e,a.position++,a.position!==a.size)continue t;s.pop(),e=a.array}else{if(1===a.type){if(void 0,"string"!=(o=typeof e)&&"number"!==o)throw new Error("The type of key must be string or number but "+typeof e);a.key=e,a.type=2;continue t}if(a.map[a.key]=e,a.readCount++,a.readCount!==a.size){a.key=null,a.type=1;continue t}s.pop(),e=a.map}}return e}var o},t.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},t.prototype.complete=function(){this.headByte=-1},t.prototype.readArraySize=function(){var t=this.readHeadByte();switch(t){case 220:return this.readU16();case 221:return this.readU32();default:if(t<160)return t-144;throw new Error("Unrecognized array type byte: "+E(t))}},t.prototype.pushMapState=function(t){if(t>this.maxMapLength)throw new Error("Max length exceeded: map length ("+t+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:t,key:null,readCount:0,map:{}})},t.prototype.pushArrayState=function(t){if(t>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+t+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:t,array:new Array(t),position:0})},t.prototype.decodeUtf8String=function(t,e){var n;if(t>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+t+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+e+t)throw z;var r,s=this.pos+e;return r=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(t))?this.cachedKeyDecoder.decode(this.bytes,s,t):a&&t>p?function(t,e,n){var r=t.subarray(e,e+n);return h.decode(r)}(this.bytes,s,t):c(this.bytes,s,t),this.pos+=e+t,r},t.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},t.prototype.decodeBinary=function(t,e){if(t>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+t+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(t+e))throw z;var n=this.pos+e,r=this.bytes.subarray(n,n+t);return this.pos+=e+t,r},t.prototype.decodeExtension=function(t,e){if(t>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+t+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+e),r=this.decodeBinary(t,e+1);return this.extensionCodec.decode(r,n,this.context)},t.prototype.lookU8=function(){return this.view.getUint8(this.pos)},t.prototype.lookU16=function(){return this.view.getUint16(this.pos)},t.prototype.lookU32=function(){return this.view.getUint32(this.pos)},t.prototype.readU8=function(){var t=this.view.getUint8(this.pos);return this.pos++,t},t.prototype.readI8=function(){var t=this.view.getInt8(this.pos);return this.pos++,t},t.prototype.readU16=function(){var t=this.view.getUint16(this.pos);return this.pos+=2,t},t.prototype.readI16=function(){var t=this.view.getInt16(this.pos);return this.pos+=2,t},t.prototype.readU32=function(){var t=this.view.getUint32(this.pos);return this.pos+=4,t},t.prototype.readI32=function(){var t=this.view.getInt32(this.pos);return this.pos+=4,t},t.prototype.readU64=function(){var t,e,n=(t=this.view,e=this.pos,4294967296*t.getUint32(e)+t.getUint32(e+4));return this.pos+=8,n},t.prototype.readI64=function(){var t=m(this.view,this.pos);return this.pos+=8,t},t.prototype.readF32=function(){var t=this.view.getFloat32(this.pos);return this.pos+=4,t},t.prototype.readF64=function(){var t=this.view.getFloat64(this.pos);return this.pos+=8,t},t}(),V={};function W(t,e){void 0===e&&(e=V);var n=new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength);return n.setBuffer(t),n.decodeSingleSync()}var U=function(t,e){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}},G=function(t){return this instanceof G?(this.v=t,this):new G(t)},H=function(t,e,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(t,e||[]),a=[];return r={},o("next"),o("throw"),o("return"),r[Symbol.asyncIterator]=function(){return this},r;function o(t){s[t]&&(r[t]=function(e){return new Promise((function(n,r){a.push([t,e,n,r])>1||i(t,e)}))})}function i(t,e){try{(n=s[t](e)).value instanceof G?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(t){c(a[0][3],t)}var n}function l(t){i("next",t)}function u(t){i("throw",t)}function c(t,e){t(e),a.shift(),a.length&&i(a[0][0],a[0][1])}};function j(t){if(null==t)throw new Error("Assertion Failure: value must not be null nor undefined")}function q(t){return null!=t[Symbol.asyncIterator]?t:function(t){return H(this,arguments,(function(){var e,n,r,s;return U(this,(function(a){switch(a.label){case 0:e=t.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,G(e.read())];case 3:return n=a.sent(),r=n.done,s=n.value,r?[4,G(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return j(s),[4,G(s)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return e.releaseLock(),[7];case 10:return[2]}}))}))}(t)}function K(t,e){return void 0===e&&(e=V),function(t,e,n,r){return new(n||(n=Promise))((function(s,a){function o(t){try{l(r.next(t))}catch(t){a(t)}}function i(t){try{l(r.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,i)}l((r=r.apply(t,e||[])).next())}))}(this,void 0,void 0,(function(){var n;return function(t,e){var n,r,s,a,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function i(a){return function(i){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((s=(s=o.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){o.label=a[1];break}if(6===a[0]&&o.label<s[1]){o.label=s[1],s=a;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(a);break}s[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,i])}}}(this,(function(r){return n=q(t),[2,new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeSingleAsync(n)]}))}))}function X(t,e){void 0===e&&(e=V);var n=q(t);return new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeArrayStream(n)}function Y(t,e){void 0===e&&(e=V);var n=q(t);return new B(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength).decodeStream(n)}}])},47091:(t,e,n)=>{"use strict";n.r(e),n.d(e,{Abs:()=>jt,Acos:()=>qt,Acosh:()=>Kt,AdadeltaOptimizer:()=>Ui,AdagradOptimizer:()=>Hi,AdamOptimizer:()=>Ki,AdamaxOptimizer:()=>tl,Add:()=>Xt,AddN:()=>Yt,All:()=>Zt,Any:()=>Jt,ArgMax:()=>Qt,ArgMin:()=>te,Asin:()=>ee,Asinh:()=>ne,Atan:()=>re,Atan2:()=>ae,Atanh:()=>se,AvgPool:()=>oe,AvgPool3D:()=>le,AvgPool3DGrad:()=>ue,AvgPoolGrad:()=>ie,BatchMatMul:()=>ce,BatchToSpaceND:()=>he,Bincount:()=>pe,BroadcastTo:()=>de,Callback:()=>kk,CallbackList:()=>ky,Cast:()=>fe,Ceil:()=>me,ClipByValue:()=>ge,Complex:()=>ye,ComplexAbs:()=>be,Concat:()=>xe,Conv2D:()=>we,Conv2DBackpropFilter:()=>ve,Conv2DBackpropInput:()=>ke,Conv3D:()=>Ie,Conv3DBackpropFilterV2:()=>Ne,Conv3DBackpropInputV2:()=>Se,Cos:()=>Ce,Cosh:()=>Te,CropAndResize:()=>Ee,Cumsum:()=>$e,CustomCallback:()=>Sy,DataStorage:()=>U,DenseBincount:()=>Ae,DepthToSpace:()=>Re,DepthwiseConv2dNative:()=>Me,DepthwiseConv2dNativeBackpropFilter:()=>Fe,DepthwiseConv2dNativeBackpropInput:()=>De,Diag:()=>_e,Dilation2D:()=>Oe,Dilation2DBackpropFilter:()=>ze,Dilation2DBackpropInput:()=>Le,ENV:()=>Ut,EarlyStopping:()=>Sk,Einsum:()=>Be,Elu:()=>Ve,EluGrad:()=>We,Environment:()=>Pt,Equal:()=>Ge,Erf:()=>Ue,Exp:()=>He,ExpandDims:()=>je,Expm1:()=>qe,FFT:()=>Ke,Fill:()=>Xe,FlipLeftRight:()=>Ye,Floor:()=>Ze,FloorDiv:()=>Je,FromPixels:()=>Vr,FusedBatchNorm:()=>Qe,FusedConv2D:()=>Gr,FusedDepthwiseConv2D:()=>Hr,GatherNd:()=>en,GatherV2:()=>tn,GraphModel:()=>PI,Greater:()=>nn,GreaterEqual:()=>rn,History:()=>Ny,IFFT:()=>an,Identity:()=>sn,Imag:()=>on,InputSpec:()=>uy,IsFinite:()=>ln,IsInf:()=>un,IsNan:()=>cn,KernelBackend:()=>G,LRN:()=>vn,LRNGrad:()=>kn,LayerVariable:()=>oy,LayersModel:()=>Ab,LeakyRelu:()=>hn,Less:()=>pn,LessEqual:()=>dn,LinSpace:()=>fn,Log:()=>mn,Log1p:()=>gn,LogSoftmax:()=>wn,LogicalAnd:()=>yn,LogicalNot:()=>bn,LogicalOr:()=>xn,Max:()=>In,MaxPool:()=>Sn,MaxPool3D:()=>Tn,MaxPool3DGrad:()=>$n,MaxPoolGrad:()=>Cn,MaxPoolWithArgmax:()=>En,Maximum:()=>Nn,Mean:()=>An,Min:()=>Rn,Minimum:()=>Mn,MirrorPad:()=>Fn,Mod:()=>Dn,MomentumOptimizer:()=>nl,Multinomial:()=>_n,Multiply:()=>On,Neg:()=>Ln,NonMaxSuppressionV3:()=>Pn,NonMaxSuppressionV4:()=>Bn,NonMaxSuppressionV5:()=>Vn,NotEqual:()=>zn,OP_SCOPE_SUFFIX:()=>Zs,OneHot:()=>Un,OnesLike:()=>Wn,Optimizer:()=>Wi,Pack:()=>Gn,PadV2:()=>Hn,Pool:()=>jn,Pow:()=>qn,Prelu:()=>Kn,Prod:()=>Xn,RMSPropOptimizer:()=>rl,RNN:()=>Ox,Range:()=>Yn,Rank:()=>Ns,Real:()=>Zn,RealDiv:()=>Pe,Reciprocal:()=>Jn,Reduction:()=>Sp,Relu:()=>Qn,Relu6:()=>ar,Reshape:()=>tr,ResizeBilinear:()=>rr,ResizeBilinearGrad:()=>sr,ResizeNearestNeighbor:()=>er,ResizeNearestNeighborGrad:()=>nr,Reverse:()=>or,RotateWithOffset:()=>Wr,Round:()=>ir,Rsqrt:()=>lr,SGDOptimizer:()=>el,ScatterNd:()=>ur,Select:()=>cr,Selu:()=>hr,Sequential:()=>Fb,Sigmoid:()=>gr,Sign:()=>mr,Sin:()=>dr,Sinh:()=>fr,Slice:()=>pr,Softmax:()=>kr,Softplus:()=>yr,SpaceToBatchND:()=>wr,SparseFillEmptyRows:()=>Ir,SparseReshape:()=>Nr,SparseToDense:()=>Sr,SplitV:()=>vr,Sqrt:()=>br,Square:()=>Tr,SquaredDifference:()=>Cr,Step:()=>Br,StridedSlice:()=>$r,Sub:()=>Er,Sum:()=>xr,SymbolicTensor:()=>cy,Tan:()=>Ar,Tanh:()=>Rr,Tensor:()=>vs,TensorBuffer:()=>ys,Tile:()=>Mr,TopK:()=>Fr,Transform:()=>Dr,Transpose:()=>_r,Unique:()=>Or,Unpack:()=>Lr,UnsortedSegmentSum:()=>zr,Variable:()=>Is,ZerosLike:()=>Pr,_FusedMatMul:()=>Ur,abs:()=>Xi,acos:()=>sl,acosh:()=>al,add:()=>Ti,addN:()=>ol,all:()=>il,any:()=>ll,argMax:()=>ul,argMin:()=>cl,asin:()=>hl,asinh:()=>pl,atan:()=>dl,atan2:()=>fl,atanh:()=>ml,avgPool:()=>Al,avgPool3d:()=>Rl,backend:()=>Si,backend_util:()=>g,basicLSTMCell:()=>Ol,batchNorm:()=>zl,batchNorm2d:()=>Pl,batchNorm3d:()=>Bl,batchNorm4d:()=>Vl,batchToSpaceND:()=>Ll,bincount:()=>Wl,booleanMaskAsync:()=>Ah,broadcastTo:()=>Ul,browser:()=>l,buffer:()=>qa,callbacks:()=>Ck,cast:()=>Ka,ceil:()=>Gl,clipByValue:()=>Hl,clone:()=>Xa,complex:()=>Qs,concat:()=>Ml,concat1d:()=>jl,concat2d:()=>ql,concat3d:()=>Kl,concat4d:()=>Xl,constraints:()=>b,conv1d:()=>Zl,conv2d:()=>Yl,conv2dTranspose:()=>Ql,conv3d:()=>tu,conv3dTranspose:()=>nu,copyRegisteredKernels:()=>es,cos:()=>ru,cosh:()=>su,cosineWindow:()=>Ph,cumsum:()=>au,customGrad:()=>Pi,data:()=>V,denseBincount:()=>ou,deprecationWarn:()=>ui,depthToSpace:()=>iu,depthwiseConv2d:()=>lu,deregisterOp:()=>Mk,device_util:()=>a,diag:()=>uu,dilation2d:()=>cu,disableDeprecationWarnings:()=>li,dispose:()=>mi,disposeVariables:()=>ci,div:()=>Ei,divNoNan:()=>du,dot:()=>fu,dropout:()=>Lh,einsum:()=>mu,elu:()=>gu,enableDebugMode:()=>ii,enableProdMode:()=>oi,enclosingPowerOfTwo:()=>zh,engine:()=>hi,env:()=>Vt,equal:()=>hu,erf:()=>yu,exp:()=>bu,expandDims:()=>xu,expm1:()=>wu,eye:()=>ku,fft:()=>oh,fill:()=>Gi,findBackend:()=>ki,findBackendFactory:()=>Ii,floor:()=>Iu,floorDiv:()=>$i,fused:()=>f,gather:()=>Nu,gatherND:()=>Oh,gather_util:()=>u,getBackend:()=>wi,getGradient:()=>Xr,getKernel:()=>Kr,getKernelsForBackend:()=>Yr,grad:()=>Di,grads:()=>_i,greater:()=>Su,greaterEqual:()=>Cu,ifft:()=>ih,imag:()=>Tu,image:()=>Pp,inTopKAsync:()=>Bh,initializers:()=>x,input:()=>Lb,io:()=>o,irfft:()=>lh,isFinite:()=>$u,isInf:()=>Eu,isNaN:()=>Au,keep:()=>gi,kernel_impls:()=>y,layers:()=>w,leakyRelu:()=>Ru,less:()=>Mu,lessEqual:()=>Fu,linalg:()=>Bp,linspace:()=>Du,loadGraphModel:()=>BI,loadLayersModel:()=>Ob,localResponseNormalization:()=>_u,log:()=>Ou,log1p:()=>Lu,logSigmoid:()=>Bu,logSoftmax:()=>Uu,logSumExp:()=>Ju,logicalAnd:()=>Qu,logicalNot:()=>tc,logicalOr:()=>ec,logicalXor:()=>nc,losses:()=>Vp,matMul:()=>mo,math:()=>i,max:()=>Vu,maxPool:()=>rc,maxPool3d:()=>sc,maxPoolWithArgmax:()=>ac,maximum:()=>Qi,mean:()=>oc,memory:()=>pi,meshgrid:()=>uc,metrics:()=>v,min:()=>cc,minimum:()=>hc,mirrorPad:()=>pc,mod:()=>dc,model:()=>Db,models:()=>k,moments:()=>fc,movingAverage:()=>Fh,mul:()=>Ai,multiRNNCell:()=>mc,multinomial:()=>gc,neg:()=>zu,nextFrame:()=>jp,norm:()=>Mh,notEqual:()=>yc,oneHot:()=>go,ones:()=>lc,onesLike:()=>bc,op:()=>Js,outerProduct:()=>xc,pad:()=>wc,pad1d:()=>vc,pad2d:()=>kc,pad3d:()=>Ic,pad4d:()=>Nc,pool:()=>Cc,pow:()=>ji,prelu:()=>Tc,print:()=>Ya,prod:()=>$c,profile:()=>di,rand:()=>Ec,randomGamma:()=>Dc,randomNormal:()=>_c,randomUniform:()=>Oc,range:()=>Lc,ready:()=>xi,real:()=>zc,reciprocal:()=>Pc,registerBackend:()=>Ni,registerCallbackConstructor:()=>zb,registerGradient:()=>Jr,registerKernel:()=>Zr,registerOp:()=>Ak,regularizers:()=>I,relu:()=>Bc,relu6:()=>Vc,removeBackend:()=>vi,reshape:()=>El,reverse:()=>Wc,reverse1d:()=>Uc,reverse2d:()=>Gc,reverse3d:()=>Hc,reverse4d:()=>jc,rfft:()=>ch,round:()=>qc,rsqrt:()=>Kc,scalar:()=>Vi,scatterND:()=>Dh,scatter_util:()=>c,selu:()=>Xc,separableConv2d:()=>Yc,sequential:()=>_b,serialization:()=>p,setBackend:()=>bi,setPlatform:()=>Ci,setdiff1dAsync:()=>Zc,sigmoid:()=>Fl,sign:()=>Jc,signal:()=>zp,sin:()=>Qc,sinh:()=>th,slice:()=>Dl,slice1d:()=>eh,slice2d:()=>nh,slice3d:()=>rh,slice4d:()=>sh,slice_util:()=>h,softmax:()=>ah,softplus:()=>Pu,spaceToBatchND:()=>Sc,sparse:()=>Wp,sparseToDense:()=>_h,spectral:()=>Lp,split:()=>uh,sqrt:()=>Ri,square:()=>Mi,squaredDifference:()=>hh,squeeze:()=>ph,stack:()=>dh,step:()=>fh,stridedSlice:()=>mh,sub:()=>qi,sum:()=>Wu,sumOutType:()=>Rs,tan:()=>gh,tanh:()=>_l,tensor:()=>ea,tensor1d:()=>yh,tensor2d:()=>bh,tensor3d:()=>xo,tensor4d:()=>xh,tensor5d:()=>wh,tensor6d:()=>vh,tensor_util:()=>s,test_util:()=>d,tidy:()=>fi,tile:()=>vu,time:()=>yi,topk:()=>kh,train:()=>Gp,transpose:()=>yo,truncatedNormal:()=>Ih,unique:()=>Nh,unregisterGradient:()=>ts,unregisterKernel:()=>Qr,unsortedSegmentSum:()=>Sh,unstack:()=>Ch,upcastType:()=>As,util:()=>r,valueAndGrad:()=>Oi,valueAndGrads:()=>Li,variable:()=>Th,variableGrads:()=>zi,version:()=>Xz,version_converter:()=>VI,version_core:()=>ai,version_layers:()=>ab,where:()=>pu,whereAsync:()=>Eh,zeros:()=>ic,zerosLike:()=>Fi});var r={};n.r(r),n.d(r,{arraysEqual:()=>at,assert:()=>Q,assertNonNegativeIntegerDimensions:()=>_t,assertNonNull:()=>et,assertShapesMatch:()=>tt,bytesFromStringArray:()=>kt,bytesPerElement:()=>vt,checkConversionForErrors:()=>yt,clamp:()=>K,computeStrides:()=>Et,createScalarValue:()=>rs,createShuffledIndices:()=>ut,decodeString:()=>ls,distSquared:()=>J,encodeString:()=>is,fetch:()=>os,flatten:()=>nt,getArrayFromDType:()=>gt,getTypedArrayFromDType:()=>mt,hasEncodingLoss:()=>xt,indexToLoc:()=>Lt,inferDtype:()=>Ct,inferFromImplicitShape:()=>pt,isBoolean:()=>Nt,isFunction:()=>Tt,isInt:()=>ot,isNumber:()=>St,isPromise:()=>zt,isScalarShape:()=>st,isString:()=>It,isTypedArray:()=>wt,isValidDtype:()=>bt,locToIndex:()=>Ot,makeOnesTypedArray:()=>Mt,makeZerosNestedTypedArray:()=>Dt,makeZerosTypedArray:()=>Ft,nearestDivisor:()=>$t,nearestLargerEven:()=>X,now:()=>as,parseAxisParam:()=>dt,randUniform:()=>Z,repeatedTry:()=>ht,rightPad:()=>ct,shuffle:()=>j,shuffleCombo:()=>q,sizeFromShape:()=>rt,sizeToSquarishShape:()=>lt,squeezeShape:()=>ft,sum:()=>Y,tanh:()=>it,toNestedArray:()=>Rt,toTypedArray:()=>ss});var s={};n.r(s),n.d(s,{assertTypesMatch:()=>Fs,getTensorsInContainer:()=>_s,isTensorInList:()=>Ds,makeTypesMatch:()=>Ms});var a={};n.r(a),n.d(a,{isBrowser:()=>Gs,isMobile:()=>Us});var o={};n.r(o),n.d(o,{browserFiles:()=>to,browserHTTPRequest:()=>uo,concatenateArrayBuffers:()=>la,copyModel:()=>Ua,decodeWeights:()=>sa,encodeWeights:()=>ra,fromMemory:()=>po,getLoadHandlers:()=>ga,getModelArtifactsInfoForJSON:()=>ca,getSaveHandlers:()=>ma,http:()=>lo,isHTTPScheme:()=>oo,listModels:()=>Va,loadWeights:()=>ro,moveModel:()=>Ga,registerLoadRouter:()=>fa,registerSaveRouter:()=>da,removeModel:()=>Wa,weightsLoaderFactory:()=>so,withSaveHandler:()=>fo});var i={};n.r(i),n.d(i,{confusionMatrix:()=>bo});var l={};n.r(l),n.d(l,{fromPixels:()=>No,fromPixelsAsync:()=>ko,toPixels:()=>Io});var u={};n.r(u),n.d(u,{prepareAndValidate:()=>So});var c={};n.r(c),n.d(c,{calculateShapes:()=>$o,validateInput:()=>To,validateUpdateShape:()=>Co});var h={};n.r(h),n.d(h,{assertParamsValid:()=>Eo,computeFlatOffset:()=>Wo,computeOutShape:()=>Ro,getNormalizedAxes:()=>_o,isSliceContinous:()=>Vo,maskToAxes:()=>Ao,parseSliceParams:()=>Uo,sliceInfo:()=>Go,startForAxis:()=>Po,startIndicesWithElidedDims:()=>Oo,stopForAxis:()=>Bo,stopIndicesWithElidedDims:()=>Lo,stridesForAxis:()=>zo,stridesWithElidedDims:()=>Mo});var p={};n.r(p),n.d(p,{Serializable:()=>Ho,SerializationMap:()=>jo,registerClass:()=>qo});var d={};n.r(d),n.d(d,{TEST_EPSILON_FLOAT16:()=>Ko,encodeStrings:()=>si,expectArrayBuffersEqual:()=>ri,expectArraysClose:()=>Xo,expectArraysEqual:()=>Qo,expectNumbersClose:()=>ti,expectPromiseToFail:()=>Jo,expectValuesInRange:()=>ni,testEpsilon:()=>Yo});var f={};n.r(f),n.d(f,{conv2d:()=>jh,depthwiseConv2d:()=>Xh,matMul:()=>Yh});var m={};n.r(m),n.d(m,{collectGatherOpShapeInfo:()=>Rd,computeOutShape:()=>Ad,segOpComputeOptimalWindowSize:()=>Ed});var g={};n.r(g),n.d(g,{ERF_A1:()=>od,ERF_A2:()=>id,ERF_A3:()=>ld,ERF_A4:()=>ud,ERF_A5:()=>cd,ERF_P:()=>ad,PARALLELIZE_THRESHOLD:()=>Xp,SELU_SCALE:()=>sd,SELU_SCALEALPHA:()=>rd,applyActivation:()=>Gh,assertAndGetBroadcastShape:()=>Ji,assertAxesAreInnerMostDims:()=>Ku,assertParamsConsistent:()=>qp,assignToTypedArray:()=>bd,axesAreInnerMostDims:()=>Gu,calculateShapes:()=>$o,checkEinsumDimSizes:()=>Nd,combineLocations:()=>Hu,complexWithEvenIndex:()=>md,complexWithOddIndex:()=>gd,computeConv2DInfo:()=>xl,computeConv3DInfo:()=>wl,computeDefaultPad:()=>vl,computeDilation2DInfo:()=>gl,computeOptimalWindowSize:()=>Yp,computeOutAndReduceShapes:()=>ju,computeOutShape:()=>Kp,computePool2DInfo:()=>yl,computePool3DInfo:()=>bl,convertConv2DDataFormat:()=>$l,decodeEinsumEquation:()=>kd,eitherStridesOrDilationsAreOne:()=>Tl,expandShapeToKeepDim:()=>qu,exponent:()=>wd,exponents:()=>xd,fromStringArrayToUint8:()=>Fd,fromUint8ToStringArray:()=>Md,getAxesPermutation:()=>Xu,getBroadcastDims:()=>Yi,getComplexWithIndex:()=>yd,getEinsumComputePath:()=>Sd,getEinsumPermutation:()=>Id,getFusedBiasGradient:()=>Uh,getFusedDyActivation:()=>Wh,getImageCenter:()=>Zp,getInnerMostAxes:()=>Zu,getPermuted:()=>Qp,getReductionAxes:()=>Zi,getReshaped:()=>Jp,getReshapedPermuted:()=>td,getSliceBeginCoords:()=>ed,getSliceSize:()=>nd,getUndoAxesPermutation:()=>Yu,isIdentityPermutation:()=>Cd,log:()=>pd,mergeRealAndImagArrays:()=>dd,prepareAndValidate:()=>So,prepareSplitSize:()=>$d,segment_util:()=>m,shouldFuse:()=>Hh,slice_util:()=>h,splitRealAndImagArrays:()=>fd,tupleValuesAreOne:()=>Cl,upcastType:()=>As,validateInput:()=>To,validateUpdateShape:()=>Co,warn:()=>hd});var y={};n.r(y),n.d(y,{nonMaxSuppressionV3Impl:()=>lp,nonMaxSuppressionV4Impl:()=>up,nonMaxSuppressionV5Impl:()=>cp,whereImpl:()=>$h});var b={};n.r(b),n.d(b,{maxNorm:()=>$m,minMaxNorm:()=>Rm,nonNeg:()=>Am,unitNorm:()=>Em});var x={};n.r(x),n.d(x,{constant:()=>zg,glorotNormal:()=>Hg,glorotUniform:()=>Gg,heNormal:()=>jg,heUniform:()=>qg,identity:()=>Wg,leCunNormal:()=>Kg,leCunUniform:()=>Xg,ones:()=>Lg,orthogonal:()=>Yg,randomNormal:()=>Bg,randomUniform:()=>Pg,truncatedNormal:()=>Vg,varianceScaling:()=>Ug,zeros:()=>Og});var w={};n.r(w),n.d(w,{Layer:()=>fy,RNN:()=>Ox,RNNCell:()=>Lx,activation:()=>rv,add:()=>pv,alphaDropout:()=>nk,average:()=>dv,averagePooling1d:()=>kv,averagePooling2d:()=>Sv,averagePooling3d:()=>$v,avgPool1d:()=>Iv,avgPool2d:()=>Cv,avgPool3d:()=>Ev,avgPooling1d:()=>Nv,avgPooling2d:()=>Tv,avgPooling3d:()=>Av,batchNormalization:()=>xv,bidirectional:()=>Kv,concatenate:()=>fv,conv1d:()=>Kw,conv2d:()=>Xw,conv2dTranspose:()=>Yw,conv3d:()=>Zw,conv3dTranspose:()=>Jw,convLstm2d:()=>Gv,convLstm2dCell:()=>Hv,cropping2D:()=>tv,dense:()=>sv,depthwiseConv2d:()=>nv,dot:()=>bv,dropout:()=>av,elu:()=>Ww,embedding:()=>hv,flatten:()=>iv,gaussianDropout:()=>ek,gaussianNoise:()=>tk,globalAveragePooling1d:()=>Rv,globalAveragePooling2d:()=>Mv,globalMaxPool1d:()=>Yv,globalMaxPool2d:()=>Zv,globalMaxPooling1d:()=>Fv,globalMaxPooling2d:()=>Dv,gru:()=>zv,gruCell:()=>Pv,input:()=>Lb,inputLayer:()=>Vw,layerNormalization:()=>wv,leakyReLU:()=>Gw,lstm:()=>Bv,lstmCell:()=>Vv,masking:()=>rk,maxPool1d:()=>Jv,maxPool2d:()=>Qv,maxPooling1d:()=>_v,maxPooling2d:()=>Ov,maxPooling3d:()=>Lv,maximum:()=>mv,minimum:()=>gv,multiply:()=>yv,permute:()=>cv,prelu:()=>Hw,reLU:()=>Uw,repeatVector:()=>lv,reshape:()=>uv,rnn:()=>jv,separableConv2d:()=>Qw,simpleRNN:()=>Wv,simpleRNNCell:()=>Uv,softmax:()=>jw,spatialDropout1d:()=>ov,stackedRNNCells:()=>qv,thresholdedReLU:()=>qw,timeDistributed:()=>Xv,upSampling2d:()=>ev,zeroPadding2d:()=>vv});var v={};n.r(v),n.d(v,{MAPE:()=>fk,MSE:()=>yk,binaryAccuracy:()=>sk,binaryCrossentropy:()=>ak,categoricalAccuracy:()=>ik,categoricalCrossentropy:()=>lk,cosineProximity:()=>hk,mape:()=>mk,meanAbsoluteError:()=>pk,meanAbsolutePercentageError:()=>dk,meanSquaredError:()=>gk,mse:()=>bk,precision:()=>uk,recall:()=>ck,sparseCategoricalAccuracy:()=>ok});var k={};n.r(k),n.d(k,{modelFromJSON:()=>Mb});var I={};n.r(I),n.d(I,{l1:()=>wk,l1l2:()=>xk,l2:()=>vk});var N={};n.r(N),n.d(N,{json:()=>Bk});var S={};n.r(S),n.d(S,{json:()=>Vk});var C={};n.r(C),n.d(C,{json:()=>Wk});var T={};n.r(T),n.d(T,{json:()=>Uk});var $={};n.r($),n.d($,{json:()=>Gk});var E={};n.r(E),n.d(E,{json:()=>Hk});var A={};n.r(A),n.d(A,{json:()=>jk});var R={};n.r(R),n.d(R,{json:()=>qk});var M={};n.r(M),n.d(M,{json:()=>Kk});var F={};n.r(F),n.d(F,{json:()=>Xk});var D={};n.r(D),n.d(D,{json:()=>Yk});var _={};n.r(_),n.d(_,{json:()=>Zk});var O={};n.r(O),n.d(O,{json:()=>Jk});var L={};n.r(L),n.d(L,{json:()=>Qk});var z={};n.r(z),n.d(z,{json:()=>tI});var P={};n.r(P),n.d(P,{json:()=>eI});var B={};n.r(B),n.d(B,{json:()=>nI});var V={};n.r(V),n.d(V,{CSVDataset:()=>EN,Dataset:()=>yN,FileDataSource:()=>VN,TextLineDataset:()=>kN,URLDataSource:()=>WN,array:()=>xN,csv:()=>UN,func:()=>GN,generator:()=>HN,microphone:()=>qN,version_data:()=>KN,webcam:()=>jN,zip:()=>wN});var W={};n.r(W),n.d(W,{addImpl:()=>CS,bincountImpl:()=>bC,bincountReduceImpl:()=>xC,ceilImpl:()=>kC,concatImpl:()=>$C,expImpl:()=>vT,expm1Impl:()=>CT,floorImpl:()=>UT,gatherV2Impl:()=>JT,greaterImpl:()=>t$,lessImpl:()=>d$,linSpaceImpl:()=>x$,logImpl:()=>v$,maxImpl:()=>O$,maximumImpl:()=>P$,minimumImpl:()=>X$,multiplyImpl:()=>nT,negImpl:()=>aE,notEqualImpl:()=>dE,prodImpl:()=>CE,rangeImpl:()=>$E,rsqrtImpl:()=>BE,simpleAbsImpl:()=>_S,sliceImpl:()=>fC,sparseFillEmptyRowsImpl:()=>oA,sparseReshapeImpl:()=>lA,squaredDifferenceImpl:()=>mA,stridedSliceImpl:()=>wA,subImpl:()=>MT,tileImpl:()=>SA,topKImpl:()=>CA,transposeImpl:()=>WS,uniqueImpl:()=>RA});class U{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class G{refCount(t){return H("refCount")}incRef(t){return H("incRef")}timerAvailable(){return!0}time(t){return H("time")}read(t){return H("read")}readSync(t){return H("readSync")}numDataIds(){return H("numDataIds")}disposeData(t,e){return H("disposeData")}write(t,e,n){return H("write")}move(t,e,n,r,s){return H("move")}memory(){return H("memory")}floatPrecision(){return H("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return H("dispose")}}function H(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function j(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function q(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n,r,s=t.length,a=0;for(;s>0;)a=Math.random()*s|0,s--,n=t[s],r=e[s],t[s]=t[a],e[s]=e[a],t[a]=n,e[a]=r}function K(t,e,n){return Math.max(t,Math.min(e,n))}function X(t){return t%2==0?t:t+1}function Y(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function Z(t,e){const n=Math.random();return e*n+(1-n)*t}function J(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n}function Q(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function tt(t,e,n=""){Q(at(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function et(t){Q(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function nt(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||wt(t)&&!n)for(let r=0;r<t.length;++r)nt(t[r],e,n);else e.push(t);return e}function rt(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function st(t){return 0===t.length}function at(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function ot(t){return t%1==0}function it(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function lt(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function ut(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return j(e),e}function ct(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function ht(t,e=(t=>0),n){return new Promise(((r,s)=>{let a=0;const o=()=>{if(t())return void r();a++;const i=e(a);null!=n&&a>=n?s():setTimeout(o,i)};o()}))}function pt(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function dt(t,e){const n=e.length;return Q((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),Q(t.every((t=>ot(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function ft(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:dt(e,t).sort();let o=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[o]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[o]||a[o]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[o]<=e&&o++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function mt(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function gt(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function yt(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function bt(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function xt(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function wt(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function vt(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function kt(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function It(t){return"string"==typeof t||t instanceof String}function Nt(t){return"boolean"==typeof t}function St(t){return"number"==typeof t}function Ct(t){return Array.isArray(t)?Ct(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":St(t)?"float32":It(t)?"string":Nt(t)?"bool":"float32"}function Tt(t){return!!(t&&t.constructor&&t.call&&t.apply)}function $t(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Et(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function At(t,e,n,r=!1){const s=new Array;if(1===e.length){const a=e[0]*(r?2:1);for(let e=0;e<a;e++)s[e]=n[t+e]}else{const a=e[0],o=e.slice(1),i=o.reduce(((t,e)=>t*e))*(r?2:1);for(let e=0;e<a;e++)s[e]=At(t+e*i,o,n,r)}return s}function Rt(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return At(0,t,e,n)}function Mt(t,e){const n=Ft(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function Ft(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function Dt(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Rt(t,new Float32Array(n));if("int32"===e)return Rt(t,new Int32Array(n));if("bool"===e)return Rt(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function _t(t){t.forEach((e=>{Q(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function Ot(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function Lt(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function zt(t){return t&&t.then&&"function"==typeof t.then}class Pt{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Bt,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(zt(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function Bt(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function Vt(){return Ut}let Wt,Ut=null;function Gt(){if(null==Wt){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}Wt=t}return Wt}function Ht(t,e){const n=function(){const t=Gt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const jt="Abs",qt="Acos",Kt="Acosh",Xt="Add",Yt="AddN",Zt="All",Jt="Any",Qt="ArgMax",te="ArgMin",ee="Asin",ne="Asinh",re="Atan",se="Atanh",ae="Atan2",oe="AvgPool",ie="AvgPoolGrad",le="AvgPool3D",ue="AvgPool3DGrad",ce="BatchMatMul",he="BatchToSpaceND",pe="Bincount",de="BroadcastTo",fe="Cast",me="Ceil",ge="ClipByValue",ye="Complex",be="ComplexAbs",xe="Concat",we="Conv2D",ve="Conv2DBackpropFilter",ke="Conv2DBackpropInput",Ie="Conv3D",Ne="Conv3DBackpropFilterV2",Se="Conv3DBackpropInputV2",Ce="Cos",Te="Cosh",$e="Cumsum",Ee="CropAndResize",Ae="DenseBincount",Re="DepthToSpace",Me="DepthwiseConv2dNative",Fe="DepthwiseConv2dNativeBackpropFilter",De="DepthwiseConv2dNativeBackpropInput",_e="Diag",Oe="Dilation2D",Le="Dilation2DBackpropInput",ze="Dilation2DBackpropFilter",Pe="RealDiv",Be="Einsum",Ve="Elu",We="EluGrad",Ue="Erf",Ge="Equal",He="Exp",je="ExpandDims",qe="Expm1",Ke="FFT",Xe="Fill",Ye="FlipLeftRight",Ze="Floor",Je="FloorDiv",Qe="FusedBatchNorm",tn="GatherV2",en="GatherNd",nn="Greater",rn="GreaterEqual",sn="Identity",an="IFFT",on="Imag",ln="IsFinite",un="IsInf",cn="IsNan",hn="LeakyRelu",pn="Less",dn="LessEqual",fn="LinSpace",mn="Log",gn="Log1p",yn="LogicalAnd",bn="LogicalNot",xn="LogicalOr",wn="LogSoftmax",vn="LRN",kn="LRNGrad",In="Max",Nn="Maximum",Sn="MaxPool",Cn="MaxPoolGrad",Tn="MaxPool3D",$n="MaxPool3DGrad",En="MaxPoolWithArgmax",An="Mean",Rn="Min",Mn="Minimum",Fn="MirrorPad",Dn="Mod",_n="Multinomial",On="Multiply",Ln="Neg",zn="NotEqual",Pn="NonMaxSuppressionV3",Bn="NonMaxSuppressionV4",Vn="NonMaxSuppressionV5",Wn="OnesLike",Un="OneHot",Gn="Pack",Hn="PadV2",jn="Pool",qn="Pow",Kn="Prelu",Xn="Prod",Yn="Range",Zn="Real",Jn="Reciprocal",Qn="Relu",tr="Reshape",er="ResizeNearestNeighbor",nr="ResizeNearestNeighborGrad",rr="ResizeBilinear",sr="ResizeBilinearGrad",ar="Relu6",or="Reverse",ir="Round",lr="Rsqrt",ur="ScatterNd",cr="Select",hr="Selu",pr="Slice",dr="Sin",fr="Sinh",mr="Sign",gr="Sigmoid",yr="Softplus",br="Sqrt",xr="Sum",wr="SpaceToBatchND",vr="SplitV",kr="Softmax",Ir="SparseFillEmptyRows",Nr="SparseReshape",Sr="SparseToDense",Cr="SquaredDifference",Tr="Square",$r="StridedSlice",Er="Sub",Ar="Tan",Rr="Tanh",Mr="Tile",Fr="TopK",Dr="Transform",_r="Transpose",Or="Unique",Lr="Unpack",zr="UnsortedSegmentSum",Pr="ZerosLike",Br="Step",Vr="FromPixels",Wr="RotateWithOffset",Ur="_FusedMatMul",Gr="FusedConv2D",Hr="FusedDepthwiseConv2D",jr=Ht("kernelRegistry",(()=>new Map)),qr=Ht("gradRegistry",(()=>new Map));function Kr(t,e){const n=ns(t,e);return jr.get(n)}function Xr(t){return qr.get(t)}function Yr(t){const e=jr.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===t&&n.push(o)}return n}function Zr(t){const{kernelName:e,backendName:n}=t,r=ns(e,n);jr.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),jr.set(r,t)}function Jr(t){const{kernelName:e}=t;qr.has(e)&&Vt().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),qr.set(e,t)}function Qr(t,e){const n=ns(t,e);if(!jr.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);jr.delete(n)}function ts(t){if(!qr.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);qr.delete(t)}function es(t,e){Yr(t).forEach((t=>{Zr(Object.assign({},t,{backendName:e}))}))}function ns(t,e){return`${e}_${t}`}function rs(t,e){return"string"===e?is(t):ss([t],e)}function ss(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=nt(t)),Vt().getBool("DEBUG")&&yt(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function as(){return Vt().platform.now()}function os(t,e){return Vt().platform.fetch(t,e)}function is(t,e="utf-8"){return e=e||"utf-8",Vt().platform.encode(t,e)}function ls(t,e="utf-8"){return e=e||"utf-8",Vt().platform.decode(t,e)}class us{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new hs)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let a;const o=as();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();a=Promise.resolve({kernelMs:as()-o})}if(Vt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{cs(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then((t=>t.kernelMs)),extraInfo:a.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),r,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function cs(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class hs{logKernelProfile(t,e,n,r,s,a){const o="number"==typeof r?ct(`${r}ms`,9):r.error,i=ct(t,25),l=e.rank,u=e.size,c=ct(e.shape.toString(),14);let h="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;h+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function ps(t,e,n,r){const s=Et(e),a=function(t,e,n,r){const s=rt(e),a=r[r.length-1],o=new Array(a).fill(0),i=e.length,l="complex64"===n?gs(t):t;if(i>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)o[t]=Math.max(o[t],ds(l[e+t],0,n).length)}return o}(t,e,n,s),o=e.length,i=ms(t,e,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${o}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(i.map((t=>"    "+t)).join("\n")),l.join("\n")}function ds(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:It(t)?`'${t}'`:"bool"===n?fs(t):parseFloat(t.toFixed(7)).toString(),ct(r,e)}function fs(t){return 0===t?"false":"true"}function ms(t,e,n,r,s,a=!0){const o="complex64"===n?2:1,i=e[0],l=e.length;if(0===l)return"complex64"===n?[ds(gs(t)[0],0,n)]:"bool"===n?[fs(t[0])]:[t[0].toString()];if(1===l){if(i>20){const e=3*o;let r=Array.from(t.slice(0,e)),a=Array.from(t.slice((i-3)*o,i*o));return"complex64"===n&&(r=gs(r),a=gs(a)),["["+r.map(((t,e)=>ds(t,s[e],n))).join(", ")+", ..., "+a.map(((t,e)=>ds(t,s[i-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?gs(t):Array.from(t)).map(((t,e)=>ds(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),c=r.slice(1),h=r[0]*o,p=[];if(i>20){for(let e=0;e<3;e++){const r=e*h,a=r+h;p.push(...ms(t.slice(r,a),u,n,c,s,!1))}p.push("...");for(let e=i-3;e<i;e++){const r=e*h,a=r+h;p.push(...ms(t.slice(r,a),u,n,c,s,e===i-1))}}else for(let e=0;e<i;e++){const r=e*h,a=r+h;p.push(...ms(t.slice(r,a),u,n,c,s,e===i-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<l;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function gs(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class ys{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=rt(t),null!=n){const t=n.length;Q(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||gt(e,this.size),this.strides=Et(t)}set(t,...e){0===e.length&&(e=[0]),Q(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return bs().makeTensor(this.values,this.shape,this.dtype)}}let bs=null,xs=null,ws=null;class vs{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=rt(t),this.strides=Et(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return xs.buffer(this.shape,this.dtype,t)}bufferSync(){return xs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Rt(this.shape,t,"complex64"===this.dtype)}arraySync(){return Rt(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=bs().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>ls(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=bs().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>ls(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await bs().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(bs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return xs.print(this,t)}clone(){return this.throwIfDisposed(),xs.clone(this)}toString(t=!1){return ps(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),xs.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),bs().makeVariable(this,t,e,n)}}function ks(){return Ht("Tensor",(()=>vs))}Object.defineProperty(vs,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),ks();class Is extends vs{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!at(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);bs().disposeTensor(this),this.dataId=t.dataId,bs().incRef(this,null)}dispose(){bs().disposeVariable(this),this.isDisposedInternal=!0}}var Ns,Ss,Cs,Ts,$s;Object.defineProperty(Is,Symbol.hasInstance,{value:t=>t instanceof vs&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Ns||(Ns={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Ss||(Ss={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(Cs||(Cs={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Ts||(Ts={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}($s||($s={}));const Es={float32:Ts,int32:Ss,bool:Cs,complex64:$s};function As(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Es[t][e]}function Rs(t){return As(t,"int32")}function Ms(t,e){if(t.dtype===e.dtype)return[t,e];const n=As(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Fs(t,e){Q(t.dtype===e.dtype,(()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`))}function Ds(t,e){return e.some((e=>e.id===t.id))}function _s(t){const e=[];return Os(t,e,new Set),e}function Os(t,e,n){if(null==t)return;if(t instanceof vs)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),Os(r,e,n))}}function Ls(t){return null!=t.kernelName}class zs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Ps{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new zs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new us(this.backendInstance),!0}setupRegisteredKernels(){Yr(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Yr(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof G||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),a=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return Ps.nextTensorId++}nextVariableId(){return Ps.nextVariableId++}clone(t){const e=Vs.runKernel(sn,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t};return Vs.runKernel(fe,e,{dtype:"float32"})}})),[],{}),e}runKernel(t,e,n){if(null==Kr(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-e-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ls(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ls(t)){const{kernelName:e,inputs:s,attrs:a}=t;null==this.backendName&&this.backend;const l=Kr(e,this.backendName);Q(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),o=()=>{const t=this.backend.numDataIds();i=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,o);const u=o.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)}));if(r){const t=this.getTensorsForGradient(e,s,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};o=()=>{const t=this.backend.numDataIds();i=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:c}=t,h=Ls(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=o()})),r&&this.addTapeNode(l,u,e,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=Xr(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(Q(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const o=n.filter(((t,e)=>s[e]));return a.concat(o)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&It(t[0])&&(s=t.map((t=>is(t))));const a=r.write(s,e,n),o=new vs(e,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const t=this.state.tensorInfo.get(a),e=kt(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,r){const s=new vs(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new Is(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*vt(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Is||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*vt(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},i=Xr(t);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=Ft(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,a))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=_s(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(Q(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));Q(s instanceof vs,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],o=a.inputs;for(const t in o){const n=o[t];let i=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach((t=>r[t.id]=!0)),i=!0,s[a.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,o[n.id]=!0;break}}const i=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&o[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,i.push(e)}}return i}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=Mt(rt(t),"float32");return Vs.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const a=e[s],o=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const e in a.inputs){if(!(e in i))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[e];if(!at(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==t[o.id])t[o.id]=s;else{const e=t[o.id];t[o.id]=r(e,s),e.dispose()}}}}(t,a,(t=>this.tidy(t)),Ws);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return Q(Tt(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;Q(e.every((t=>t instanceof vs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc({forwardFunc:(r,s)=>(n=t(...e,s),Q(n.value instanceof vs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Q(Tt(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];Q(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Q(a.every((t=>t instanceof vs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((t,e)=>{o[e]=()=>t})),o},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=as(),n=await this.backend.time(t);return n.wallMs=as()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new zs;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Bs(){const t=Gt();if(null==t._tfengine){const e=new Pt(t);t._tfengine=new Ps(e)}var e;return e=t._tfengine.ENV,Ut=e,bs=()=>t._tfengine,t._tfengine}Ps.nextTensorId=0,Ps.nextVariableId=0;const Vs=Bs();function Ws(t,e){const n={a:t,b:e};return Vs.runKernel(Xt,n)}function Us(t){if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Gs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Hs=Vt();function js(t,e){let n=t;if(wt(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||wt(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Vt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&qs(t,r,[]),r}function qs(t,e,n){if(n=n||[],!Array.isArray(t)&&!wt(t))return void Q(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));Q(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),Q(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)qs(t[e],r,n.concat(e))}function Ks(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function Xs(t,e,n,r="numeric"){if(t instanceof vs)return Ks(r,t.dtype,e,n),t;let s=Ct(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ks(r,s,e,n),null==t||!wt(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=js(t,s);wt(t)||Array.isArray(t)||(t=[t]);const o="string"!==s?ss(t,s):nt(t,[],!0);return Vs.makeTensor(o,a,s)}function Ys(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>Xs(t,`${e}[${s}]`,n,r)))}Hs.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Hs.registerFlag("IS_BROWSER",(()=>Gs())),Hs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Hs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Hs.registerFlag("PROD",(()=>!1)),Hs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Hs.getBool("DEBUG"))),Hs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Hs.registerFlag("IS_TEST",(()=>!1)),Hs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Hs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Zs="__op";function Js(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Zs;const s=(...t)=>{Vs.startScope(n);try{const e=r(...t);return zt(e)&&console.error("Cannot return a Promise inside of tidy."),Vs.endScope(e),e}catch(t){throw Vs.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Qs=Js({complex_:function(t,e){const n=Xs(t,"real","complex"),r=Xs(e,"imag","complex");tt(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Vs.runKernel(ye,s)}});function ta(t,e,n,r){if(null==r&&(r=Ct(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!wt(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){_t(e);const t=rt(e),r=rt(n);Q(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==rt(e.slice(t));Q(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return wt(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?ss(t,r):nt(t,[],!0),Vs.makeTensor(t,e,r)}function ea(t,e,n){return ta(t,e,js(t,n),n)}const na={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function ra(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(t)?t[a].tensor:t[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const l={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise((async t=>{const e=await i.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(i.data());null!=e&&(l.group=e),n.push(l)}return{data:aa(await Promise.all(r)),specs:n}}function sa(t,e){const n={};let r,s=0;for(const a of e){const e=a.name,o=a.dtype,i=a.shape,l=rt(i);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=na[n.dtype],c=t.slice(s,s+l*i),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ha()),u=r(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];u[t]=Math.round(e*n.scale+n.min)}}s+=l*i}else if("string"===o){const e=rt(a.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));u.push(n),s+=e}}else{const r=na[o],a=t.slice(s,s+l*r);if("float32"===o)u=new Float32Array(a);else if("int32"===o)u=new Int32Array(a);else if("bool"===o)u=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${e}': ${o}`);{u=new Float32Array(a);const t=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],r[e]=u[2*e+1];const s=ea(t,i,"float32"),o=ea(r,i,"float32");n[e]=Qs(s,o),s.dispose(),o.dispose()}}s+=l*r}"complex64"!==o&&(n[e]=ea(u,i,o))}return n}function aa(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const oa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ia(t){return oa?Buffer.byteLength(t):new Blob([t]).size}function la(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function ua(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function ca(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:ia(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:ia(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function ha(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const o=r[s],i=t[n[o>>10]+(1023&o)]+e[o>>10];a[s]=i}return new Float32Array(s)}}class pa{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==pa.instance&&(pa.instance=new pa),pa.instance}static registerSaveRouter(t){pa.getInstance().saveRouters.push(t)}static registerLoadRouter(t){pa.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return pa.getHandlers(t,"save")}static getLoadHandlers(t,e){return pa.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?pa.getInstance().loadRouters:pa.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const da=t=>pa.registerSaveRouter(t),fa=t=>pa.registerLoadRouter(t),ma=t=>pa.getSaveHandlers(t),ga=(t,e)=>pa.getLoadHandlers(t,e),ya="tensorflowjs",ba="models_store",xa="model_info_store";function wa(){if(!Vt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function va(t){const e=t.result;e.createObjectStore(ba,{keyPath:"modelPath"}),e.createObjectStore(xa,{keyPath:"modelPath"})}class ka{constructor(t){if(this.indexedDB=wa(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(ya,1);r.onupgradeneeded=()=>va(r),r.onsuccess=()=>{const s=r.result;if(null==e){const e=s.transaction(ba,"readonly"),r=e.objectStore(ba).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(s.close(),n(r.error)),e.oncomplete=()=>s.close()}else{const r=ca(e),a=s.transaction(xa,"readwrite");let o=a.objectStore(xa);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;i.onsuccess=()=>{l=s.transaction(ba,"readwrite");const i=l.objectStore(ba).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});i.onsuccess=()=>t({modelArtifactsInfo:r}),i.onerror=t=>{o=a.objectStore(xa);const e=o.delete(this.modelPath);e.onsuccess=()=>(s.close(),n(i.error)),e.onerror=t=>(s.close(),n(i.error))}},i.onerror=t=>(s.close(),n(i.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=t=>n(r.error)}))}}ka.URL_SCHEME="indexeddb://";const Ia=t=>{return Vt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ka.URL_SCHEME)?(e=t.slice(ka.URL_SCHEME.length),new ka(e)):null;var e};pa.registerSaveRouter(Ia),pa.registerLoadRouter(Ia);class Na{constructor(){this.indexedDB=wa()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(ya,1);n.onupgradeneeded=()=>va(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(xa,"readonly"),a=s.objectStore(xa).getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(r.close(),e(a.error)),s.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(ka.URL_SCHEME)?e.slice(ka.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(ya,1);r.onupgradeneeded=()=>va(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(xa,"readwrite"),o=a.objectStore(xa),i=o.get(t);let l;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=o.delete(t),a=()=>{l=s.transaction(ba,"readwrite");const r=l.objectStore(ba).delete(t);r.onsuccess=()=>e(i.result.modelArtifactsInfo),r.onerror=t=>n(i.error)};r.onsuccess=a,r.onerror=t=>(a(),s.close(),n(i.error))}},i.onerror=t=>(s.close(),n(i.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=t=>n(r.error)}))}}const Sa="/",Ca="tensorflowjs_models",Ta="info",$a="model_topology",Ea="weight_specs",Aa="weight_data",Ra="model_metadata";function Ma(t){return{info:[Ca,t,Ta].join(Sa),topology:[Ca,t,$a].join(Sa),weightSpecs:[Ca,t,Ea].join(Sa),weightData:[Ca,t,Aa].join(Sa),modelMetadata:[Ca,t,Ra].join(Sa)}}function Fa(t){const e=t.split(Sa);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Sa)}class Da{constructor(t){if(!Vt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Ma(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=ca(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(oa)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData));const s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(s.signature=t.signature),null!=t.userDefinedMetadata&&(s.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(s.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const t=JSON.parse(s);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(oa){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}Da.URL_SCHEME="localstorage://";const _a=t=>{return Vt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Da.URL_SCHEME)?(e=t.slice(Da.URL_SCHEME.length),new Da(e)):null;var e};pa.registerSaveRouter(_a),pa.registerLoadRouter(_a);class Oa{constructor(){Q(Vt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Q("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Ca+Sa,n=Sa+Ta;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(e)&&s.endsWith(n)&&(t[Fa(s)]=JSON.parse(this.LS.getItem(s)))}return t}async removeModel(t){var e;const n=Ma(t=(e=t).startsWith(Da.URL_SCHEME)?e.slice(Da.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const La="://";class za{constructor(){this.managers={}}static getInstance(){return null==za.instance&&(za.instance=new za),za.instance}static registerManager(t,e){Q(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(La)&&(t=t.slice(0,t.indexOf(La))),Q(t.length>0,(()=>"scheme must not be an empty string."));const n=za.getInstance();Q(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Pa(t){if(-1===t.indexOf(La))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${za.getSchemes().join(",")}`);return{scheme:t.split(La)[0],path:t.split(La)[1]}}async function Ba(t,e,n=!1){Q(t!==e,(()=>`Old path and new path are the same: '${t}'`));const r=pa.getLoadHandlers(t);Q(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${t}.`)),Q(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`));const s=r[0],a=pa.getSaveHandlers(e);Q(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${e}.`)),Q(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`));const o=a[0],i=Pa(t).scheme,l=Pa(t).path,u=i===Pa(t).scheme,c=await s.load();n&&u&&await za.getManager(i).removeModel(l);const h=await o.save(c);return n&&!u&&await za.getManager(i).removeModel(l),h.modelArtifactsInfo}async function Va(){const t=za.getSchemes(),e={};for(const n of t){const t=await za.getManager(n).listModels();for(const r in t)e[n+La+r]=t[r]}return e}async function Wa(t){const e=Pa(t);return za.getManager(e.scheme).removeModel(e.path)}async function Ua(t,e){return Ba(t,e,!1)}async function Ga(t,e){return Ba(t,e,!0)}class Ha{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Vt().get("IS_BROWSER")){Vt().setPlatform("browser",new Ha);try{za.registerManager(Da.URL_SCHEME,new Oa)}catch(t){}try{za.registerManager(ka.URL_SCHEME,new Na)}catch(t){}}let ja;function qa(t,e="float32",n){return e=e||"float32",_t(t),new ys(t,e,n)}Vt().get("IS_NODE")&&Vt().setPlatform("node",new class{constructor(){this.util=n(61758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=Vt().global.fetch?Vt().global.fetch(t,e):(null==ja&&(ja=n(78352)),ja(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Ka=Js({cast_:function(t,e){const n=Xs(t,"x","cast");if(!bt(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return Vs.runKernel(fe,r,s)}}),Xa=Js({clone_:function(t){const e={x:Xs(t,"x","clone","string_or_numeric")};return Vs.runKernel(sn,e)}});function Ya(t,e=!1){console.log(t.toString(e))}function Za(t){return new Promise((t=>setTimeout(t))).then(t)}Bs(),xs={buffer:qa,cast:Ka,clone:Xa,print:Ya};class Ja{constructor(t){if(!Vt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ja.URL_SCHEME)&&(t=t.slice(Ja.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Za((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Za((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ca(t)}}}}Ja.URL_SCHEME="downloads://";class Qa{constructor(t){if(null==t||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise(((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),o=a.modelTopology;if(null==o)return void r(new Error(`modelTopology field is missing from file ${t.name}`));0===e.length&&n({modelTopology:o});const i=a.weightsManifest;if(null==i)return void r(new Error(`weightManifest field is missing from file ${t.name}`));let l;try{l=this.checkManifestAndWeightFiles(i,e)}catch(t){return void r(t)}const u=[],c=[],h=[];i.forEach((t=>{t.paths.forEach((t=>{c.push(t),h.push(null)})),u.push(...t.weights)})),i.forEach((t=>{t.paths.forEach((t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,s=c.indexOf(t);if(h[s]=r,-1===h.indexOf(null)){const t={modelTopology:o,weightSpecs:u,weightData:la(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(t.signature=a.signature),null!=a.userDefinedMetadata&&(t.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(t.modelInitializer=a.modelInitializer),n(t)}},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(l[t])}))}))},s.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(t)}))}checkManifestAndWeightFiles(t,e){const n=[],r=e.map((t=>ua(t.name))),s={};for(const a of t)a.paths.forEach((t=>{const a=ua(t);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[t]=e[r.indexOf(a)]}));if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return s}}function to(t){return new Qa(t)}function eo(t,e,n,r){!function(t){Q(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){Q(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),Q(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),Q(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(t.map((a=>(a.then((a=>{const o=n+ ++s/t.length*(r-n);return e(o),a})),a))))}async function no(t,e){null==e&&(e={});const n=null==e.fetchFunc?Vt().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await eo(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await eo(s,e.onProgress,.5,1)}async function ro(t,e="",n,r){return so((t=>no(t,{requestInit:r})))(t,e,n)}function so(t){return async(e,n="",r)=>{const s=e.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(e.forEach(((t,e)=>{let n=0;t.weights.forEach((t=>{const l="quantization"in t?t.quantization.dtype:t.dtype,u=na[l]*rt(t.shape),c=()=>{s[e]=!0,null==a[e]&&(a[e]=[]),a[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((e,n)=>{e===t.name&&(c(),o[n]=!0)})):c(),i.push(t.name),n+=u}))})),!o.every((t=>t))){const t=r.filter(((t,e)=>!o[e]));throw new Error(`Could not find weights in manifest with names: ${t.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const l=s.reduce(((t,e,n)=>(e&&t.push(n),t)),[]),u=[];l.forEach((t=>{e[t].paths.forEach((t=>{const e=n+(n.endsWith("/")?"":"/")+t;u.push(e)}))}));const c=await t(u),h={};let p=0;return l.forEach((t=>{const n=e[t].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[p+t].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[p+t]);o.set(e,i),i+=e.byteLength}a[t].forEach((t=>{const e=sa(s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const t in e)h[t]=e[t]})),p+=n})),h}}pa.registerSaveRouter((t=>Vt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ja.URL_SCHEME)?function(t="model"){return new Ja(t)}(t.slice(Ja.URL_SCHEME.length)):null));class ao{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Q("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Vt().platform.fetch,Q(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&Q(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:ca(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,s=e.generatedBy,a=e.convertedBy,o=e.format,i=e.signature,l=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const t=await this.loadWeights(r);[u,c]=t}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:o};null!=i&&(h.signature=i),null!=l&&(h.userDefinedMetadata=l);const p=e.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const o=[],i=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):o.push(s+t+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[a,la(await no(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function oo(t){return null!=t.match(ao.URL_SCHEME_REGEX)}ao.URL_SCHEME_REGEX=/^https?:\/\//;const io=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>oo(t))):oo(t),n)return lo(t,e)}return null};function lo(t,e){return new ao(t,e)}function uo(t,e){return lo(t,e)}pa.registerSaveRouter(io),pa.registerLoadRouter(io);class co{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class ho{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function po(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new co(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new co({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new co({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function fo(t){return new ho(t)}const mo=Js({matMul_:function(t,e,n=!1,r=!1){let s=Xs(t,"a","matMul"),a=Xs(e,"b","matMul");[s,a]=Ms(s,a);const o={a:s,b:a},i={transposeA:n,transposeB:r};return Vs.runKernel(ce,o,i)}}),go=Js({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s={indices:Xs(t,"indices","oneHot","int32")},a={depth:e,onValue:n,offValue:r};return Vs.runKernel(Un,s,a)}}),yo=Js({transpose_:function(t,e){const n=Xs(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),Q(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{Q(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return Vs.runKernel(_r,r,s)}}),bo=Js({confusionMatrix_:function(t,e,n){const r=Xs(t,"labels","confusionMatrix"),s=Xs(e,"predictions","confusionMatrix");Q(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Q(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Q(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),Q(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),Q(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=go(Ka(r,"int32"),n),o=go(Ka(s,"int32"),n),i=yo(a),l=mo(i,o);return Ka(l,"int32")}});function xo(t,e,n){if(et(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=js(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ta(t,e,r,n)}let wo;function vo(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);i=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Kr(Vr,Vs.backendName)){const n={pixels:t},r={numChannels:e};return Vs.runKernel(Vr,n,r)}const[l,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let c,h;if(o?c=t.getContext("2d").getImageData(0,0,l,u).data:r||n?c=t.data:(a||s||i)&&(null==wo&&(wo=document.createElement("canvas").getContext("2d")),wo.canvas.width=l,wo.canvas.height=u,wo.drawImage(t,0,0,l,u),c=wo.getImageData(0,0,l,u).data),4===e)h=new Int32Array(c);else{const t=l*u;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=c[4*n+t]}return xo(h,[u,l,e],"int32")}async function ko(t,e=3){let n=null;if(Vt().getBool("WRAP_TO_IMAGEBITMAP")&&function(t){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(t){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return vo(n,e)}async function Io(t,e){let n=Xs(t,"img","toPixels");if(!(t instanceof vs)){const t=n;n=Ka(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let t=0;t<r*s;++t){const e=[0,0,0,255];for(let r=0;r<a;r++){const s=o[t*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(e[0]=s*i,e[1]=s*i,e[2]=s*i):e[r]=s*i}const r=4*t;l[r+0]=Math.round(e[0]),l[r+1]=Math.round(e[1]),l[r+2]=Math.round(e[2]),l[r+3]=Math.round(e[3])}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(l,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),l}const No=Js({fromPixels_:vo});function So(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===rt(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,a=s[s.length-1];let o=1;for(let t=0;t<s.length-1;++t)o*=s[t];const i=t.shape,l=s.slice();l.pop();let u=1;for(let t=a;t<n;++t)u*=i[t],l.push(i[t]);const c=[...Et(t.shape).map((t=>t/u)),1].slice(0,a);return[l,o,u,c]}function Co(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function To(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Co(n,e,t)}function $o(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let o=1;for(let t=s;t<a;++t)o*=n[t];const i=s<1?1:s;return{sliceRank:s,numUpdates:rt(e.shape)/i,sliceSize:o,strides:[...Et(n.slice(0,s)),1],outputSize:rt(n)}}function Eo(t,e,n){const r=t.shape.length;Q(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),Q(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Q(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function Ao(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Ro(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Mo(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Fo(t,e,n){return n<=t?n:n-(e-1)}function Do(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function _o(t,e,n,r,s,a,o,i,l){const u=t.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=Oo(o,l,u,r,t),h=Lo(i,l,u,s,t),p=Mo(a,l,u,t)}else for(let e=0;e<u;e++)c[e]=Po(o,r,a,t,e,l),h[e]=Bo(i,s,a,t,e,l),p[e]=zo(a,e,l);return{begin:c,end:h,strides:p}}function Oo(t,e,n,r,s){const a=[...s],o=Do(n,e);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=0;else{const o=Fo(e,n,s);let i=r[o];t&1<<o&&(i=0),a[s]=i}return a}function Lo(t,e,n,r,s){const a=[...s],o=Do(n,e);for(let s=0;s<a.length;s++)if(o.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const o=Fo(e,n,s);let i=r[o];t&1<<o&&(i=Number.MAX_SAFE_INTEGER),a[s]=i}for(let t=0;t<a.length;t++){const e=s[t];a[t]<0&&(a[t]+=e),a[t]=K(0,a[t],s[t])}return a}function zo(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Po(t,e,n,r,s,a){let o=e[s];const i=n[s]||1;(t&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=K(0,o,l-1),o}function Bo(t,e,n,r,s,a){let o=e[s];const i=n[s]||1;(t&1<<s||a&1<<s||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return o<0&&(o+=l),o=i>0?K(0,o,l):K(-1,o,l-1),o}function Vo(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Wo(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Uo(t,e,n){let r;const s=t.shape.length;let a;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{Q(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(Q(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,a]}function Go(t,e,n,r,s,a,o,i,l){let u=e.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const p=Ao(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=t.length-u.length,f=Ao(i),m=t.slice();f.forEach((t=>{u[t]=0,c[t]=1,m.splice(t,0,1)}));const{begin:g,end:y,strides:b}=_o(m,p,d,u,c,h,s,a,o);u=g,c=y,h=b;const x=Ao(l);x.forEach((t=>{c[t]=u[t]+1,h[t]=1}));const w=Ro(u,c,h),v=w.filter(((t,e)=>-1===x.indexOf(e)));return{nonStrided:h.every((t=>1===t)),$begin:u,$end:c,$strides:h,size:w,newShape:m,outShape:v}}class Ho{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class jo{constructor(){this.classNameMap={}}static getMap(){return null==jo.instance&&(jo.instance=new jo),jo.instance}static register(t){jo.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function qo(t){Q(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),Q("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),Q(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),jo.register(t)}const Ko=.1;function Xo(t,e,n){return null==n&&(n=Yo()),Zo(t,e,((t,e)=>ei(t,e,n)))}function Yo(){return 32===Vs.backend.floatPrecision()?.001:Ko}function Zo(t,e,n){let r=!0;if((wt(t)||wt(e))&&(r=!1),wt(t)&&wt(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(t)&&Array.isArray(e)){const n=js(t),r=js(e);if(!at(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=wt(t)?t:nt(t),a=wt(e)?e:nt(e);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let t=0;t<a.length;++t){const e=s[t],r=a[t];if(!n(e,r))throw new Error(`Arrays differ: actual[${t}] = ${e}, expected[${t}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}}function Jo(t,e){t().then((()=>e.fail()),(()=>e()))}function Qo(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return It(t)||It(t[0])||It(e)||It(e[0])?Zo(t,n,((t,e)=>t==e)):Zo(t,e,((t,e)=>ei(t,e,0)))}function ti(t,e,n){if(null==n&&(n=Yo()),!ei(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function ei(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function ni(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function ri(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}function si(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?si(n):t[e]=is(n)}return t}const ai="3.6.0";function oi(){Vt().set("PROD",!0)}function ii(){Vt().set("DEBUG",!0)}function li(){Vt().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ui(t){Vt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ci(){Vs.disposeVariables()}function hi(){return Vs}function pi(){return Vs.memory()}function di(t){return Vs.profile(t)}function fi(t,e){return Vs.tidy(t,e)}function mi(t){_s(t).forEach((t=>t.dispose()))}function gi(t){return Vs.keep(t)}function yi(t){return Vs.time(t)}function bi(t){return Vs.setBackend(t)}function xi(){return Vs.ready()}function wi(){return Vs.backendName}function vi(t){Vs.removeBackend(t)}function ki(t){return Vs.findBackend(t)}function Ii(t){return Vs.findBackendFactory(t)}function Ni(t,e,n=1){return Vs.registerBackend(t,e,n)}function Si(){return Vs.backend}function Ci(t,e){Vt().setPlatform(t,e)}ws=ui;const Ti=Js({add_:function(t,e){let n=Xs(t,"a","add"),r=Xs(e,"b","add");[n,r]=Ms(n,r);const s={a:n,b:r};return Vs.runKernel(Xt,s)}}),$i=Js({floorDiv_:function(t,e){let n=Xs(t,"a","floorDiv"),r=Xs(e,"b","floorDiv");[n,r]=Ms(n,r);const s={a:n,b:r};return Vs.runKernel(Je,s)}}),Ei=Js({div_:function(t,e){let n=Xs(t,"a","div"),r=Xs(e,"b","div");if([n,r]=Ms(n,r),"int32"===n.dtype&&"int32"===r.dtype)return $i(n,r);const s={a:n,b:r};return Vs.runKernel(Pe,s,{})}}),Ai=Js({mul_:function(t,e){let n=Xs(t,"a","mul"),r=Xs(e,"b","mul");[n,r]=Ms(n,r);const s={a:n,b:r};return Vs.runKernel(On,s)}}),Ri=Js({sqrt_:function(t){const e={x:Xs(t,"x","sqrt")};return Vs.runKernel(br,e)}}),Mi=Js({square_:function(t){const e=Xs(t,"x","square");return Vs.runKernel("Square",{x:e},{})}}),Fi=Js({zerosLike_:function(t){const e={x:Xs(t,"x","zerosLike")};return Vs.runKernel(Pr,e)}});function Di(t){return Q(Tt(t),(()=>"The f passed in grad(f) must be a function")),(e,n)=>{const r=Xs(e,"x","tf.grad","string_or_numeric"),s=null!=n?Xs(n,"dy","tf.grad"):null;return Vs.tidy((()=>{const{value:e,grads:n}=Vs.gradients((()=>t(r)),[r],s);return null!=s&&tt(e.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Bi(n),n[0]}))}}function _i(t){return Q(Tt(t),(()=>"The f passed in grads(f) must be a function")),(e,n)=>{Q(Array.isArray(e),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ys(e,"args","tf.grads","string_or_numeric"),s=null!=n?Xs(n,"dy","tf.grads"):null;return Vs.tidy((()=>{const{value:e,grads:n}=Vs.gradients((()=>t(...r)),r,s);return null!=s&&tt(e.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bi(n),n}))}}function Oi(t){return Q(Tt(t),(()=>"The f passed in valueAndGrad(f) must be a function")),(e,n)=>{Q(e instanceof vs,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Q(null==n||n instanceof vs,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=Vs.gradients((()=>t(e)),[e],n);return Bi(r),{grad:r[0],value:s}}}function Li(t){return Q(Tt(t),(()=>"The f passed in valueAndGrads(f) must be a function")),(e,n)=>{Q(Array.isArray(e)&&e.every((t=>t instanceof vs)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Q(null==n||n instanceof vs,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=Vs.gradients((()=>t(...e)),e,n);return null!=n&&tt(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bi(r.grads),r}}function zi(t,e){Q(Tt(t),(()=>"The f passed in variableGrads(f) must be a function")),Q(null==e||Array.isArray(e)&&e.every((t=>t instanceof Is)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in Vs.registeredVariables)e.push(Vs.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;Q((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:o}=Vs.gradients(t,e,null,!0);Q(o.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Q(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const i={};return e.forEach(((t,e)=>{null!=o[e]&&(i[t.name]=o[e])})),null!=r&&r.forEach((t=>i[t.name]=null)),{value:a,grads:i}}function Pi(t){return Vs.customGrad(t)}function Bi(t){if(t.filter((t=>null==t)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Vi(t,e){if((wt(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&wt(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ta(t,[],[],e)}class Wi extends Ho{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return mi(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return zi(t,e)}dispose(){null!=this.iterations_&&mi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Vi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Wi,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Ui extends Wi{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Vs.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Vs.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:fi((()=>Fi(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:fi((()=>Fi(r).variable(!1)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;fi((()=>{const t=Ti(Ai(a,this.rho),Ai(Mi(s),1-this.rho)),e=Ai(Ei(Ri(Ti(o,this.epsilon)),Ri(Ti(a,this.epsilon))),s),n=Ti(Ai(o,this.rho),Ai(Mi(e),1-this.rho));a.assign(t),o.assign(n);const i=Ti(Ai(e,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(mi(this.accumulatedGrads.map((t=>t.variable))),mi(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}function Gi(t,e,n){const r={shape:t,value:e,dtype:n};return Vs.runKernel(Xe,{},r)}Ui.className="Adadelta",qo(Ui);class Hi extends Wi{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Vs.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:fi((()=>Gi(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;fi((()=>{const t=Ti(a,Mi(s));a.assign(t);const e=Ti(Ai(Ei(s,Ri(Ti(t,Vs.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&mi(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Hi.className="Adagrad",qo(Hi);const ji=Js({pow_:function(t,e){let n=Xs(t,"base","pow"),r=Xs(e,"exp","pow");[n,r]=Ms(n,r);const s={a:n,b:r};return Vs.runKernel(qn,s)}}),qi=Js({sub_:function(t,e){let n=Xs(t,"a","sub"),r=Xs(e,"b","sub");[n,r]=Ms(n,r);const s={a:n,b:r};return Vs.runKernel(Er,s)}});class Ki extends Wi{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],fi((()=>{this.accBeta1=Vi(e).variable(),this.accBeta2=Vi(n).variable()})),null==r&&(this.epsilon=Vs.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);fi((()=>{const n=qi(1,this.accBeta1),r=qi(1,this.accBeta2);e.forEach(((e,s)=>{const a=Vs.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:fi((()=>Fi(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:fi((()=>Fi(a).variable(!1)))});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Ti(Ai(i,this.beta1),Ai(o,1-this.beta1)),c=Ti(Ai(l,this.beta2),Ai(Mi(o),1-this.beta2)),h=Ei(u,n),p=Ei(c,r);i.assign(u),l.assign(c);const d=Ti(Ai(Ei(h,Ti(Ri(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(Ai(this.accBeta1,this.beta1)),this.accBeta2.assign(Ai(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&mi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&mi(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),fi((()=>{this.accBeta1.assign(ji(this.beta1,this.iterations_+1)),this.accBeta2.assign(ji(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Ki.className="Adam",qo(Ki);const Xi=Js({abs_:function(t){const e=Xs(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return Vs.runKernel(be,t)}{const t={x:e};return Vs.runKernel(jt,t)}}});function Yi(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=t[a]||1;(e[e.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function Zi(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,o=e[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function Ji(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}const Qi=Js({maximum_:function(t,e){let n=Xs(t,"a","maximum"),r=Xs(e,"b","maximum");[n,r]=Ms(n,r),"bool"===n.dtype&&(n=Ka(n,"int32"),r=Ka(r,"int32")),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(Nn,s)}});class tl extends Wi{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],fi((()=>{this.iteration=Vi(0).variable(),this.accBeta1=Vi(e).variable()})),null==r&&(this.epsilon=Vs.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);fi((()=>{const n=qi(1,this.accBeta1),r=Ei(-this.learningRate,Ti(Ai(this.iteration,this.decay),1));e.forEach(((e,s)=>{const a=Vs.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Fi(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:Fi(a).variable(!1)});const o=Array.isArray(t)?t[s].tensor:t[e];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Ti(Ai(i,this.beta1),Ai(o,1-this.beta1)),c=Ai(l,this.beta2),h=Xi(o),p=Qi(c,h);i.assign(u),l.assign(p);const d=Ti(Ai(Ei(r,n),Ei(u,Ti(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(Ti(this.iteration,1)),this.accBeta1.assign(Ai(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&mi(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&mi(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}tl.className="Adamax",qo(tl);class el extends Wi{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=Vs.registeredVariables[e];fi((()=>{const t=Ti(Ai(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=gi(Vi(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}el.className="SGD",qo(el);class nl extends el{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Vi(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Vs.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:fi((()=>Fi(r).variable(t)))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&fi((()=>{let t;const e=Ti(Ai(this.m,s),a);t=this.useNesterov?Ti(Ai(this.c,Ti(a,Ai(e,this.m))),r):Ti(Ai(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&mi(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}nl.className="Momentum",qo(nl);class rl extends Wi{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Vs.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Vs.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:fi((()=>Fi(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:fi((()=>Fi(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:fi((()=>Fi(r).variable(s)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;fi((()=>{const t=Ti(Ai(o,this.decay),Ai(Mi(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Ti(Ai(e,this.decay),Ai(a,1-this.decay)),l=Ei(Ai(a,this.learningRate),Ri(qi(t,Ti(Mi(s),this.epsilon)))),u=Ti(Ai(i,this.momentum),l);o.assign(t),e.assign(s),i.assign(u);const c=qi(r,u);r.assign(c)}else{const t=Ti(Ai(o,this.decay),Ai(Mi(a),1-this.decay)),e=Ti(Ai(i,this.momentum),Ei(Ai(a,this.learningRate),Ri(Ti(t,this.epsilon))));o.assign(t),i.assign(e);const n=qi(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&mi(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&mi(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&mi(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}rl.className="RMSProp",qo(rl);const sl=Js({acos_:function(t){const e={x:Xs(t,"x","acos")};return Vs.runKernel(qt,e)}}),al=Js({acosh_:function(t){const e={x:Xs(t,"x","acosh")};return Vs.runKernel(Kt,e)}}),ol=Js({addN_:function(t){Q(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),Q(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>Xs(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!at(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return Vs.runKernel(Yt,r)}}),il=Js({all_:function(t,e=null,n=!1){const r={x:Xs(t,"x","all","bool")},s={axis:e,keepDims:n};return Vs.runKernel(Zt,r,s)}}),ll=Js({any_:function(t,e=null,n=!1){const r={x:Xs(t,"x","any","bool")},s={axis:e,keepDims:n};return Vs.runKernel(Jt,r,s)}}),ul=Js({argMax_:function(t,e=0){const n={x:Xs(t,"x","argMax")},r={axis:e};return Vs.runKernel(Qt,n,r)}}),cl=Js({argMin_:function(t,e=0){const n={x:Xs(t,"x","argMin")},r={axis:e};return Vs.runKernel(te,n,r)}}),hl=Js({asin_:function(t){const e={x:Xs(t,"x","asin")};return Vs.runKernel(ee,e)}}),pl=Js({asinh_:function(t){const e={x:Xs(t,"x","asinh")};return Vs.runKernel(ne,e)}}),dl=Js({atan_:function(t){const e={x:Xs(t,"x","atan")};return Vs.runKernel(re,e)}}),fl=Js({atan2_:function(t,e){let n=Xs(t,"a","atan2"),r=Xs(e,"b","atan2");[n,r]=Ms(n,r);const s={a:n,b:r};return Vs.runKernel(ae,s)}}),ml=Js({atanh_:function(t){const e={x:Xs(t,"x","atanh")};return Vs.runKernel(se,e)}});function gl(t,e,n,r,s="NHWC",a){return xl(t,[...e,t[3]],n,a,r,null,null,$l(s))}function yl(t,e,n,r,s,a,o="channelsLast"){const[i,l]=kl(e);let u;if("channelsLast"===o)u=[i,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);u=[i,l,t[1],t[1]]}return xl(t,u,n,r,s,a,!1,o)}function bl(t,e,n,r,s,a,o="NDHWC"){const[i,l,u]=Il(e);let c,h;if("NDHWC"===o)h="channelsLast",c=[i,l,u,t[4],t[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",c=[i,l,u,t[1],t[1]]}return wl(t,c,n,r,s,!1,h,a)}function xl(t,e,n,r,s,a,o=!1,i="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c]=t}const[p,d,,f]=e,[m,g]=kl(n),[y,b]=kl(r),x=Nl(p,y),w=Nl(d,b),{padInfo:v,outHeight:k,outWidth:I}=function(t,e,n,r,s,a,o,i,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=vl(t,e,n));const a=t[1];return[Sl((t[0]-e+2*r)/n+1,s),Sl((a-e+2*r)/n+1,s)]}([e,n],a,r,t,i);c=s[0],h=s[1]}else if("same"===t){c=Math.ceil(e/r),h=Math.ceil(n/s);const t=Math.max(0,(c-1)*r+a-e),i=Math.max(0,(h-1)*s+o-n),l=Math.floor(t/2),p=t-l,d=Math.floor(i/2);u={top:l,bottom:p,left:d,right:i-d,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const p="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=Sl((e-a+p+d)/r+1,i),h=Sl((n-o+f+m)/s+1,i)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,w,a,i),N=o?f*h:f;let S;return"channelsFirst"===i?S=[l,N,k,I]:"channelsLast"===i&&(S=[l,k,I,N]),{batchSize:l,dataFormat:i,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:t,outShape:S,filterShape:e}}function wl(t,e,n,r,s,a=!1,o="channelsLast",i){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h,p]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,c,h]=t}const[d,f,m,,g]=e,[y,b,x]=Il(n),[w,v,k]=Il(r),I=Nl(d,w),N=Nl(f,v),S=Nl(m,k),{padInfo:C,outDepth:T,outHeight:$,outWidth:E}=function(t,e,n,r,s,a,o,i,l,u,c){let h,p,d,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=vl(t,e,r));const o=t[1],i=t[2];return[Sl((t[0]-e+2*s)/r+1,a),Sl((o-e+2*s)/r+1,a),Sl((i-e+2*s)/r+1,a),1]}([e,n,r,1],i,0,s,t,c);p=a[0],d=a[1],f=a[2]}else if("same"===t){p=Math.ceil(e/s),d=Math.ceil(n/a),f=Math.ceil(r/o);const t=(p-1)*s+i-e,c=(d-1)*a+l-n,m=(f-1)*o+u-r,g=Math.floor(t/2),y=t-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-i+1)/s),d=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/o)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,u,c,h,y,b,x,I,N,S,i),A=a?g*p:g;let R;return"channelsFirst"===o?R=[l,A,T,$,E]:"channelsLast"===o&&(R=[l,T,$,E,A]),{batchSize:l,dataFormat:o,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:T,outHeight:$,outWidth:E,outChannels:A,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:t,outShape:R,filterShape:e}}function vl(t,e,n,r=1){const s=Nl(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function kl(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function Il(t){return"number"==typeof t?[t,t,t]:t}function Nl(t,e){return e<=1?t:t+(t-1)*(e-1)}function Sl(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Cl(t){const[e,n,r]=kl(t);return 1===e&&1===n&&1===r}function Tl(t,e){return Cl(t)||Cl(e)}function $l(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const El=Js({reshape_:function(t,e){const n={x:Xs(t,"x","reshape","string_or_numeric")},r={shape:e};return Vs.runKernel(tr,n,r)}}),Al=Js({avgPool_:function(t,e,n,r,s){const a=Xs(t,"x","avgPool","float32");Q(Tl(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=a,i=!1;3===a.rank&&(i=!0,o=El(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Q(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),null!=s&&Q(ot(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:o},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let c=Vs.runKernel(oe,l,u);return c=Ka(c,a.dtype),i?El(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Rl=Js({avgPool3d_:function(t,e,n,r,s,a="NDHWC"){const o=Xs(t,"x","avgPool3d","float32");let i=o,l=!1;4===o.rank&&(l=!0,i=El(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),Q("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&Q(ot(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Vs.runKernel(le,u,c);return h=Ka(h,i.dtype),l?El(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ml=Js({concat_:function(t,e=0){Q(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ys(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Xa(n[0]);const r=n,s={axis:e};return Vs.runKernel(xe,r,s)}}),Fl=Js({sigmoid_:function(t){const e={x:Xs(t,"x","sigmoid")};return Vs.runKernel(gr,e)}}),Dl=Js({slice_:function(t,e,n){const r=Xs(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:e,size:n};return Vs.runKernel(pr,s,a)}}),_l=Js({tanh_:function(t){const e={x:Xs(t,"x","tanh")};return Vs.runKernel(Rr,e)}}),Ol=Js({basicLSTMCell_:function(t,e,n,r,s,a){const o=Xs(t,"forgetBias","basicLSTMCell"),i=Xs(e,"lstmKernel","basicLSTMCell"),l=Xs(n,"lstmBias","basicLSTMCell"),u=Xs(r,"data","basicLSTMCell"),c=Xs(s,"c","basicLSTMCell"),h=Xs(a,"h","basicLSTMCell"),p=Ml([u,h],1),d=mo(p,i),f=Ti(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Dl(f,[0,0],y),x=Dl(f,[0,g],y),w=Dl(f,[0,2*g],y),v=Dl(f,[0,3*g],y),k=Ti(Ai(Fl(b),_l(x)),Ai(c,Fl(Ti(o,w))));return[k,Ai(_l(k),Fl(v))]}}),Ll=Js({batchToSpaceND_:function(t,e,n){const r=Xs(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));Q(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),Q(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),Q(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const a={x:r},o={blockShape:e,crops:n};return Vs.runKernel(he,a,o)}}),zl=Js({batchNorm_:function(t,e,n,r,s,a){null==a&&(a=.001);const o=Xs(t,"x","batchNorm"),i=Xs(e,"mean","batchNorm"),l=Xs(n,"variance","batchNorm");let u,c;null!=s&&(u=Xs(s,"scale","batchNorm")),null!=r&&(c=Xs(r,"offset","batchNorm")),Q(i.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Q(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Q(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(t){let e;return e=0===t.rank||1===t.rank?El(t,[1,1,1,t.size]):2===t.rank?El(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?El(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(o),scale:u,offset:c,mean:i,variance:l},p={varianceEpsilon:a},d=Vs.runKernel(Qe,h,p);return El(d,o.shape)}}),Pl=Js({batchNorm2d_:function(t,e,n,r,s,a){const o=Xs(t,"x","batchNorm"),i=Xs(e,"mean","batchNorm"),l=Xs(n,"variance","batchNorm");let u,c;return null!=s&&(u=Xs(s,"scale","batchNorm")),null!=r&&(c=Xs(r,"offset","batchNorm")),Q(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),Q(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),Q(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Q(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Q(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),zl(o,i,l,c,u,a)}}),Bl=Js({batchNorm3d_:function(t,e,n,r,s,a){const o=Xs(t,"x","batchNorm"),i=Xs(e,"mean","batchNorm"),l=Xs(n,"variance","batchNorm");let u,c;return null!=s&&(u=Xs(s,"scale","batchNorm")),null!=r&&(c=Xs(r,"offset","batchNorm")),Q(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),Q(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),Q(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Q(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Q(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),zl(o,i,l,c,u,a)}}),Vl=Js({batchNorm4d_:function(t,e,n,r,s,a){const o=Xs(t,"x","batchNorm"),i=Xs(e,"mean","batchNorm"),l=Xs(n,"variance","batchNorm");let u,c;return null!=s&&(u=Xs(s,"scale","batchNorm")),null!=r&&(c=Xs(r,"offset","batchNorm")),Q(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),Q(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),Q(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Q(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Q(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),zl(o,i,l,c,u,a)}}),Wl=Js({bincount_:function(t,e,n){const r=Xs(t,"x","bincount"),s=Xs(e,"weights","bincount");Q("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Q(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return Vs.runKernel(pe,a,o)}}),Ul=Js({broadcastTo_:function(t,e){let n=Xs(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=El(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Xa(n);const o={x:n},i={reps:a};return Vs.runKernel(Mr,o,i)}}),Gl=Js({ceil_:function(t){const e={x:Xs(t,"x","ceil")};return Vs.runKernel(me,e)}}),Hl=Js({clipByValue_:function(t,e,n){const r=Xs(t,"x","clipByValue");Q(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:e,clipValueMax:n};return Vs.runKernel(ge,s,a)}}),jl=Js({concat1d_:function(t){return Ml(t,0)}}),ql=Js({concat2d_:function(t,e){return Ml(t,e)}}),Kl=Js({concat3d_:function(t,e){return Ml(t,e)}}),Xl=Js({concat4d_:function(t,e){return Ml(t,e)}}),Yl=Js({conv2d_:function(t,e,n,r,s="NHWC",a=[1,1],o){const i=Xs(t,"x","conv2d"),l=Xs(e,"filter","conv2d");let u=i,c=!1;3===i.rank&&(c=!0,u=El(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Q(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Q(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=o&&Q(ot(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];Q(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Q(Tl(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},f=Vs.runKernel(we,p,d);return c?El(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Zl=Js({conv1d_:function(t,e,n,r,s="NWC",a=1,o){const i=Xs(t,"x","conv1d"),l=Xs(e,"filter","conv1d");let u=i,c=!1;2===i.rank&&(c=!0,u=El(i,[1,i.shape[0],i.shape[1]])),Q(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Q(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=o&&Q(ot(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Q(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Q(Tl(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),Q("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=El(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=El(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Yl(p,h,[1,n],r,"NHWC",[1,a],o);return El(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Jl=Js({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",o){Q(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let i=t,l=e,u=!1;3===e.rank&&(u=!0,l=El(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),Q(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),Q(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Q(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?i[3]:i[1],h="NHWC"===a?l.shape[3]:l.shape[1];Q(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Q(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=o&&Q(ot(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const p={dy:l,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,inputShape:i},f=Vs.runKernel(ke,p,d);return u?El(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ql=Js({conv2dTranspose_:function(t,e,n,r,s,a){const o=Xs(t,"x","conv2dTranspose"),i=Xs(e,"filter","conv2dTranspose");return Jl(n,o,i,r,s,"NHWC",a)}}),tu=Js({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const o=Xs(t,"x","conv3d"),i=Xs(e,"filter","conv3d");let l=o,u=!1;4===o.rank&&(u=!0,l=El(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Q(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),Q(l.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),Q(Tl(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Q("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:i},h={strides:n,pad:r,dataFormat:s,dilations:a},p=Vs.runKernel(Ie,c,h);return u?El(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),eu=Js({conv3DBackpropInput_:function(t,e,n,r,s){Q(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,o=e,i=!1;4===e.rank&&(i=!0,o=El(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],u=o.shape[4];Q(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),Q(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),Q(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Q(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Q(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},h={pad:s,strides:r,inputShape:a},p=Vs.runKernel(Se,c,h);return i?El(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),nu=Js({conv3dTranspose_:function(t,e,n,r,s){const a=Xs(t,"x","conv3dTranspose"),o=Xs(e,"filter","conv3dTranspose");return eu(n,a,o,r,s)}}),ru=Js({cos_:function(t){const e={x:Xs(t,"x","cos")};return Vs.runKernel(Ce,e)}}),su=Js({cosh_:function(t){const e={x:Xs(t,"x","cosh")};return Vs.runKernel(Te,e)}}),au=Js({cumsum_:function(t,e=0,n=!1,r=!1){const s={x:Xs(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:r};return Vs.runKernel($e,s,a)}}),ou=Js({denseBincount_:function(t,e,n,r=!1){const s=Xs(t,"x","denseBincount"),a=Xs(e,"weights","denseBincount");Q("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),Q(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),Q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Q(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return Vs.runKernel(Ae,o,i)}}),iu=Js({depthToSpace_:function(t,e,n="NHWC"){const r=Xs(t,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];Q(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),Q(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),Q(o%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},l={blockSize:e,dataFormat:n};return Vs.runKernel(Re,i,l)}}),lu=Js({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],o){const i=Xs(t,"x","depthwiseConv2d"),l=Xs(e,"filter","depthwiseConv2d");let u=i,c=!1;3===i.rank&&(c=!0,u=El(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Q(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Q(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Q(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=o&&Q(ot(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o},d=Vs.runKernel(Me,h,p);return c?El(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),uu=Js({diag_:function(t){const e={x:Xs(t,"x","diag")};return Vs.runKernel(_e,e)}}),cu=Js({dilation2d_:function(t,e,n,r,s=[1,1],a="NHWC"){const o=Xs(t,"x","dilation2d"),i=Xs(e,"filter","dilation2d");Q(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),Q(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),Q("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=o,u=!1;3===o.rank&&(l=El(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=!0);const c={x:l,filter:i},h={strides:n,pad:r,dilations:s},p=Vs.runKernel(Oe,c,h);return u?El(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),hu=Js({equal_:function(t,e){let n=Xs(t,"a","equal"),r=Xs(e,"b","equal");[n,r]=Ms(n,r),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(Ge,s)}}),pu=Js({where_:function(t,e,n){const r=Xs(e,"a","where"),s=Xs(n,"b","where"),a=Xs(t,"condition","where","bool"),o=Ji(Ji(a.shape,r.shape),s.shape),i={condition:Ul(a,o),t:Ul(r,o),e:Ul(s,o)};return Vs.runKernel(cr,i)}}),du=Js({divNoNan_:function(t,e){let n=Xs(t,"a","div"),r=Xs(e,"b","div");[n,r]=Ms(n,r);const s=Ei(n,r),a=Fi(s),o=hu(r,a);return pu(o,a,s)}}),fu=Js({dot_:function(t,e){const n=Xs(t,"t1","dot"),r=Xs(e,"t2","dot");Q(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(Q(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const t=El(n,[1,-1]),e=El(r,[-1,1]),s=mo(t,e);return El(s,[])}if(1===n.rank&&2===r.rank){const t=El(n,[1,-1]),e=El(r,[r.shape[0],r.shape[1]]),s=mo(t,e);return El(s,[s.size])}if(2===n.rank&&1===r.rank){const t=El(r,[-1,1]),e=mo(n,t);return El(e,[e.size])}{const t=El(r,[r.shape[0],r.shape[1]]);return mo(n,t)}}}),mu=Js({einsum_:function(t,...e){const n=e.map(((t,e)=>Xs(t,`tensors${e}`,"einsum"))),r={equation:t};return Vs.runKernel(Be,n,r)}}),gu=Js({elu_:function(t){const e={x:Xs(t,"x","elu")};return Vs.runKernel(Ve,e)}}),yu=Js({erf_:function(t){let e=Xs(t,"x","erf");Q("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Ka(e,"float32"));const n={x:e};return Vs.runKernel(Ue,n)}}),bu=Js({exp_:function(t){const e={x:Xs(t,"x","exp")};return Vs.runKernel(He,e)}}),xu=Js({expandDims_:function(t,e=0){const n=Xs(t,"x","expandDims","string_or_numeric");Q(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:e};return Vs.runKernel(je,r,s)}}),wu=Js({expm1_:function(t){const e={x:Xs(t,"x","expm1")};return Vs.runKernel(qe,e)}}),vu=Js({tile_:function(t,e){const n=Xs(t,"x","tile","string_or_numeric");Q(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r={x:n},s={reps:e};return Vs.runKernel(Mr,r,s)}}),ku=Js({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=qa([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const o=El(s.toTensor(),[t,e]);if(null==n)return o;if(1===n.length)return vu(xu(o,0),[n[0],1,1]);if(2===n.length)return vu(xu(xu(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return vu(xu(xu(xu(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Iu=Js({floor_:function(t){const e={x:Xs(t,"x","floor")};return Vs.runKernel(Ze,e)}}),Nu=Js({gather_:function(t,e,n=0,r=0){const s={x:Xs(t,"x","gather"),indices:Xs(e,"indices","gather","int32")},a={axis:n,batchDims:r};return Vs.runKernel(tn,s,a)}}),Su=Js({greater_:function(t,e){let n=Xs(t,"a","greater"),r=Xs(e,"b","greater");[n,r]=Ms(n,r),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(nn,s)}}),Cu=Js({greaterEqual_:function(t,e){let n=Xs(t,"a","greaterEqual"),r=Xs(e,"b","greaterEqual");[n,r]=Ms(n,r),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(rn,s)}}),Tu=Js({imag_:function(t){const e={input:Xs(t,"input","imag")};return Vs.runKernel(on,e)}}),$u=Js({isFinite_:function(t){const e={x:Xs(t,"x","isFinite")};return Vs.runKernel(ln,e)}}),Eu=Js({isInf_:function(t){const e={x:Xs(t,"x","isInf")};return Vs.runKernel(un,e)}}),Au=Js({isNaN_:function(t){const e={x:Xs(t,"x","isNaN")};return Vs.runKernel(cn,e)}}),Ru=Js({leakyRelu_:function(t,e=.2){const n={x:Xs(t,"x","leakyRelu")},r={alpha:e};return Vs.runKernel(hn,n,r)}}),Mu=Js({less_:function(t,e){let n=Xs(t,"a","less"),r=Xs(e,"b","less");[n,r]=Ms(n,r),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(pn,s)}}),Fu=Js({lessEqual_:function(t,e){let n=Xs(t,"a","lessEqual"),r=Xs(e,"b","lessEqual");[n,r]=Ms(n,r),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(dn,s)}});function Du(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return Vs.runKernel(fn,{},r)}const _u=Js({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=Xs(t,"x","localResponseNormalization");Q(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),Q(ot(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let o=a,i=!1;3===a.rank&&(i=!0,o=El(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:o},u={depthRadius:e,bias:n,alpha:r,beta:s},c=Vs.runKernel(vn,l,u);return i?El(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ou=Js({log_:function(t){const e={x:Xs(t,"x","log")};return Vs.runKernel(mn,e)}}),Lu=Js({log1p_:function(t){const e={x:Xs(t,"x","log1p")};return Vs.runKernel(gn,e)}}),zu=Js({neg_:function(t){const e={x:Xs(t,"x","neg")};return Vs.runKernel(Ln,e)}}),Pu=Js({softplus_:function(t){const e={x:Xs(t,"x","softplus")};return Vs.runKernel(yr,e)}}),Bu=Js({logSigmoid_:function(t){const e=Xs(t,"x","logSigmoid");return Pi((t=>({value:zu(Pu(zu(t))),gradFunc:e=>Ai(e,Fl(zu(t)))})))(e)}}),Vu=Js({max_:function(t,e=null,n=!1){const r={x:Xs(t,"x","max")},s={reductionIndices:e,keepDims:n};return Vs.runKernel(In,r,s)}}),Wu=Js({sum_:function(t,e=null,n=!1){let r=Xs(t,"x","sum");"bool"===r.dtype&&(r=Ka(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return Vs.runKernel(xr,s,a)}}),Uu=Js({logSoftmax_:function(t,e=-1){const n=Xs(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Pi(((t,n)=>{const r=Vu(t,e,!0),s=qi(t,r),a=qi(Ka(s,"float32"),Ou(Wu(bu(s),e,!0)));return n([a]),{value:a,gradFunc:(t,n)=>{const[r]=n,s=bu(r);return qi(t,Ai(Wu(t,e,!0),s))}}}))(n)}});function Gu(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Hu(t,e,n){const r=t.length+e.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(t[a++]):s.push(e[o++]);return s}function ju(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function qu(t,e){return Hu(t,e.map((t=>1)),e)}function Ku(t,e,n){Q(Gu(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function Xu(t,e){if(Gu(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function Yu(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Zu(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}const Ju=Js({logSumExp_:function(t,e=null,n=!1){const r=Xs(t,"x","logSumExp"),s=dt(e,r.shape),a=Vu(r,s,!0),o=qi(r,a),i=bu(o),l=Wu(i,s),u=Ou(l),c=Ti(El(a,u.shape),u);if(n){const t=qu(c.shape,s);return El(c,t)}return c}}),Qu=Js({logicalAnd_:function(t,e){const n=Xs(t,"a","logicalAnd","bool"),r=Xs(e,"b","logicalAnd","bool");Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(yn,s)}}),tc=Js({logicalNot_:function(t){const e={x:Xs(t,"x","logicalNot","bool")};return Vs.runKernel(bn,e)}}),ec=Js({logicalOr_:function(t,e){const n=Xs(t,"a","logicalOr","bool"),r=Xs(e,"b","logicalOr","bool");Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(xn,s)}}),nc=Js({logicalXor_:function(t,e){const n=Xs(t,"a","logicalXor","bool"),r=Xs(e,"b","logicalXor","bool");return Ji(n.shape,r.shape),Qu(ec(t,e),tc(Qu(t,e)))}}),rc=Js({maxPool_:function(t,e,n,r,s){const a=Xs(t,"x","maxPool");let o=a,i=!1;3===a.rank&&(i=!0,o=El(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Q(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),Q(Tl(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&Q(ot(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:o},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},c=Vs.runKernel(Sn,l,u);return i?El(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),sc=Js({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC"){const o=Xs(t,"x","maxPool3d");let i=o,l=!1;4===o.rank&&(l=!0,i=El(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),Q("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&Q(ot(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Vs.runKernel(Tn,u,c);return l?El(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ac=Js({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:Xs(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},i=Vs.runKernel(En,a,o);return{result:i[0],indexes:i[1]}}}),oc=Js({mean_:function(t,e=null,n=!1){const r={x:Xs(t,"x","mean")},s={axis:e,keepDims:n};return Vs.runKernel(An,r,s)}});function ic(t,e="float32"){if("complex64"===e){const e=ic(t,"float32"),n=ic(t,"float32");return Qs(e,n)}const n=Ft(rt(t),e);return Vs.makeTensor(n,t,e)}function lc(t,e="float32"){if("complex64"===e){const e=lc(t,"float32"),n=ic(t,"float32");return Qs(e,n)}const n=Mt(rt(t),e);return Vs.makeTensor(n,t,e)}function uc(t,e,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===t)return[];let r=Xs(t,"x","meshgrid",t instanceof vs?t.dtype:"float32");if(void 0===e)return[r];let s=Xs(e,"y","meshgrid",e instanceof vs?e.dtype:"float32");const a=rt(r.shape),o=rt(s.shape);return"xy"===n?(r=El(r,[1,-1]),s=El(s,[-1,1]),[mo(lc([o,1],r.dtype),r),mo(s,lc([1,a],s.dtype))]):(r=El(r,[-1,1]),s=El(s,[1,-1]),[mo(r,lc([1,o],r.dtype)),mo(lc([a,1],s.dtype),s)])}const cc=Js({min_:function(t,e=null,n=!1){const r={x:Xs(t,"x","min")},s={axis:e,keepDims:n};return Vs.runKernel(Rn,r,s)}}),hc=Js({minimum_:function(t,e){let n=Xs(t,"a","minimum"),r=Xs(e,"b","minimum");[n,r]=Ms(n,r),"bool"===n.dtype&&(n=Ka(n,"int32"),r=Ka(r,"int32")),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(Mn,s)}}),pc=Js({mirrorPad_:function(t,e,n){Q("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Xs(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)Q(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Q(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:e,mode:n},o={x:r};return Vs.runKernel(Fn,o,a)}}),dc=Js({mod_:function(t,e){let n=Xs(t,"a","mod"),r=Xs(e,"b","mod");[n,r]=Ms(n,r);const s={a:n,b:r};return Vs.runKernel(Dn,s)}}),fc=Js({moments_:function(t,e=null,n=!1){const r=dt(e,(t=Xs(t,"x","moments")).shape),s=oc(t,r,n);let a=s.shape;n||(a=qu(s.shape,r));const o=Mi(qi(Ka(t,"float32"),El(s,a)));return{mean:s,variance:oc(o,r,n)}}}),mc=Js({multiRNNCell_:function(t,e,n,r){const s=Xs(e,"data","multiRNNCell"),a=Ys(n,"c","multiRNNCell"),o=Ys(r,"h","multiRNNCell");let i=s;const l=[];for(let e=0;e<t.length;e++){const n=t[e](i,a[e],o[e]);l.push(n[0]),l.push(n[1]),i=n[1]}const u=[],c=[];for(let t=0;t<l.length;t+=2)u.push(l[t]),c.push(l[t+1]);return[u,c]}}),gc=Js({multinomial_:function(t,e,n,r=!1){const s=Xs(t,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?El(s,[1,-1]):s},l={numSamples:e,seed:n,normalized:r},u=Vs.runKernel(_n,i,l);return 1===o?El(u,[u.size]):u}}),yc=Js({notEqual_:function(t,e){let n=Xs(t,"a","notEqual"),r=Xs(e,"b","notEqual");[n,r]=Ms(n,r),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(zn,s)}}),bc=Js({onesLike_:function(t){const e={x:Xs(t,"x","onesLike")};return Vs.runKernel(Wn,e)}}),xc=Js({outerProduct_:function(t,e){const n=Xs(t,"v1","outerProduct"),r=Xs(e,"v2","outerProduct");Q(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=El(n,[-1,1]),a=El(r,[1,-1]);return mo(s,a)}}),wc=Js({pad_:function(t,e,n=0){const r=Xs(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return Vs.runKernel(Hn,a,s)}}),vc=Js({pad1d_:function(t,e,n=0){return Q(2===e.length,(()=>"Invalid number of paddings. Must be length of 2.")),wc(t,[e],n)}}),kc=Js({pad2d_:function(t,e,n=0){return Q(2===e.length&&2===e[0].length&&2===e[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wc(t,e,n)}}),Ic=Js({pad3d_:function(t,e,n=0){return Q(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wc(t,e,n)}}),Nc=Js({pad4d_:function(t,e,n=0){return Q(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),wc(t,e,n)}}),Sc=Js({spaceToBatchND_:function(t,e,n){const r=Xs(t,"x","spaceToBatchND");Q(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),Q(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),Q(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},a={blockShape:e,paddings:n};return Vs.runKernel(wr,s,a)}}),Cc=Js({pool_:function(t,e,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Xs(t,"x","maxPool");let i=o,l=!1;3===o.rank&&(l=!0,i=El(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(Tl(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const u=yl(i.shape,e,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),s=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],s[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(t,e,n){const r=n.map((t=>t[0])),s=n.map((t=>t[1])),a=t.concat(r,s),o=e.map(((t,e)=>(t-a[e]%t)%t)),i=s.map(((t,e)=>t+o[e]));return[e.map(((t,e)=>[r[e],i[e]])),e.map(((t,e)=>[0,o[e]]))]}([u.inHeight,u.inWidth],c,h),m=p?r:"valid",g=p?i:Sc(i,c,d),y=("avg"===n?()=>Al(g,e,a,m):()=>rc(g,e,a,m))(),b=p?y:Ll(y,c,f);return l?El(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),Tc=Js({prelu_:function(t,e){const n={x:Xs(t,"x","prelu"),alpha:Xs(e,"alpha","prelu")};return Vs.runKernel(Kn,n)}}),$c=Js({prod_:function(t,e=null,n=!1){let r=Xs(t,"x","prod");"bool"===r.dtype&&(r=Ka(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return Vs.runKernel(Xn,s,a)}}),Ec=Js({rand_:function(t,e,n){const r=rt(t);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let t=0;t<r;t++)s[t]=e();return Vs.makeTensor(s,t,n)}});var Ac=n(36377);class Rc{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Ac.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*o,e=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Mc{constructor(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;const s=r||Math.random();this.randu=Ac.alea(s.toString()),this.randn=new Rc(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class Fc{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Ac.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Dc=Js({randomGamma_:function(t,e,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Mc(e,n,r,s),o=qa(t,r);for(let t=0;t<o.values.length;t++)o.values[t]=a.nextValue();return o.toTensor()}}),_c=Js({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Rc(e,n,r,!1,s),o=qa(t,r);for(let t=0;t<o.values.length;t++)o.values[t]=a.nextValue();return o.toTensor()}}),Oc=Js({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=qa(t,r),o=new Fc(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=o.nextValue();return a.toTensor()}});function Lc(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return Vs.runKernel(Yn,{},s)}const zc=Js({real_:function(t){const e={input:Xs(t,"input","real")};return Vs.runKernel(Zn,e)}}),Pc=Js({reciprocal_:function(t){const e={x:Xs(t,"x","reciprocal")};return Vs.runKernel(Jn,e)}}),Bc=Js({relu_:function(t){const e={x:Xs(t,"x","relu")};return Vs.runKernel(Qn,e)}}),Vc=Js({relu6_:function(t){const e={x:Xs(t,"x","relu6")};return Vs.runKernel(ar,e)}}),Wc=Js({reverse_:function(t,e){const n={x:Xs(t,"x","reverse")},r={dims:e};return Vs.runKernel(or,n,r)}}),Uc=Js({reverse1d_:function(t){const e=Xs(t,"x","reverse");return Q(1===e.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`)),Wc(e,0)}}),Gc=Js({reverse2d_:function(t,e){const n=Xs(t,"x","reverse");return Q(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Wc(n,e)}}),Hc=Js({reverse3d_:function(t,e){const n=Xs(t,"x","reverse");return Q(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Wc(n,e)}}),jc=Js({reverse4d_:function(t,e){const n=Xs(t,"x","reverse");return Q(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Wc(n,e)}}),qc=Js({round_:function(t){const e={x:Xs(t,"x","round")};return Vs.runKernel(ir,e)}}),Kc=Js({rsqrt_:function(t){const e={x:Xs(t,"x","rsqrt")};return Vs.runKernel(lr,e)}}),Xc=Js({selu_:function(t){const e={x:Xs(t,"x","selu")};return Vs.runKernel(hr,e)}}),Yc=Js({separableConv2d_:function(t,e,n,r,s,a=[1,1],o="NHWC"){const i=Xs(t,"x","separableConv2d"),l=Xs(e,"depthwiseFilter","separableConv2d"),u=Xs(n,"pointwiseFilter","separableConv2d");let c=i,h=!1;if(3===i.rank&&(h=!0,c=El(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Q(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Q(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Q(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Q(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Q(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];Q(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=lu(c,l,r,s,o,a),m=Yl(f,u,1,"valid",o);return h?El(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Zc=async function(t,e){const n=Xs(t,"x","setdiff1d"),r=Xs(e,"y","setdiff1d");Q(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Q(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Q(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let t=0;t<s.length;t++)o.has(s[t])||i++;const l=new ys([i],n.dtype),u=new ys([i],"int32");for(let t=0,e=0;t<s.length;t++)o.has(s[t])||(l.values[e]=s[t],u.values[e]=t,e++);return[l.toTensor(),u.toTensor()]},Jc=Js({sign_:function(t){const e={x:Xs(t,"x","sign")};return Vs.runKernel(mr,e)}}),Qc=Js({sin_:function(t){const e={x:Xs(t,"x","sin")};return Vs.runKernel(dr,e)}}),th=Js({sinh_:function(t){const e={x:Xs(t,"x","sinh")};return Vs.runKernel(fr,e)}}),eh=Js({slice1d_:function(t,e,n){const r=Xs(t,"x","slice1d");return Q(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Dl(r,[e],[n])}}),nh=Js({slice2d_:function(t,e,n){const r=Xs(t,"x","slice2d");return Q(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Dl(r,e,n)}}),rh=Js({slice3d_:function(t,e,n){const r=Xs(t,"x","slice3d");return Q(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Dl(r,e,n)}}),sh=Js({slice4d_:function(t,e,n){const r=Xs(t,"x","slice4d");return Q(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Dl(r,e,n)}}),ah=Js({softmax_:function(t,e=-1){const n=Xs(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return Vs.runKernel(kr,r,s)}}),oh=Js({fft_:function(t){Q("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Vs.runKernel(Ke,e)}}),ih=Js({ifft_:function(t){Q("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return Vs.runKernel(an,e)}}),lh=Js({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=El(t,[n,e]);r=ih(s)}else{const s=[n,2*(e-1)],a=El(zc(t),[n,e]),o=El(Tu(t),[n,e]),i=Wc(Dl(a,[0,1],[n,e-2]),1),l=Ai(Wc(Dl(o,[0,1],[n,e-2]),1),Vi(-1)),u=Ml([a,i],1),c=Ml([o,l],1),h=El(Qs(u,c),[s[0],s[1]]);r=ih(h)}if(r=zc(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=El(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}}),uh=Js({split_:function(t,e,n=0){const r={x:Xs(t,"x","split")},s={numOrSizeSplits:e,axis:n};return Vs.runKernel(vr,r,s)}}),ch=Js({rfft_:function(t,e){Q("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,s=Dl(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Ml([t,ic(r)],t.shape.length-1),n=e}else s=t;const a=Fi(s),o=El(Qs(s,a),[r,n]),i=oh(o),l=Math.floor(n/2)+1,u=zc(i),c=Tu(i),h=uh(u,[l,n-l],u.shape.length-1),p=uh(c,[l,n-l],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=l,El(Qs(h[0],p[0]),d)}}),hh=Js({squaredDifference_:function(t,e){let n=Xs(t,"a","squaredDifference"),r=Xs(e,"b","squaredDifference");[n,r]=Ms(n,r),Ji(n.shape,r.shape);const s={a:n,b:r};return Vs.runKernel(Cr,s,{})}}),ph=Js({squeeze_:function(t,e){const n=Xs(t,"x","squeeze");return El(n,ft(n.shape,e).newShape)}}),dh=Js({stack_:function(t,e=0){const n=Ys(t,"tensors","stack","string_or_numeric");Q(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Q(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:e};return Vs.runKernel(Gn,r,s)}}),fh=Js({step_:function(t,e=0){const n={x:Xs(t,"x","step")},r={alpha:e};return Vs.runKernel(Br,n,r)}}),mh=Js({stridedSlice_:function(t,e,n,r,s=0,a=0,o=0,i=0,l=0){const u={x:Xs(t,"x","stridedSlice")},c={begin:e,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:l};return Vs.runKernel($r,u,c)}}),gh=Js({tan_:function(t){const e={x:Xs(t,"x","tan")};return Vs.runKernel(Ar,e)}});function yh(t,e){et(t);const n=js(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ta(t,null,n,e)}function bh(t,e,n){if(et(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=js(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ta(t,e,r,n)}function xh(t,e,n){if(et(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=js(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ta(t,e,r,n)}function wh(t,e,n){if(et(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=js(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ta(t,e,r,n)}function vh(t,e,n){if(et(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=js(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ta(t,e=e||r,r,n)}const kh=Js({topk_:function(t,e=1,n=!0){const r=Xs(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const a={x:r},o={k:e,sorted:n},[i,l]=Vs.runKernel(Fr,a,o);return{values:i,indices:l}}}),Ih=Js({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Rc(e,n,r,!0,s),o=qa(t,r);for(let t=0;t<o.values.length;t++)o.values[t]=a.nextValue();return o.toTensor()}}),Nh=Js({unique_:function(t,e=0){const n=Xs(t,"x","unique","string_or_numeric");Q(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[a,o]=Vs.runKernel(Or,r,s);return{values:a,indices:o}}}),Sh=Js({unsortedSegmentSum_:function(t,e,n){const r=Xs(t,"x","unsortedSegmentSum"),s=Xs(e,"segmentIds","unsortedSegmentSum","int32");Q(ot(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},o={numSegments:n};return Vs.runKernel(zr,a,o)}}),Ch=Js({unstack_:function(t,e=0){const n=Xs(t,"x","unstack","string_or_numeric");Q(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:e};return Vs.runKernel(Lr,r,s)}});function Th(t,e=!0,n,r){return Vs.makeVariable(t,e,n,r)}function $h(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=qa(t,"int32"),s=qa([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),o=e*t.length;s.values.set(a,o)}return s.toTensor()}const Eh=async function(t){const e=Xs(t,"condition","whereAsync","bool"),n=await e.data(),r=$h(e.shape,n);return t!==e&&e.dispose(),r},Ah=async function(t,e,n){const r=Xs(t,"tensor","boolMask"),s=Xs(e,"mask","boolMask","bool"),a=null==n?0:n,o=s.rank,i=r.shape;Q(o>0,(()=>"mask cannot be scalar")),tt(i.slice(a,a+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let t=a;t<a+o;t++)l*=i[t];const u=i.slice(0,a).concat([l],i.slice(a+o)),c=El(r,u),h=El(s,[-1]),p=await Eh(h),d=ph(p,[1]),f=Nu(c,d,a);return t!==r&&r.dispose(),e!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};function Rh(t,e,n=null){if(0===t.rank)return Xi(t);if(1!==t.rank&&null===n)return Rh(El(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Wu(Xi(t),n);if(e===1/0)return Vu(Xi(t),n);if(e===-1/0)return cc(Xi(t),n);if("euclidean"===e||2===e)return Ri(Wu(ji(Xi(t),Vi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Vu(Wu(Xi(t),n[0]),n[1]-1);if(e===1/0)return Vu(Wu(Xi(t),n[1]),n[0]);if(e===-1/0)return cc(Wu(Xi(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Ri(Wu(Mi(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Mh=Js({norm_:function(t,e="euclidean",n=null,r=!1){const s=Rh(t=Xs(t,"x","norm"),e,n);let a=s.shape;if(r){const e=dt(n,t.shape);a=qu(s.shape,e)}return El(s,a)}}),Fh=Js({movingAverage_:function(t,e,n,r,s=!0){const a=Xs(t,"v","movingAverage"),o=Xs(e,"x","movingAverage"),i=Xs(n,"decay","movingAverage");Fs(a,o),Q(at(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=Vi(1),u=qi(l,i);let c=Ai(qi(o,a),u);if(s){Q(null!=r,(()=>"When using zeroDebias: true, step is required."));const t=Xs(r,"step","movingAverage");c=Ei(c,qi(l,ji(i,t)))}return Ti(a,c)}}),Dh=Js({scatterND_:function(t,e,n){const r=Xs(t,"indices","scatterND","int32"),s=Xs(e,"updates","scatterND");To(s,r,n);const a={indices:r,updates:s},o={shape:n};return Vs.runKernel(ur,a,o)}}),_h=Js({sparseToDense_:function(t,e,n,r=0){const s=Xs(t,"sparseIndices","sparseToDense","int32"),a=Xs(e,"sparseValues","sparseToDense"),o=Xs(r,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},l={outputShape:n};return Vs.runKernel(Sr,i,l)}}),Oh=Js({gatherND_:function(t,e){const n=Xs(e,"indices","gatherND","int32"),r={params:Xs(t,"x","gatherND"),indices:n};return Vs.runKernel(en,r)}}),Lh=Js({dropout_:function(t,e,n,r){const s=Xs(t,"x","dropout");if(Q("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Q(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof vs?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(at(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),o=1-e,i=Ei(Iu(Ti(Oc(a,0,1,"float32",r),o)),o);return Ai(s,i)}});function zh(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Ph(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const o=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(o)}return yh(s,"float32")}const Bh=async function(t,e,n=1){const r=Xs(t,"predictions","inTopK"),s=Xs(e,"targets","inTopK");Q(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Q(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),tt(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Q(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const o=await r.data(),i=await s.data(),[l,u]=[o.length/a,a],c=mt("bool",l);for(let t=0;t<l;t++){const e=t*u,r=o.subarray(e,e+u),s=[];for(let t=0;t<r.length;t++)s.push({value:r[t],index:t});s.sort(((t,e)=>e.value-t.value)),c[t]=0;for(let e=0;e<n;e++)if(s[e].index===i[t]){c[t]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),ea(c,s.shape,"bool")},Vh=Js({conv2DBackpropFilter_:function(t,e,n,r,s,a="NHWC",o){let i=t;3===t.rank&&(i=El(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=El(e,[1,e.shape[0],e.shape[1],e.shape[2]])),Q(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),Q(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Q(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?i.shape[3]:i.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];Q(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Q(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=o&&Q(ot(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const h={x:i,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:o,filterShape:n};return Vs.runKernel(ve,h,p)}});function Wh(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Ai(t,fh(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Uh(t,e){let n=e;const r=Zi(t.shape,e.shape);return r.length>0&&(n=Wu(n,r)),El(n,t.shape)}function Gh(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Bc(t);if("elu"===e)return gu(t);if("relu6"===e)return Vc(t);if("prelu"===e)return Tc(t,n);if("leakyrelu"===e)return Ru(t,r);if("sigmoid"===e)return Fl(t);throw new Error(`Unknown fused activation ${e}.`)}const Hh=(t,e)=>!(t>0)||"linear"===e,jh=Js({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Hh(Vs.state.gradientDepth,l)){let h=Yl(t,e,n,r,s,a,o);return null!=i&&(h=Ti(h,i)),Gh(h,l,u,c)}const h=Xs(t,"x","conv2d"),p=Xs(e,"filter","conv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=El(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),Q(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=o&&Q(ot(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),Q(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),Q(Tl(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Q("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=xl(d.shape,p.shape,n,a,r,o);let g,y;null!=i&&(g=Xs(i,"bias","fused conv2d"),[g]=Ms(g,h),Ji(m.outShape,g.shape)),null!=u&&(y=Xs(u,"prelu weights","fused conv2d"));const b=(t,e)=>{const[s,o,i,u]=e,c=Wh(t,i,l);Q(Cl(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Jl(o.shape,c,s,n,r),Vh(o,c,s.shape,n,r)];if(null!=u){const t=Uh(u,c);h.push(t)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return null==i?Pi(((t,e,n)=>{let r=Vs.runKernel(Gr,x,w);return n([e,t,r]),f&&(r=El(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p):Pi(((t,e,n,r)=>{let s=Vs.runKernel(Gr,x,w);return r([e,t,s,n]),f&&(s=El(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p,g)}}),qh=Js({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,a=[1,1],o){let i=t;3===t.rank&&(i=El(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=El(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:i,dy:l},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,filterShape:n};return Vs.runKernel(Fe,u,c)}}),Kh=Js({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,a=[1,1],o){let i=e,l=!1;3===e.rank&&(l=!0,i=El(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:o,dilations:a,inputShape:t},h=Vs.runKernel(De,u,c);return l?El(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Xh=Js({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:o,bias:i,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Hh(Vs.state.gradientDepth,l)){let h=lu(t,e,n,r,s,a,o);return null!=i&&(h=Ti(h,i)),Gh(h,l,u,c)}const h=Xs(t,"x","depthwiseConv2d"),p=Xs(e,"filter","depthwiseConv2d");let d=h,f=!1;3===h.rank&&(f=!0,d=El(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),Q(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),Q(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),Q(Tl(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=o&&Q(ot(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`));const m=xl(d.shape,p.shape,n,a,r,o,!0);let g,y;null!=i&&(g=Xs(i,"bias","fused conv2d"),[g]=Ms(g,h),Ji(m.outShape,g.shape)),null!=u&&(y=Xs(u,"prelu weights","fused depthwiseConv2d"));const b=(t,e)=>{Q(Cl(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,i,u,c]=e,h=Wh(t,u,l),p=Kh(i.shape,h,s,n,r,a,o),d=qh(i,h,s.shape,n,r,a,o);return null!=c?[p,d,Uh(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:o,activation:l,leakyreluAlpha:c};return null==i?Pi(((t,e,n)=>{let r=Vs.runKernel(Hr,x,w);return n([e,t,r]),f&&(r=El(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p):Pi(((t,e,n,r)=>{let s=Vs.runKernel(Hr,x,w);return r([e,t,s,n]),f&&(s=El(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p,g)}}),Yh=Js({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(!1===Hh(Vs.state.gradientDepth,a)){let l=mo(t,e,n,r);return null!=s&&(l=Ti(l,s)),Gh(l,a,o,i)}let l=Xs(t,"a","fused matMul"),u=Xs(e,"b","fused matMul");[l,u]=Ms(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=rt(f),y=rt(m);Q(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),Q(at(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),Q(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=l.shape.slice(0,-2).concat([p,d]),x=El(l,n?[g,c,p]:[g,p,c]),w=El(u,r?[y,d,h]:[y,h,d]);let v,k;null!=s&&(v=Xs(s,"bias","fused matMul"),[v]=Ms(v,l),Ji(b,v.shape)),null!=o&&(k=Xs(o,"prelu weights","fused matMul"));const I=(t,e)=>{const[o,i,l,u]=e,c=Wh(El(t,l.shape),l,a);let h,p;return n||r?!n&&r?(h=mo(c,i,!1,!1),p=mo(c,o,!0,!1)):n&&!r?(h=mo(i,c,!1,!0),p=mo(o,c,!1,!1)):(h=mo(i,c,!0,!0),p=mo(c,o,!0,!0)):(h=mo(c,i,!1,!0),p=mo(o,c,!0,!1)),null!=s?[h,p,Uh(u,c)]:[h,p]},N={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:i};return null==s?Pi(((t,e,n)=>{const r=Vs.runKernel(Ur,N,S);return n([t,e,r]),{value:El(r,b),gradFunc:I}}))(x,w):Pi(((t,e,n,r)=>{const s=Vs.runKernel(Ur,N,S);return r([t,e,s,n]),{value:El(s,b),gradFunc:I}}))(x,w,v)}}),Zh=Js({hammingWindow_:function(t){return Ph(t,.54,.46)}}),Jh=Js({hannWindow_:function(t){return Ph(t,.5,.5)}}),Qh=Js({frame_:function(t,e,n,r=!1,s=0){let a=0;const o=[];for(;a+e<=t.size;)o.push(Dl(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,i=Ml([Dl(t,a,e-r),Gi([r],s)]);o.push(i),a+=n}return 0===o.length?bh([],[0,e]):El(Ml(o),[o.length,e])}}),tp=Js({stft_:function(t,e,n,r,s=Jh){null==r&&(r=zh(e));const a=Qh(t,e,n),o=Ai(a,s(e));return ch(o,r)}}),ep=Js({cropAndResize_:function(t,e,n,r,s="bilinear",a=0){const o=Xs(t,"image","cropAndResize"),i=Xs(e,"boxes","cropAndResize","float32"),l=Xs(n,"boxInd","cropAndResize","int32"),u=i.shape[0];Q(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),Q(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`)),Q(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`)),Q(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Q(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Q("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:i,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Vs.runKernel(Ee,c,h)}}),np=Js({flipLeftRight_:function(t){const e=Xs(t,"image","flipLeftRight","float32");Q(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return Vs.runKernel(Ye,n,{})}}),rp=Js({rotateWithOffset_:function(t,e,n=0,r=.5){const s=Xs(t,"image","rotateWithOffset","float32");Q(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:e,fillValue:n,center:r};return Vs.runKernel(Wr,a,o)}});function sp(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=t.shape[0];return n=Math.min(n,o),Q(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Q(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),Q(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),Q(1===e.rank,(()=>"scores must be a 1D tensor")),Q(e.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`)),Q(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const ap=Js({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Xs(t,"boxes","nonMaxSuppression"),o=Xs(e,"scores","nonMaxSuppression"),i=sp(a,o,n,r,s),l={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return Vs.runKernel(Pn,{boxes:a,scores:o},l)}});function op(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(e,t[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(t,e,n||ip)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function ip(t,e){return t>e?1:t<e?-1:0}function lp(t,e,n,r,s){return hp(t,e,n,r,s,0)}function up(t,e,n,r,s,a){return hp(t,e,n,r,s,0,!1,a,!0)}function cp(t,e,n,r,s,a){return hp(t,e,n,r,s,a,!0)}function hp(t,e,n,r,s,a,o=!1,i=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(fp);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:o}=e;if(n<s)break;let i=!1;for(let n=h.length-1;n>=o;--n){const o=pp(t,a,h[n]);if(o>=r){i=!0;break}if(e.score=e.score*dp(r,c,o),e.score<=s)break}e.suppressBeginIndex=h.length,i||(e.score===n?(h.push(a),p.push(e.score)):e.score>s&&op(u,e,fp))}const d=h.length,f=n-d;i&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function pp(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(i-a)*(l-o),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(o,c),y=Math.min(i,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function dp(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function fp(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const mp=Js({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Xs(t,"boxes","nonMaxSuppression"),i=Xs(e,"scores","nonMaxSuppression"),l=sp(o,i,n,r,s,a),u={boxes:o,scores:i},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Vs.runKernel(Vn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),gp=Js({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=Xs(t,"boxes","nonMaxSuppression"),i=Xs(e,"scores","nonMaxSuppression"),l=sp(o,i,n,r,s,null),u={boxes:o,scores:i},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Vs.runKernel(Bn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),yp=Js({resizeBilinear_:function(t,e,n=!1,r=!1){const s=Xs(t,"images","resizeBilinear");Q(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Q(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),Q(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=El(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:e},u=Vs.runKernel(rr,i,l);return o?El(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),bp=Js({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const s=Xs(t,"images","resizeNearestNeighbor");Q(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Q(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),Q("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Q(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=El(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,i={images:a},l={alignCorners:n,halfPixelCenters:r,size:e},u=Vs.runKernel(er,i,l);return o?El(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),xp=Js({threshold_:function(t,e="binary",n=!1,r=.5){const s=Xs(t,"image","threshold"),a=s.shape[0]*s.shape[1];let o,i,l,u,c=Ai(yh([r]),255);if(Q(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),Q(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),Q("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),Q("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===s.shape[2]){[o,i,l]=uh(s,[1,1,1],-1);const t=Ai(o,.2989),e=Ai(i,.587),n=Ai(l,.114);u=Ti(Ti(t,e),n)}else u=t;"otsu"===e&&(c=function(t,e){let n,r,s,a,o,i,l=yh([-1]),u=yh([0]),c=yh([0]);for(let h=0;h<t.size-1;h++){n=Dl(t,0,h+1),r=Dl(t,h+1),o=Ei(Wu(n),e),i=Ei(Wu(r),e);const p=Wu(Ai(n,Lc(0,n.size)));s=Ei(p,Wu(n));const d=Gi(r.shape,n.size),f=Ti(Lc(0,r.size),d),m=Ai(r,f);a=Ei(Wu(m),Wu(r));const g=qi(s,a),y=qi(s,a),b=Ai(o,i);c=Ai(Ai(b,g),y);const x=Su(c,u);u=pu(x,c,u),l=pu(x,yh([h]),l)}return l}(Wl(Ka(qc(u),"int32"),ea([]),256),a));const h=n?Fu(u,c):Su(u,c);return Ka(Ai(h,255),"int32")}}),wp=Js({transform_:function(t,e,n="nearest",r="constant",s=0,a){const o=Xs(t,"image","transform","float32"),i=Xs(e,"transforms","transform","float32");Q(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),Q(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Q(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:o,transforms:i},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Vs.runKernel(Dr,l,u)}}),vp=Js({bandPart_:function(t,e,n){Q(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Q(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Xs(t,"a","bandPart");Q(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);e<0&&(e=a),n<0&&(n=o);const i=El(Lc(0,a,1,"int32"),[-1,1]),l=Lc(0,o,1,"int32"),u=qi(i,l),c=Qu(Fu(u,Vi(+e,"int32")),Cu(u,Vi(-n,"int32"))),h=ic([a,o],r.dtype);return El(dh(Ch(El(r,[-1,a,o])).map((t=>pu(c,t,h)))),s)}}),kp=Js({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Q(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)Q(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=uh(t,t.shape[0],0).map((t=>ph(t,[0])));Q(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(Vs.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Ai(Wu(Ai(n[r],t)),n[r]);t=qi(t,e)}return Ei(t,Mh(t,"euclidean"))})));return e?dh(n,0):n}});function Ip(t,e=!1){return Vs.tidy((()=>{Q(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=ku(n),a=Xa(t);const o=bh([[1]],[1,1]);let i=Xa(o);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=a,l=i,u=s;[i,a,s]=Vs.tidy((()=>{const e=Dl(a,[t,t],[n-t,1]),l=Mh(e),u=Dl(a,[t,t],[1,1]),c=pu(Su(u,0),bh([[-1]]),bh([[1]])),h=qi(u,Ai(c,l)),p=Ei(e,h);i=1===p.shape[0]?Xa(o):Ml([o,Dl(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=zu(Ei(mo(c,h),l)),f=Dl(a,[t,0],[n-t,r]),m=Ai(d,i),g=yo(i);if(0===t)a=qi(f,mo(m,mo(g,f)));else{const e=qi(f,mo(m,mo(g,f)));a=Ml([Dl(a,[0,0],[t,r]),e],0)}const y=yo(m),b=Dl(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=qi(b,mo(mo(b,i),y));else{const e=qi(b,mo(mo(b,i),y));s=Ml([Dl(s,[0,0],[n,t]),e],1)}return[i,a,s]})),mi([e,l,u])}return!e&&n>r&&(s=Dl(s,[0,0],[n,r]),a=Dl(a,[0,0],[r,r])),[s,a]}))}const Np=Js({qr_:function(t,e=!1){if(Q(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Ip(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=Ch(El(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];return r.forEach((t=>{const[n,r]=Ip(t,e);s.push(n),a.push(r)})),[El(dh(s,0),t.shape),El(dh(a,0),t.shape)]}}});var Sp;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Sp||(Sp={}));const Cp=Js({computeWeightedLoss_:function(t,e,n=Sp.SUM_BY_NONZERO_WEIGHTS){const r=Xs(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=Xs(e,"weights","computeWeightedLoss"));const a=null==s?r:Ai(r,s);if(n===Sp.NONE)return a;if(n===Sp.SUM)return Wu(a);if(n===Sp.MEAN){if(null==s)return oc(a);{const t=r.size/s.size,e=Ei(Wu(a),Wu(s));return t>1?Ei(e,Vi(t)):e}}if(n===Sp.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ei(Wu(a),Vi(r.size));{const t=Ai(s,lc(r.shape)),e=Ka(Wu(yc(t,Vi(0))),"float32");return Ei(Wu(a),e)}}throw Error(`Unknown reduction: ${n}`)}}),Tp=Js({absoluteDifference_:function(t,e,n,r=Sp.SUM_BY_NONZERO_WEIGHTS){const s=Xs(t,"labels","absoluteDifference"),a=Xs(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Xs(n,"weights","absoluteDifference")),tt(s.shape,a.shape,"Error in absoluteDifference: ");const i=Xi(qi(s,a));return Cp(i,o,r)}}),$p=Js({cosineDistance_:function(t,e,n,r,s=Sp.SUM_BY_NONZERO_WEIGHTS){const a=Xs(t,"labels","cosineDistance"),o=Xs(e,"predictions","cosineDistance");let i=null;null!=r&&(i=Xs(r,"weights","cosineDistance")),tt(a.shape,o.shape,"Error in cosineDistance: ");const l=Vi(1),u=qi(l,Wu(Ai(a,o),n,!0));return Cp(u,i,s)}}),Ep=Js({hingeLoss_:function(t,e,n,r=Sp.SUM_BY_NONZERO_WEIGHTS){let s=Xs(t,"labels","hingeLoss");const a=Xs(e,"predictions","hingeLoss");let o=null;null!=n&&(o=Xs(n,"weights","hingeLoss")),tt(s.shape,a.shape,"Error in hingeLoss: ");const i=Vi(1);s=qi(Ai(Vi(2),s),i);const l=Bc(qi(i,Ai(s,a)));return Cp(l,o,r)}}),Ap=Js({huberLoss_:function(t,e,n,r=1,s=Sp.SUM_BY_NONZERO_WEIGHTS){const a=Xs(t,"labels","huberLoss"),o=Xs(e,"predictions","huberLoss");let i=null;null!=n&&(i=Xs(n,"weights","huberLoss")),tt(a.shape,o.shape,"Error in huberLoss: ");const l=Vi(r),u=Xi(qi(o,a)),c=hc(u,l),h=qi(u,c),p=Ti(Ai(Vi(.5),Mi(c)),Ai(l,h));return Cp(p,i,s)}}),Rp=Js({logLoss_:function(t,e,n,r=1e-7,s=Sp.SUM_BY_NONZERO_WEIGHTS){const a=Xs(t,"labels","logLoss"),o=Xs(e,"predictions","logLoss");let i=null;null!=n&&(i=Xs(n,"weights","logLoss")),tt(a.shape,o.shape,"Error in logLoss: ");const l=Vi(1),u=Vi(r),c=zu(Ai(a,Ou(Ti(o,u)))),h=Ai(qi(l,a),Ou(Ti(qi(l,o),u))),p=qi(c,h);return Cp(p,i,s)}}),Mp=Js({meanSquaredError_:function(t,e,n,r=Sp.SUM_BY_NONZERO_WEIGHTS){const s=Xs(t,"labels","meanSquaredError"),a=Xs(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=Xs(n,"weights","meanSquaredError")),tt(s.shape,a.shape,"Error in meanSquaredError: ");const i=hh(s,a);return Cp(i,o,r)}}),Fp=Js({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Sp.SUM_BY_NONZERO_WEIGHTS){let a=Xs(t,"multiClassLabels","sigmoidCrossEntropy");const o=Xs(e,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Xs(n,"weights","sigmoidCrossEntropy")),tt(a.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Vi(r),e=Vi(1),n=Vi(.5);a=Ti(Ai(a,qi(e,t)),Ai(n,t))}const l=function(t,e){const n=Xs(t,"labels","sigmoidCrossEntropyWithLogits"),r=Xs(e,"logits","sigmoidCrossEntropyWithLogits");tt(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Bc(r),a=Ai(r,n),o=Lu(bu(zu(Xi(r))));return Ti(qi(s,a),o)}(a,o);return Cp(l,i,s)}}),Dp=Js({softmaxCrossEntropy_:function(t,e,n,r=0,s=Sp.SUM_BY_NONZERO_WEIGHTS){let a=Xs(t,"onehotLabels","softmaxCrossEntropy");const o=Xs(e,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Xs(n,"weights","softmaxCrossEntropy")),tt(a.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Vi(r),e=Vi(1),n=Vi(a.shape[1]);a=Ti(Ai(a,qi(e,t)),Ei(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Pi(((t,e,r)=>{const s=Ju(e,[n],!0),a=qi(Ka(e,"float32"),s);r([t,a]);const o=zu(Ai(a,t));return{value:Wu(o,[n]),gradFunc:(t,e)=>{const[r,s]=e,a=qu(t.shape,[n]);return[Ai(El(t,a),qi(Ka(r,"float32"),bu(s))),Ai(El(t,a),qi(bu(s),Ka(r,"float32")))]}}}))(t,e)}(a,o);return Cp(l,i,s)}}),_p=Js({sparseFillEmptyRows_:function(t,e,n,r){const s=Xs(t,"indices","sparseFillEmptyRows"),a=Xs(e,"values","sparseFillEmptyRows"),o=Xs(n,"denseShape","sparseFillEmptyRows"),i=Xs(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const l={indices:s,values:a,denseShape:o,defaultValue:i},u=Vs.runKernel(Ir,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Op=Js({sparseReshape_:function(t,e,n){const r=Xs(t,"inputIndices","sparseReshape"),s=Xs(e,"inputShape","sparseReshape"),a=Xs(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:r,inputShape:s,newShape:a},i=Vs.runKernel(Nr,o);return{outputIndices:i[0],outputShape:i[1]}}}),Lp={fft:oh,ifft:ih,rfft:ch,irfft:lh},zp={hammingWindow:Zh,hannWindow:Jh,frame:Qh,stft:tp},Pp={flipLeftRight:np,resizeNearestNeighbor:bp,resizeBilinear:yp,rotateWithOffset:rp,cropAndResize:ep,nonMaxSuppression:ap,nonMaxSuppressionAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Xs(t,"boxes","nonMaxSuppressionAsync"),o=Xs(e,"scores","nonMaxSuppressionAsync"),i=sp(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const l=await Promise.all([a.data(),o.data()]),u=l[0],c=l[1],{selectedIndices:h}=lp(u,c,n,r,s);return a!==t&&a.dispose(),o!==e&&o.dispose(),yh(h,"int32")},nonMaxSuppressionWithScore:mp,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=Xs(t,"boxes","nonMaxSuppressionAsync"),i=Xs(e,"scores","nonMaxSuppressionAsync"),l=sp(o,i,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([o.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=cp(c,h,n,r,s,a);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:yh(p,"int32"),selectedScores:yh(d)}},nonMaxSuppressionPadded:gp,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=Xs(t,"boxes","nonMaxSuppressionAsync"),i=Xs(e,"scores","nonMaxSuppressionAsync"),l=sp(o,i,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=up(p,d,u,c,h,a);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:yh(f,"int32"),validOutputs:Vi(m,"int32")}},threshold:xp,transform:wp},Bp={bandPart:vp,gramSchmidt:kp,qr:Np},Vp={absoluteDifference:Tp,computeWeightedLoss:Cp,cosineDistance:$p,hingeLoss:Ep,huberLoss:Ap,logLoss:Rp,meanSquaredError:Mp,sigmoidCrossEntropy:Fp,softmaxCrossEntropy:Dp},Wp={sparseFillEmptyRows:_p,sparseReshape:Op};class Up{static sgd(t){return new el(t)}static momentum(t,e,n=!1){return new nl(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new rl(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Ki(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Ui(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new tl(t,e,n,r,s)}static adagrad(t,e=.1){return new Hi(t,e)}}const Gp={sgd:Up.sgd,momentum:Up.momentum,adadelta:Up.adadelta,adagrad:Up.adagrad,rmsprop:Up.rmsprop,adamax:Up.adamax,adam:Up.adam},Hp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function jp(){return new Promise((t=>Hp((()=>t()))))}function qp(t,e){const n=t[0].length;t.forEach(((t,e)=>{Q(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),Q(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let a=0;a<n;a++)Q(a===e||t[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Kp(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}const Xp=30;function Yp(t){return t<=Xp?t:$t(t,Math.floor(Math.sqrt(t)))}function Zp(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function Jp(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function Qp(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function td(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function ed(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function nd(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}const rd=1.7580993408473768,sd=1.0507009873554805,ad=.3275911,od=.254829592,id=-.284496736,ld=1.421413741,ud=-1.453152027,cd=1.061405429;function hd(...t){Vt().getBool("IS_TEST")||console.warn(...t)}function pd(...t){Vt().getBool("IS_TEST")||console.log(...t)}function dd(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function fd(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function md(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function gd(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function yd(t,e){return{real:t[2*e],imag:t[2*e+1]}}function bd(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function xd(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function wd(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const vd=/->/g;function kd(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(vd,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=t.split("->");Q(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),o=a.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let t=0;t<s.length;++t){const e=s[t];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let t=0;t<r.length;++t){const e=r[t];-1===i.indexOf(e)&&","!==e&&i.push(e)}const l=new Array(a.length);for(let t=0;t<o;++t){if(new Set(a[t].split("")).size!==a[t].length)throw new Error(`Found duplicate axes in input component ${a[t]}. Support for duplicate axes in input is not implemented yet.`);l[t]=[];for(let e=0;e<a[t].length;++e)l[t].push(i.indexOf(a[t][e]))}const u=i.length,c=[];for(let t=s.length;t<u;++t)c.push(t);return{allDims:i,summedDims:c,idDims:l}}function Id(t,e){let n=new Array(t);n.fill(-1);for(let t=0;t<e.length;++t)n[e[t]]=t;const r=[];for(let e=0;e<t;++e)-1===n[e]&&r.push(e);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:r}}function Nd(t,e,n){const r=new Array(t);for(let t=0;t<n.length;++t){const s=n[t].shape;for(let n=0;n<e[t].length;++n)void 0===r[e[t][n]]?r[e[t][n]]=s[n]:Q(r[e[t][n]]===s[n],(()=>`Expected dimension ${r[e[t][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Sd(t,e){const n=t,r=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let t=0;t<s;++t)r.push([]);const a=[];for(let t=0;t<n.length;++t){const s=Td(e,n[t]);for(const e of s)-1===a.indexOf(e)&&(r[t].push(e),a.push(e))}return{path:n,steps:r}}function Cd(t){return t.every(((t,e)=>t===e))}function Td(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function $d(t,e,n=0){let r=[];if("number"==typeof e)Q(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{Q(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}Q(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function Ed(t,e){let n,r=!1;for(t<=Xp?(n=t,r=!0):n=$t(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=$t(t,n+1);return n}function Ad(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}function Rd(t,e,n,r){const s=e.shape.length,a=t.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const o=t.shape[n],i=[];let l=1,u=1,c=1;for(let e=0;e<r;++e)i.push(t.shape[e]),l*=t.shape[e];for(let e=r;e<n;e++)i.push(t.shape[e]),u*=t.shape[e];for(let t=r;t<s;t++)i.push(e.shape[t]);for(let e=n+1;e<a;e++)i.push(t.shape[e]),c*=t.shape[e];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function Md(t){try{return t.map((t=>ls(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Fd(t){return t.map((t=>is(t)))}const Dd={kernelName:jt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(t,fh(Ka(n,"float32"),-1))}}},_d={kernelName:qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Mi(Ka(n,"float32")),r=Ri(qi(Vi(1),e));return zu(Ei(t,r))}}}},Od={kernelName:Kt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ri(qi(Mi(Ka(n,"float32")),1));return Ei(t,e)}}}},Ld={kernelName:Xt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ji(n.shape,r.shape);return{a:()=>{let e=t;const r=Zi(n.shape,s);return r.length>0&&(e=Wu(e,r)),El(e,n.shape)},b:()=>{let e=t;const n=Zi(r.shape,s);return n.length>0&&(e=Wu(e,n)),El(e,r.shape)}}}},zd={kernelName:Yt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}},Pd={kernelName:Qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(n)}}},Bd={kernelName:te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fi(n)}}},Vd={kernelName:ee,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,Ri(qi(Vi(1),Mi(Ka(n,"float32")))))}}},Wd={kernelName:ne,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ri(Ti(Vi(1),Mi(Ka(n,"float32"))));return Ei(t,e)}}}},Ud={kernelName:ae,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ji(n.shape,r.shape);return{a:()=>{const e=Ti(Mi(n),Mi(r));let a=Ai(t,Ei(r,e));const o=Zi(n.shape,s);return o.length>0&&(a=Wu(a,o)),El(a,n.shape)},b:()=>{const e=Ti(Mi(n),Mi(r));let a=zu(Ai(t,Ei(n,e)));const o=Zi(r.shape,s);return o.length>0&&(a=Wu(a,o)),El(a,r.shape)}}}},Gd={kernelName:re,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,Ti(Mi(Ka(n,"float32")),1))}}},Hd={kernelName:se,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,qi(Vi(1),Mi(Ka(n,"float32"))))}}},jd=Js({avgPool3dGrad_:function(t,e,n,r,s,a){const o=Xs(t,"dy","avgPool3dGrad"),i=Xs(e,"input","avgPool3dGrad");let l=o,u=i,c=!1;4===i.rank&&(c=!0,l=El(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),u=El(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Q(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Q(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&Q(ot(s),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={dy:l,input:u},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=Vs.runKernel(ue,h,p);return c?El(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),qd={kernelName:le,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>jd(t,r,s,a,o,i)}}},Kd=Js({avgPoolGrad_:function(t,e,n,r,s){const a=Xs(t,"dy","avgPoolGrad"),o=Xs(e,"input","avgPoolGrad");Q(o.rank===a.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`));let i=o,l=a,u=!1;3===o.rank&&(u=!0,i=El(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=El(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Q(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Q(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const c={dy:l,input:i},h={filterSize:n,strides:r,pad:s},p=Vs.runKernel(ie,c,h);return u?El(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Xd={kernelName:oe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:s,strides:a,pad:o}=n;return{x:()=>Kd(t,r,s,a,o)}}},Yd={kernelName:ce,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,s]=e,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>mo(t,s,!1,!1),b:()=>mo(t,r,!0,!1)}:a&&!o?{a:()=>mo(s,t,!1,!0),b:()=>mo(r,t,!1,!1)}:{a:()=>mo(s,t,!0,!0),b:()=>mo(t,r,!0,!0)}:{a:()=>mo(t,s,!1,!0),b:()=>mo(r,t,!0,!1)}}},Zd={kernelName:he,gradFunc:(t,e,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Sc(t,r,s)}}},Jd={kernelName:de,gradFunc:(t,e,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let t=s.length-1;t>=0;t--)if(s[t]===a[t])o[t]=1;else if(1!==s[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let t=0;t<o.length;t++)o[t]>1&&i.push(t);return{x:()=>Wu(t,i,!0)}}},Qd={kernelName:fe,gradFunc:t=>({x:()=>t.clone()})},tf={kernelName:me,gradFunc:t=>({x:()=>Fi(t)})},ef={kernelName:ge,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>pu(Qu(Cu(r,s),Fu(r,a)),t,Fi(t))}}},nf={kernelName:be,inputsToSave:["x"],gradFunc:Dd.gradFunc},rf={kernelName:xe,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:s}=n,a=dt(s,e[0].shape)[0],o=r.map((t=>t[a]));return uh(t,o,a).map((t=>()=>t))}},sf={kernelName:we,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{dilations:a,strides:o,pad:i,dataFormat:l}=n;return Q(Cl(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Jl(r.shape,t,s,o,i,l),filter:()=>Vh(r,t,s.shape,o,i,l)}}},af={kernelName:ke,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,{strides:a,pad:o,dataFormat:i,dimRoundingMode:l}=n;return{dy:()=>Yl(t,s,a,o,i,1,l),filter:()=>Vh(t,r,s.shape,a,o,i,l)}}},of=Js({conv3DBackpropFilter_:function(t,e,n,r,s){let a=t;4===t.rank&&(a=El(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=El(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),Q(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),Q(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),Q(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Q(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Q(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:a,dy:o},l={strides:r,pad:s,filterShape:n};return Vs.runKernel(Ne,i,l)}}),lf={kernelName:Ie,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a}=n;Q(Cl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=e;return{x:()=>eu(o.shape,t,i,s,a),filter:()=>of(o,t,i.shape,s,a)}}},uf={kernelName:Ce,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(zu(Qc(Ka(n,"float32"))),t)}}},cf={kernelName:Te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(th(Ka(n,"float32")),t)}}},hf={kernelName:$e,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{const e=Xu([s],r.rank);let n=au(t,s,a,!o);return null!=e&&(n=yo(n,e)),n}}}},pf={kernelName:Me,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;Q(Cl(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[l,u]=e;return Q(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Q(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Q(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Q(Tl(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),null!=o&&Q(ot(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`)),{x:()=>Kh(l.shape,t,u,s,a,r,o),filter:()=>qh(l,t,u.shape,s,a,r,o)}}},df={kernelName:Oe,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,s]=e,a={x:r,filter:s,dy:t},o={x:r,filter:s,dy:t};return{x:()=>Vs.runKernel(Le,a,n),filter:()=>Vs.runKernel(ze,o,n)}}},ff={kernelName:Ve,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>Vs.runKernel(We,r)}}},mf={kernelName:Ue,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Ai(bu(zu(Mi(n))),2/Math.sqrt(Math.PI));return{x:()=>Ai(t,r)}}},gf={kernelName:He,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(t,n)}}},yf={kernelName:je,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>El(t,n.shape)}}},bf={kernelName:qe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(t,bu(n))}}},xf={kernelName:Ze,gradFunc:t=>({x:()=>Fi(t)})},wf={kernelName:Je,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ji(n.shape,r.shape);return{a:()=>{const e=Ei(t,Ka(r,"float32")),a=Zi(n.shape,s);return a.length>0?El(Wu(e,a),n.shape):e},b:()=>{let e=Ai(t,Ka(n,"float32"));const a=Zi(r.shape,s);a.length>0&&(e=El(Wu(e,a),r.shape));const o=Mi(r);return zu(Ei(e,Ka(o,"float32")))}}}},vf={kernelName:Qe,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=e,l=null==i?Vi(1):i,u=Zi(a.shape,s.shape),c=[];if(1===a.rank){for(let t=0;t<s.shape.length-1;++t)c.push(s.shape[t]);c.push(1)}const h=qi(s,a),p=Ai(t,l),d=Kc(Ti(o,Vi(r))),f=Ai(Ai(Ai(d,d),d),Vi(-.5));return{x:()=>1===a.rank?El(Ai(Ai(t,vu(El(d,[1,1,1,a.shape[0]]),c)),l),s.shape):El(Ai(Ai(t,d),l),s.shape),mean:()=>{let t=Ai(Ai(d,Vi(-1)),p);return 1===a.rank&&(t=Wu(t,u)),El(t,a.shape)},variance:()=>{let t=Ai(Ai(f,h),p);return 1===a.rank&&(t=Wu(t,u)),El(t,a.shape)},scale:()=>{const e=Ai(h,d);let n=Ai(t,e);return 1===a.rank&&(n=Wu(n,u)),El(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=Wu(e,u)),El(e,a.shape)}}}},kf={kernelName:tn,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,s]=e,{axis:a}=n,o=dt(a,r.shape)[0];return{x:()=>{const e=r.shape,n=s.size,i=e.slice(0,o),l=i.length,u=e.slice(a,e.length).slice(1),c=u.length,h=If(0,l),p=If(l+1,l+1+c),d=Nf([i,[n],u]),f=El(t,d),m=El(s,[n]),g=Nf([[l],h,p]),y=yo(f,g);let b=Sh(y,m,r.shape[o]);const x=Yu(g);return b=yo(b,x),b},indices:()=>s}}};function If(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Nf(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Sf={kernelName:rn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Fi(n),b:()=>Fi(r)}}},Cf={kernelName:sn,gradFunc:t=>({x:()=>Ka(t,"float32")})},Tf={kernelName:ln,gradFunc:t=>({x:()=>Fi(t)})},$f={kernelName:un,gradFunc:t=>({x:()=>Fi(t)})},Ef={kernelName:cn,gradFunc:t=>({x:()=>Fi(t)})},Af={kernelName:hn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:s}=n,a=Su(r,0);return{x:()=>pu(a,t,Ai(t,s))}}},Rf={kernelName:gn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,Ti(n,1))}}},Mf={kernelName:mn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,Ka(n,"float32"))}}},Ff={kernelName:wn,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n;return{logits:()=>{const e=bu(r);return qi(t,Ai(Wu(t,s,!0),e))}}}},Df=Js({localResponseNormalizationBackprop_:function(t,e,n,r=5,s=1,a=1,o=.5){const i={x:t,y:e,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:o};return Vs.runKernel(kn,i,l)}}),_f={kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{depthRadius:a,bias:o,alpha:i,beta:l}=n;return{x:()=>Df(r,s,t,a,o,i,l)}}};function Of(t,e,n,r){return e.rank<n.rank&&(e=El(e,qu(e.shape,r))),t.rank<n.rank&&(t=El(t,qu(t.shape,r))),{x:()=>Ai(t,Ka(hu(n,e),t.dtype))}}const Lf={kernelName:In,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:s}=r,a=e[0],o=Of(t,e[1],a,dt(s,a.shape));return{x:()=>o.x()}}},zf={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Ai(t,Ka(Cu(n,r),"float32")),b:()=>Ai(t,Ka(Mu(n,r),"float32"))}}},Pf=Js({maxPool3dGrad_:function(t,e,n,r,s,a,o){const i=Xs(t,"dy","maxPool3dGrad"),l=Xs(e,"input","maxPool3dGrad"),u=Xs(n,"output","maxPool3dGrad");let c=i,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=El(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=El(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=El(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Q(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Q(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Q(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=o&&Q(ot(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=Vs.runKernel($n,f,m);return d?El(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Bf={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=n;return{x:()=>Pf(t,r,s,a,o,i,l)}}},Vf=Js({maxPoolGrad_:function(t,e,n,r,s,a,o){const i=Xs(t,"dy","maxPoolGrad"),l=Xs(e,"input","maxPoolGrad"),u=Xs(n,"output","maxPoolGrad");Q(l.rank===i.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`)),Q(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),Q(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=o&&Q(ot(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const c={dy:i,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return Vs.runKernel(Cn,c,h)}}),Wf={kernelName:Hn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Dl(t,a,r.shape)}}},Uf={kernelName:wr,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Ll(t,r,s)}}},Gf={kernelName:vr,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Ml(t,r)}}},Hf=[Dd,_d,Od,Ld,zd,Pd,Bd,Vd,Wd,Ud,Gd,Hd,qd,Xd,Yd,Zd,Jd,Qd,tf,ef,nf,rf,af,sf,lf,uf,cf,hf,pf,df,{kernelName:Pe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ji(n.shape,r.shape);return{a:()=>{const e=Ei(t,Ka(r,"float32")),a=Zi(n.shape,s);return a.length>0?El(Wu(e,a),n.shape):e},b:()=>{let e=Ai(t,Ka(n,"float32"));const a=Zi(r.shape,s);a.length>0&&(e=El(Wu(e,a),r.shape));const o=Mi(r);return zu(Ei(e,Ka(o,"float32")))}}}},ff,mf,gf,yf,bf,wf,xf,vf,kf,Sf,Cf,Tf,$f,Ef,Af,Rf,Mf,Ff,_f,Lf,Lf,zf,Bf,{kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,s]=e,{filterSize:a,strides:o,pad:i}=n;return{x:()=>Vf(t,r,s,a,o,i)}}},{kernelName:An,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:s}=n,a=dt(s,r.shape),o=rt(ju(r.shape,a)[1]);return{x:()=>{const e=r.shape.slice();a.forEach((t=>{e[t]=1}));const n=El(t,e);return Ei(Ai(n,lc(r.shape,"float32")),o)}}}},{kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:s}=r,[a,o]=e,i=Of(t,o,a,dt(s,a.shape));return{x:()=>i.x()}}},{kernelName:Mn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Ai(t,Ka(Fu(n,r),"float32")),b:()=>Ai(t,Ka(Su(n,r),"float32"))}}},{kernelName:Fn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:s}=n,a=s.map((t=>t[0]));return{x:()=>Dl(t,a,r.shape)}}},{kernelName:Dn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ji(n.shape,r.shape);return{a:()=>{const e=Zi(n.shape,s);return e.length>0?El(Wu(t,e),n.shape):t},b:()=>{const e=Ai(t,zu(Iu(Ei(n,r)))),a=Zi(r.shape,s);return a.length>0?El(Wu(e,a),r.shape):e}}}},{kernelName:On,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ji(n.shape,r.shape);return{a:()=>{const e=Ai(t,Ka(r,"float32")),a=Zi(n.shape,s);return a.length>0?El(Wu(e,a),n.shape):e},b:()=>{const e=Ai(t,Ka(n,"float32")),a=Zi(r.shape,s);return a.length>0?El(Wu(e,a),r.shape):e}}}},{kernelName:Ln,gradFunc:t=>({x:()=>zu(t)})},{kernelName:Un,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>ic(n.shape,"float32")}}},{kernelName:Wn,gradFunc:t=>({x:()=>Fi(t)})},{kernelName:Gn,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return Ch(t,r).map((t=>()=>t))}},Wf,Wf,{kernelName:qn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,s]=e,a=n,o=r,i=Ji(a.shape,o.shape);return{a:()=>{const e=Ka(o,"float32");let n=Ai(t,Ai(e,ji(a,qi(e,Vi(1)))));const r=Zi(a.shape,i);return r.length>0&&(n=Wu(n,r)),El(n,a.shape)},b:()=>{const e=Su(a,0),n=pu(e,Ou(a),Fi(a));let r=Ai(t,Ai(s,n));const l=Zi(o.shape,i);return l.length>0&&(r=Wu(r,l)),El(r,o.shape)}}}},{kernelName:Kn,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,s=Su(n,0);return{x:()=>pu(s,t,Ai(t,r)),alpha:()=>{let e=pu(s,Fi(t),Ai(t,n));const a=Zi(r.shape,t.shape);return a.length>0&&(e=Wu(e,a)),El(e,r.shape)}}}},{kernelName:Jn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,zu(Mi(n)))}}},{kernelName:ar,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Ai(Fu(n,6),fh(n));return{x:()=>Ai(t,Ka(r,"float32"))}}},{kernelName:Qn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(t,Ka(fh(n),"float32"))}}},{kernelName:tr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>El(t,n.shape)}}},{kernelName:rr,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>Vs.runKernel(sr,s,n)}}},{kernelName:er,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,s={dy:t,images:r};return{images:()=>Vs.runKernel(nr,s,n)}}},{kernelName:or,gradFunc:(t,e,n)=>{const{dims:r}=n,s=dt(r,t.shape);return{x:()=>Wc(t,s)}}},{kernelName:ir,gradFunc:t=>({x:()=>Fi(t)})},{kernelName:lr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zu(Ei(t,Ai(ji(n,1.5),2)))}}},{kernelName:cr,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Ka(Fi(n),"float32"),t:()=>Ai(t,Ka(n,t.dtype)),e:()=>Ai(t,Ka(tc(n),t.dtype))}}},{kernelName:hr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Su(n,Vi(0)),r=Vi(rd),s=Vi(sd),a=Ai(t,s),o=Ai(Ai(t,r),bu(Ka(n,"float32")));return pu(e,a,o)}}}},{kernelName:gr,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(t,Ai(n,qi(Vi(1),n)))}}},{kernelName:mr,gradFunc:t=>({x:()=>Fi(t)})},{kernelName:dr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(ru(Ka(n,"float32")),t)}}},{kernelName:fr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(su(Ka(n,"float32")),t)}}},{kernelName:pr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:s,size:a}=n,o=r.shape,[i,l]=Uo(r,s,a),u=[];for(let e=0;e<t.rank;e++)u.push([i[e],o[e]-i[e]-l[e]]);return{x:()=>wc(t,u)}}},{kernelName:kr,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:s}=n,a=Ai(t,r);return{logits:()=>qi(a,Ai(Wu(a,[s],!0),r))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(t,Fl(n))}}},Uf,Uf,Gf,Gf,{kernelName:br,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,Ai(Ri(Ka(n,"float32")),2))}}},{kernelName:Cr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Vi(2);return{a:()=>Ai(t,Ai(s,qi(n,r))),b:()=>Ai(t,Ai(s,qi(r,n)))}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(t,Ai(Ka(n,"float32"),2))}}},{kernelName:Br,gradFunc:t=>({x:()=>Fi(t)})},{kernelName:Er,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,s=Ji(n.shape,r.shape);return{a:()=>{let e=t;const r=Zi(n.shape,s);return r.length>0&&(e=Wu(e,r)),El(e,n.shape)},b:()=>{let e=t;const n=Zi(r.shape,s);return n.length>0&&(e=Wu(e,n)),El(zu(e),r.shape)}}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,s=r.shape.slice(),{axis:a}=n;dt(a,r.shape).forEach((t=>{s[t]=1}));const o=El(t,s),i=Ai(o,lc(r.shape,"float32"));return{x:()=>i}}},{kernelName:Ar,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ei(t,Mi(ru(n)))}}},{kernelName:Rr,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ai(qi(Vi(1),Mi(n)),t)}}},{kernelName:Mr,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:s}=n;return{x:()=>{let e=Fi(r);if(1===r.rank)for(let n=0;n<s[0];++n)e=Ti(e,Dl(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)e=Ti(e,Dl(t,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)e=Ti(e,Dl(t,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)e=Ti(e,Dl(t,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},{kernelName:_r,gradFunc:(t,e,n)=>{const r=n,{perm:s}=r,a=Yu(s);return{x:()=>yo(t,a)}}},{kernelName:Lr,gradFunc:(t,e,n)=>{const r=n,{axis:s}=r;return{value:()=>dh(t,s)}}},{kernelName:zr,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Qi(e,Fi(e)),r=Nu(t,n);let s=Cu(e,Vi(0,"int32"));const a=r.rank-s.rank;for(let t=0;t<a;++t)s=xu(s,t+1);s=Qu(s,lc(r.shape,"bool"));const o=Fi(r);return pu(s,r,o)}(t,n)}}},{kernelName:Pr,gradFunc:t=>({x:()=>Fi(t)})}];for(const t of Hf)Jr(t);let jf;function qf(){return null==jf&&(jf=Si().epsilon()),jf}ks().prototype.abs=function(){return this.throwIfDisposed(),Xi(this)},ks().prototype.acos=function(){return this.throwIfDisposed(),sl(this)},ks().prototype.acosh=function(){return this.throwIfDisposed(),al(this)},ks().prototype.add=function(t){return this.throwIfDisposed(),Ti(this,t)},ks().prototype.all=function(t,e){return this.throwIfDisposed(),il(this,t,e)},ks().prototype.any=function(t,e){return this.throwIfDisposed(),ll(this,t,e)},ks().prototype.argMax=function(t){return this.throwIfDisposed(),ul(this,t)},ks().prototype.argMin=function(t){return this.throwIfDisposed(),cl(this,t)},ks().prototype.asScalar=function(){return this.throwIfDisposed(),Q(1===this.size,(()=>"The array must have only 1 element.")),El(this,[])},ks().prototype.asType=function(t){return this.throwIfDisposed(),Ka(this,t)},ks().prototype.as1D=function(){return this.throwIfDisposed(),El(this,[this.size])},ks().prototype.as2D=function(t,e){return this.throwIfDisposed(),El(this,[t,e])},ks().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),El(this,[t,e,n])},ks().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),El(this,[t,e,n,r])},ks().prototype.as5D=function(t,e,n,r,s){return this.throwIfDisposed(),El(this,[t,e,n,r,s])},ks().prototype.asin=function(){return this.throwIfDisposed(),hl(this)},ks().prototype.asinh=function(){return this.throwIfDisposed(),pl(this)},ks().prototype.atan=function(){return this.throwIfDisposed(),dl(this)},ks().prototype.atan2=function(t){return this.throwIfDisposed(),fl(this,t)},ks().prototype.atanh=function(){return this.throwIfDisposed(),ml(this)},ks().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Al(this,t,e,n,r)},ks().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Ll(this,t,e)},ks().prototype.batchNorm=function(t,e,n,r,s){return this.throwIfDisposed(),zl(this,t,e,n,r,s)},ks().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Ul(this,t)},ks().prototype.cast=function(t){return this.throwIfDisposed(),Ka(this,t)},ks().prototype.ceil=function(){return this.throwIfDisposed(),Gl(this)},ks().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Hl(this,t,e)},ks().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof vs&&(t=[t]),Ml([this,...t],e)},ks().prototype.conv1d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Zl(this,t,e,n,r,s,a)},ks().prototype.conv2dTranspose=function(t,e,n,r,s){return this.throwIfDisposed(),Ql(this,t,e,n,r,s)},ks().prototype.conv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Yl(this,t,e,n,r,s,a)},ks().prototype.cos=function(){return this.throwIfDisposed(),ru(this)},ks().prototype.cosh=function(){return this.throwIfDisposed(),su(this)},ks().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),au(this,t,e,n)},ks().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),iu(this,t,e)},ks().prototype.depthwiseConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),lu(this,t,e,n,r,s,a)},ks().prototype.dilation2d=function(t,e,n,r,s){return this.throwIfDisposed(),cu(this,t,e,n,r,s)},ks().prototype.divNoNan=function(t){return this.throwIfDisposed(),du(this,t)},ks().prototype.div=function(t){return this.throwIfDisposed(),Ei(this,t)},ks().prototype.dot=function(t){return this.throwIfDisposed(),fu(this,t)},ks().prototype.elu=function(){return this.throwIfDisposed(),gu(this)},ks().prototype.equal=function(t){return this.throwIfDisposed(),hu(this,t)},ks().prototype.erf=function(){return this.throwIfDisposed(),yu(this)},ks().prototype.exp=function(){return this.throwIfDisposed(),bu(this)},ks().prototype.expandDims=function(t){return this.throwIfDisposed(),xu(this,t)},ks().prototype.expm1=function(){return this.throwIfDisposed(),wu(this)},ks().prototype.fft=function(){return this.throwIfDisposed(),oh(this)},ks().prototype.flatten=function(){return this.throwIfDisposed(),El(this,[this.size])},ks().prototype.floor=function(){return this.throwIfDisposed(),Iu(this)},ks().prototype.floorDiv=function(t){return this.throwIfDisposed(),$i(this,t)},ks().prototype.gather=function(t,e){return this.throwIfDisposed(),Nu(this,t,e)},ks().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Cu(this,t)},ks().prototype.greater=function(t){return this.throwIfDisposed(),Su(this,t)},ks().prototype.ifft=function(){return this.throwIfDisposed(),ih(this)},ks().prototype.irfft=function(){return this.throwIfDisposed(),lh(this)},ks().prototype.isFinite=function(){return this.throwIfDisposed(),$u(this)},ks().prototype.isInf=function(){return this.throwIfDisposed(),Eu(this)},ks().prototype.isNaN=function(){return this.throwIfDisposed(),Au(this)},ks().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Ru(this,t)},ks().prototype.lessEqual=function(t){return this.throwIfDisposed(),Fu(this,t)},ks().prototype.less=function(t){return this.throwIfDisposed(),Mu(this,t)},ks().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),_u(this,t,e,n,r)},ks().prototype.logSigmoid=function(){return this.throwIfDisposed(),Bu(this)},ks().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Uu(this,t)},ks().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Ju(this,t,e)},ks().prototype.log=function(){return this.throwIfDisposed(),Ou(this)},ks().prototype.log1p=function(){return this.throwIfDisposed(),Lu(this)},ks().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Qu(this,t)},ks().prototype.logicalNot=function(){return this.throwIfDisposed(),tc(this)},ks().prototype.logicalOr=function(t){return this.throwIfDisposed(),ec(this,t)},ks().prototype.logicalXor=function(t){return this.throwIfDisposed(),nc(this,t)},ks().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),mo(this,t,e,n)},ks().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),rc(this,t,e,n,r)},ks().prototype.max=function(t,e){return this.throwIfDisposed(),Vu(this,t,e)},ks().prototype.maximum=function(t){return this.throwIfDisposed(),Qi(this,t)},ks().prototype.mean=function(t,e){return this.throwIfDisposed(),oc(this,t,e)},ks().prototype.min=function(t,e){return this.throwIfDisposed(),cc(this,t,e)},ks().prototype.minimum=function(t){return this.throwIfDisposed(),hc(this,t)},ks().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),pc(this,t,e)},ks().prototype.mod=function(t){return this.throwIfDisposed(),dc(this,t)},ks().prototype.mul=function(t){return this.throwIfDisposed(),Ai(this,t)},ks().prototype.neg=function(){return this.throwIfDisposed(),zu(this)},ks().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Mh(this,t,e,n)},ks().prototype.notEqual=function(t){return this.throwIfDisposed(),yc(this,t)},ks().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),go(this,t,e,n)},ks().prototype.onesLike=function(){return this.throwIfDisposed(),bc(this)},ks().prototype.pad=function(t,e){return this.throwIfDisposed(),wc(this,t,e)},ks().prototype.pool=function(t,e,n,r,s){return this.throwIfDisposed(),Cc(this,t,e,n,r,s)},ks().prototype.pow=function(t){return this.throwIfDisposed(),ji(this,t)},ks().prototype.prelu=function(t){return this.throwIfDisposed(),Tc(this,t)},ks().prototype.prod=function(t,e){return this.throwIfDisposed(),$c(this,t,e)},ks().prototype.reciprocal=function(){return this.throwIfDisposed(),Pc(this)},ks().prototype.relu=function(){return this.throwIfDisposed(),Bc(this)},ks().prototype.relu6=function(){return this.throwIfDisposed(),Vc(this)},ks().prototype.reshapeAs=function(t){return this.throwIfDisposed(),El(this,t.shape)},ks().prototype.reshape=function(t){return this.throwIfDisposed(),El(this,t)},ks().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),yp(this,t,e,n)},ks().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),bp(this,t,e,n)},ks().prototype.reverse=function(t){return this.throwIfDisposed(),Wc(this,t)},ks().prototype.rfft=function(){return this.throwIfDisposed(),ch(this)},ks().prototype.round=function(){return this.throwIfDisposed(),qc(this)},ks().prototype.rsqrt=function(){return this.throwIfDisposed(),Kc(this)},ks().prototype.selu=function(){return this.throwIfDisposed(),Xc(this)},ks().prototype.separableConv2d=function(t,e,n,r,s,a){return this.throwIfDisposed(),Yc(this,t,e,n,r,s,a)},ks().prototype.sigmoid=function(){return this.throwIfDisposed(),Fl(this)},ks().prototype.sign=function(){return this.throwIfDisposed(),Jc(this)},ks().prototype.sin=function(){return this.throwIfDisposed(),Qc(this)},ks().prototype.sinh=function(){return this.throwIfDisposed(),th(this)},ks().prototype.slice=function(t,e){return this.throwIfDisposed(),Dl(this,t,e)},ks().prototype.softmax=function(t){return this.throwIfDisposed(),ah(this,t)},ks().prototype.softplus=function(){return this.throwIfDisposed(),Pu(this)},ks().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Sc(this,t,e)},ks().prototype.split=function(t,e){return this.throwIfDisposed(),uh(this,t,e)},ks().prototype.sqrt=function(){return this.throwIfDisposed(),Ri(this)},ks().prototype.square=function(){return this.throwIfDisposed(),Mi(this)},ks().prototype.squaredDifference=function(t){return this.throwIfDisposed(),hh(this,t)},ks().prototype.squeeze=function(t){return this.throwIfDisposed(),ph(this,t)},ks().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof vs?[this,t]:[this,...t];return dh(n,e)},ks().prototype.step=function(t){return this.throwIfDisposed(),fh(this,t)},ks().prototype.stridedSlice=function(t,e,n,r,s,a,o,i){return this.throwIfDisposed(),mh(this,t,e,n,r,s,a,o,i)},ks().prototype.sub=function(t){return this.throwIfDisposed(),qi(this,t)},ks().prototype.sum=function(t,e){return this.throwIfDisposed(),Wu(this,t,e)},ks().prototype.tan=function(){return this.throwIfDisposed(),gh(this)},ks().prototype.tanh=function(){return this.throwIfDisposed(),_l(this)},ks().prototype.tile=function(t){return this.throwIfDisposed(),vu(this,t)},ks().prototype.toBool=function(){return this.throwIfDisposed(),Ka(this,"bool")},ks().prototype.toFloat=function(){return this.throwIfDisposed(),Ka(this,"float32")},ks().prototype.toInt=function(){return this.throwIfDisposed(),Ka(this,"int32")},ks().prototype.topk=function(t,e){return this.throwIfDisposed(),kh(this,t,e)},ks().prototype.transpose=function(t){return this.throwIfDisposed(),yo(this,t)},ks().prototype.unique=function(t){return this.throwIfDisposed(),Nh(this,t)},ks().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Sh(this,t,e)},ks().prototype.unstack=function(t){return this.throwIfDisposed(),Ch(this,t)},ks().prototype.where=function(t,e){return this.throwIfDisposed(),pu(t,this,e)},ks().prototype.zerosLike=function(){return this.throwIfDisposed(),Fi(this)};class Kf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kf.prototype)}}class Xf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Xf.prototype)}}class Yf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Yf.prototype)}}class Zf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Zf.prototype)}}class Jf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Jf.prototype)}}function Qf(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function tm(t,e){if(!t)throw new Jf(e)}function em(t,e){let n=0;for(const r of t)r===e&&n++;return n}function nm(t){return 1===t.length?t[0]:t}function rm(t){return Array.isArray(t)?t:[t]}function sm(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function am(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let om={};function im(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function lm(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>lm(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?lm(e):t[n]=e.value)}}}function um(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in om)a=om[s];else if(a=e[s],null==a)throw new Yf(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new Yf(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const o=a.className;let i,l;if(o in n?[i,l]=n[o]:o in om?[i,l]=om.className:o in e&&([i,l]=e[o]),null==i)throw new Yf(`Unknown ${r}: ${o}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(om))t[e]=om[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},om);for(const t of Object.keys(n))om[t]=n[t];lm(a.config);const r=l(i,a.config,n,s);return om=Object.assign({},e),r}{const t=Object.assign({},om);for(const t of Object.keys(n))om[t]=n[t];const e=new i(a.config);return om=Object.assign({},t),e}}}function cm(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function hm(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function pm(t){if(null==t)throw new Yf(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function dm(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new Yf(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function fm(t,e,n=0,r=1/0){return tm(n>=0),tm(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function mm(t,e){Array.isArray(t)?(Q(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>mm(t,`element ${n+1} of ${e}`)))):Q(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${gm(t)}.`))}function gm(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>gm(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function ym(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function bm(t,e){return fi((()=>Ri(Wu(Ai(t,t),e,!0))))}class xm extends Ho{getConfig(){return{}}}class wm extends xm{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return fi((()=>{const e=bm(t,this.axis),n=Hl(e,0,this.maxValue);return Ai(t,Ei(n,Ti(qf(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}wm.className="MaxNorm",qo(wm);class vm extends xm{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return fi((()=>Ei(t,Ti(qf(),bm(t,this.axis)))))}getConfig(){return{axis:this.axis}}}vm.className="UnitNorm",qo(vm);class km extends xm{apply(t){return Bc(t)}}km.className="NonNeg",qo(km);class Im extends xm{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return fi((()=>{const e=bm(t,this.axis),n=Ti(Ai(this.rate,Hl(e,this.minValue,this.maxValue)),Ai(1-this.rate,e));return Ai(t,Ei(n,Ti(qf(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Im.className="MinMaxNorm",qo(Im);const Nm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Sm(t){return im(t)}function Cm(t,e={}){return um(t,jo.getMap().classNameMap,e,"constraint")}function Tm(t){return null==t?null:"string"==typeof t?Cm({className:t in Nm?Nm[t]:t,config:{}}):t instanceof xm?t:Cm(t)}function $m(t){return new wm(t)}function Em(t){return new vm(t)}function Am(){return new km}function Rm(t){return new Im(t)}const Mm=["channelsFirst","channelsLast"],Fm=["nearest","bilinear"],Dm=["valid","same","causal"],_m=["max","avg"],Om=["sum","mul","concat","ave"],Lm=new Map;function zm(t){dm(Mm,"DataFormat",t)}function Pm(t){dm(Dm,"PaddingMode",t)}function Bm(t){dm(_m,"PoolMode",t)}const Vm=[];function Wm(t,e){Vm.push(t);try{const t=e();return Vm.pop(),t}catch(t){throw Vm.pop(),t}}function Um(t){if(!jm(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Vm.length?"":Vm.join("/")+"/")+t}function Gm(t){if(!jm(t))throw new Error("Not a valid tensor name: '"+t+"'");Lm.has(t)||Lm.set(t,0);const e=Lm.get(t);if(Lm.set(t,Lm.get(t)+1),e>0){const n=`${t}_${e}`;return Lm.set(n,1),n}return t}const Hm=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jm(t){return!!t.match(Hm)}function qm(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function Km(t){return yh(t=Array.isArray(t)?new Float32Array(t):t)}function Xm(t){return cc(Km(t)).dataSync()[0]}function Ym(t){return Vu(Km(t)).dataSync()[0]}function Zm(t,e){if(e<t)throw new Yf(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Jm(t,e){return t.asType(e)}function Qm(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function tg(t,e,n){return fi((()=>{switch(t.rank){case 1:return eh(t,e,n);case 2:return nh(t,[e,0],[n,t.shape[1]]);case 3:return rh(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return sh(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Dl(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Dl(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new Yf(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function eg(t,e,n){return fi((()=>{switch(t.rank){case 1:return eh(t,e,n);case 2:return nh(t,[0,e],[t.shape[0],n]);case 3:return rh(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return sh(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new Yf(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ng(t,e,n,r){return fi((()=>{switch(t.rank){case 1:return eh(t,e,n);case 2:switch(r){case 1:return tg(t,e,n);case 2:return eg(t,e,n);default:throw new Yf(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return tg(t,e,n);case 2:return rh(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return eg(t,e,n);default:throw new Yf(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return tg(t,e,n);case 2:return sh(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return sh(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return eg(t,e,n);default:throw new Yf(`The axis is not within the rank of the tensor ${r}`)}default:throw new Yf(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function rg(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Ml(t,e)}function sg(t,e){switch(t.rank){case 1:return jl([t,e]);case 2:return ql([t,e],0);case 3:return Kl([t,e],0);case 4:return Xl([t,e],0);default:throw new Yf(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function ag(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new Yf(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return vu(t,e)}function og(t,e=0,n=1,r,s){return _c(t,e,n,r,s)}function ig(t,e,n,r){if(t.rank<2||e.rank<2)throw new Zf(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Zf(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank)return Yh({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?cg(t.rank,r,"channelsLast"):null,activation:n});{const s=t.shape.slice(),a=s.pop();t=t.reshape([-1,a]);const o=e.shape.slice(),i=o.pop(),l=o.pop(),u=[...o,i],c=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(c).reshape([l,-1]);const h=[...s,...u];return Yh({a:t,b:e,transposeA:!1,transposeB:!1,bias:r?cg(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function lg(t,e,n){return fi((()=>(e=Array.isArray(e)?yh(e,"int32"):e.toInt(),Nu(t,e,n))))}function ug(t){return Ai(t,t)}function cg(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new Yf(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new Yf(`Unsupported input rank by biasAdd: ${e.rank}`)}function hg(t,e,n){return fi((()=>(null==n&&(n="channelsLast"),zm(n),t.add(cg(t.rank,e,n)))))}function pg(t,e,n,r){return fi((()=>Lh(t,e,n,r)))}function dg(t,e,n=!1){return n?t():e()}const fg=["fanIn","fanOut","fanAvg"],mg=["normal","uniform","truncatedNormal"];class gg extends Ho{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class yg extends gg{apply(t,e){return ic(t,e)}}yg.className="Zeros",qo(yg);class bg extends gg{apply(t,e){return lc(t,e)}}bg.className="Ones",qo(bg);class xg extends gg{constructor(t){if(super(),"object"!=typeof t)throw new Yf(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new Yf(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return fi((()=>Ai(Vi(this.value),lc(t,e))))}getConfig(){return{value:this.value}}}xg.className="Constant",qo(xg);class wg extends gg{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Oc(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}wg.className="RandomUniform",qo(wg);class vg extends gg{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Zf(`randomNormal does not support dType ${e}.`);return og(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}vg.className="RandomNormal",qo(vg);class kg extends gg{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Zf(`truncatedNormal does not support dType ${e}.`);return Ih(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}kg.className="TruncatedNormal",qo(kg);class Ig extends gg{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return fi((()=>{if(2!==t.length||t[0]!==t[1])throw new Yf("Identity matrix initializer can only be used for 2D square matrices.");return Ai(this.gain,ku(t[0]))}))}getConfig(){return{gain:this.gain}}}Ig.className="Identity",qo(Ig);class Ng extends gg{constructor(t){if(super(),t.scale<0)throw new Yf(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,dm(fg,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){dm(mg,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(zm(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=qm(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=qm(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=qm(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Zf(`${this.getClassName()} does not support dType ${e}.`);return Ih(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return Oc(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ng.className="VarianceScaling",qo(Ng);class Sg extends Ng{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ng.className}}Sg.className="GlorotUniform",qo(Sg);class Cg extends Ng{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ng.className}}Cg.className="GlorotNormal",qo(Cg);class Tg extends Ng{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ng.className}}Tg.className="HeNormal",qo(Tg);class $g extends Ng{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ng.className}}$g.className="HeUniform",qo($g);class Eg extends Ng{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ng.className}}Eg.className="LeCunNormal",qo(Eg);class Ag extends Ng{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ng.className}}Ag.className="LeCunNormal",qo(Ag);class Rg extends gg{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Zf("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return fi((()=>{if(t.length<2)throw new Zf("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=og(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Bp.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Ai(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Rg.className="Orthogonal",qo(Rg);const Mg={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Fg(t,e={}){return um(t,jo.getMap().classNameMap,e,"initializer")}function Dg(t){return im(t)}function _g(t){if("string"==typeof t){const e=t in Mg?Mg[t]:t;if("GlorotNormal"===e)return new Cg;if("GlorotUniform"===e)return new Sg;if("HeNormal"===e)return new Tg;if("HeUniform"===e)return new $g;if("LeCunNormal"===e)return new Eg;if("LeCunUniform"===e)return new Ag;{const t={};return t.className=e,t.config={},Fg(t)}}return t instanceof gg?t:Fg(t)}function Og(){return new yg}function Lg(){return new bg}function zg(t){return new xg(t)}function Pg(t){return new wg(t)}function Bg(t){return new vg(t)}function Vg(t){return new kg(t)}function Wg(t){return new Ig(t)}function Ug(t){return new Ng(t)}function Gg(t){return new Sg(t)}function Hg(t){return new Cg(t)}function jg(t){return new Tg(t)}function qg(t){return new $g(t)}function Kg(t){return new Eg(t)}function Xg(t){return new Ag(t)}function Yg(t){return new Rg(t)}let Zg=0;function Jg(){return Zg++}const Qg={};function ty(t=""){return t in Qg||(Qg[t]=0),Qg[t]+=1,t+Qg[t].toString()}function ey(t){return Array.isArray(t)&&Array.isArray(t[0])}function ny(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function ry(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new Yf(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function sy(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new Yf(`Expected exactly 1 Shape; got ${t.length}`)}return t}function ay(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class oy{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Jg(),n=null==n?"Variable":n,this.originalName=Um(n),this.name=Gm(this.originalName),this.trainable_=r,this.constraint=s,this.val=Th(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function iy(t){return t.map((t=>t.read()))}function ly(t){t.forEach((t=>{t[0].write(t[1])}))}class uy{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class cy{constructor(t,e,n,r,s,a,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=o,this.id=Jg(),null!=a&&(this.originalName=Um(a),this.name=Gm(this.originalName)),this.rank=e.length}}let hy=0;class py{constructor(t,e){this.callArgs=e,this.id=hy++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let dy=0;class fy extends Ho{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=sm(t)+"_"+ty(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Xf(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new Yf(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return nm(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return nm(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Kf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Kf(`Layer ${this.name} is not connected, no input to return.`);return nm(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Kf(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Kf(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return nm(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=rm(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=rm(this.inputSpec);if(t.length!==e.length)throw new Yf(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Yf(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Yf(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Yf(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Yf(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],o=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(o))throw new Yf(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new Yf(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=rm(t);let r=!0;for(const t of n)if(!(t instanceof cy)){r=!1;break}let s=!0;for(const t of n)if(t instanceof cy){s=!1;break}if(r===s)throw new Yf("Arguments to apply() must be all SymbolicTensors or all Tensors");return Wm(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of rm(t))e.push(n.shape);this.build(nm(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=rm(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=nm(a),null!=this.activityRegularizer)throw new Zf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=rm(t);const e=[];for(const n of t)e.push(n.shape);return nm(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new cy(a,n,this,rm(t),e,this.name,r))):new cy(a,r,this,rm(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Zf("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Kf(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Kf(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xf(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ay(this.weights)}build(t){this.built=!0}getWeights(t=!1){return iy(t?this.trainableWeights:this.weights)}setWeights(t){fi((()=>{const e=this.weights;if(e.length!==t.length)throw new Yf(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=iy(e);for(let s=0;s<r.length;++s){const a=r[s],o=e[s],i=t[s];if(!at(a.shape,i.shape))throw new Yf(`Layer weight shape ${a.shape} not compatible with provided weight shape ${i.shape}`);n.push([o,i])}ly(n)}))}addWeight(t,e,n,r,s,a,o){if(-1!==this._addedWeightNames.indexOf(t))throw new Yf(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=_g("zeros"));const i=r.apply(e,n),l=new oy(i,n,t,a,o);return i.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=rm(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,a,o=null){const i=rm(t);e=rm(e),n=rm(n),r=rm(r),s=ny(s),a=ny(a);const l=[],u=[],c=[];for(const t of i)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new py({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function my(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=my(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class gy extends fy{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:ty("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new Yf("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new Yf("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new Yf("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new cy(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new py({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new Yf(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function yy(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new Yf("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new gy({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function by(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];mi(r)}}function xy(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var wy;gy.className="InputLayer",qo(gy),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(wy||(wy={}));class vy{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class ky{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Iy extends vy{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=fi((()=>Ti(this.totals[t],Ai(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:fi((()=>{const n=Ai(Ei(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),gi(e[t])})))}}class Ny extends vy{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const o=s[a];t.push(o.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}class Sy extends vy{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");St(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=as();return(...s)=>{const a=as();return a-r<e||(r=a,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await by(n),r.push(this.yield(t,e,n))),r.push(jp()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await by(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await by(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(jp()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await by(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await by(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(jp()):St(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await by(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await by(t),await this.trainEnd(t))}}function Cy(t,e){return null==t&&(t={}),t instanceof vy?[t]:Array.isArray(t)&&t[0]instanceof vy?t:rm(t).map((t=>new Sy(t,e)))}class Ty{constructor(){}static registerCallbackConstructor(t,e){Q(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Ty.checkForDuplicate(e),null==Ty.constructors[t]&&(Ty.constructors[t]=[]),Ty.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Ty.constructors)Ty.constructors[+e].forEach((e=>{if(e===t)throw new Yf("Duplicate callback constructor.")}))}static clear(){Ty.constructors={}}static createCallbacks(t){const e=[];for(const n in Ty.constructors){const r=+n;t>=r&&e.push(...Ty.constructors[r])}return e.map((t=>new t))}}function $y(t,e,n,r,s,a,o,i,l){const u=new Ny,c=[new Iy,...Ty.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new ky(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:e,doValidation:i,metrics:l}),{callbackList:h,history:u}}function Ey(t,e={},n=!1){return um(t,jo.getMap().classNameMap,e,"layer",n)}function Ay(t,e){return fi((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=Wu(ug(t),e,!0),r=Gi(n.shape,qf()),s=Ri(Qi(n,r));return Ei(t,s)}))}function Ry(t,e){return fi((()=>oc(ug(qi(e,t)),-1)))}function My(t,e){return fi((()=>oc(Xi(qi(e,t)),-1)))}function Fy(t,e){return fi((()=>{const n=qi(t,e),r=Hl(Xi(t),qf(),Number.MAX_VALUE),s=Xi(Ei(n,r));return Ai(100,oc(s,-1))}))}function Dy(t,e,n=!1){return fi((()=>{if(n)e=ah(e);else{const t=Wu(e,e.shape.length-1,!0);e=Ei(e,t)}return e=Hl(e,qf(),1-qf()),zu(Wu(Ai(t.toFloat(),Ou(e)),e.shape.length-1))}))}function _y(t,e,n=!1){return fi((()=>{const r=Iu(function(t){const e=[qm(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=Hl(e,qf(),1-qf())).shape;return Dy(go(r,s[s.length-1]).reshape(s),e,n)}))}function Oy(t,e){return fi((()=>{let n;return n=Hl(e,qf(),1-qf()),n=Ou(Ei(n,qi(1,n))),oc(function(t,e){if(!at(t.shape,e.shape))throw new Yf(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return fi((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function Ly(t,e){return fi((()=>{const n=Ay(t,-1),r=Ay(e,-1),s=Ai(n,r);return zu(Wu(s,-1))}))}Ty.constructors={};const zy={meanSquaredError:Ry,meanAbsoluteError:My,meanAbsolutePercentageError:Fy,meanSquaredLogarithmicError:function(t,e){return fi((()=>{const n=Hl(e,qf(),Number.MAX_VALUE),r=Ou(Ti(1,n)),s=Hl(t,qf(),Number.MAX_VALUE),a=Ou(Ti(1,s));return oc(ug(qi(r,a)),-1)}))},squaredHinge:function(t,e){return fi((()=>{const n=Qi(0,qi(1,Ai(t,e)));return oc(ug(n),-1)}))},hinge:function(t,e){return fi((()=>{const n=Qi(0,qi(1,Ai(t,e)));return oc(n,-1)}))},categoricalHinge:function(t,e){return fi((()=>{const n=Wu(Ai(t,e),-1),r=Vu(Ai(qi(1,t),e),-1);return Qi(0,Ti(1,qi(r,n)))}))},logcosh:function(t,e){return fi((()=>{const n=Math.log(2),r=qi(e,t),s=qi(Ti(r,Pu(Ai(-2,r))),n);return oc(s,-1)}))},categoricalCrossentropy:Dy,sparseCategoricalCrossentropy:_y,binaryCrossentropy:Oy,kullbackLeiblerDivergence:function(t,e){return fi((()=>{const n=Hl(t,qf(),1),r=Hl(e,qf(),1);return Wu(Ai(t,Ou(Ei(n,r))),-1)}))},poisson:function(t,e){return fi((()=>{const n=Ou(Ti(qf(),e));return oc(qi(e,Ai(t,n)),-1)}))},cosineProximity:Ly};function Py(t){if("string"==typeof t){if(t in zy)return zy[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Yf(e)}return t}function By(t,e){return fi((()=>{const n=Ai(.5,bc(e)),r=Jm(Su(e,n),t.dtype);return oc(hu(t,r),-1)}))}function Vy(t,e){return fi((()=>Jm(hu(ul(t,-1),ul(e,-1)),"float32")))}function Wy(t,e){return fi((()=>Qu(t.equal(1),e.equal(1)).sum().cast("float32")))}function Uy(t,e){return fi((()=>{const n=Wy(t,e),r=function(t,e){return fi((()=>Qu(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),s=n.add(r);return pu(Su(s,0),n.div(s),0).cast("float32")}))}function Gy(t,e){return Oy(t,e)}function Hy(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),hu(t,e).asType("float32")}const jy=Dy,qy=_y,Ky={binaryAccuracy:By,categoricalAccuracy:Vy,precision:Uy,categoricalCrossentropy:jy,sparseCategoricalCrossentropy:qy,mse:Ry,MSE:Ry,mae:My,MAE:My,mape:Fy,MAPE:Fy,cosine:Ly};function Xy(t){if("string"==typeof t&&t in Ky)return Ky[t];if("string"!=typeof t&&null!=t)return t;throw new Yf(`Unknown metric ${t}`)}function Yy(t){if(tm(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(zy))if(zy[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Ky))if(Ky[n]===t){e=n;break}return void 0!==e?e:t.name}}function Zy(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Jy(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Jy(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Jy(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Jy(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Qy(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function tb(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Qy([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function eb(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const o=t.name,i=t.getClassName(),l=0===a.length?"":a[0];Qy([`${o} (${i})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<a.length;++t)Qy(["","","",a[t]],e,r)}function nb(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function rb(t,e){if(null===t)return null;if("string"==typeof t)return am(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];nb(e,s,r)?n.push(r):n.push(rb(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=am(n);e[t]=rb(r,t)}}return e}}function sb(t,e){if(null==t)return null;if("string"==typeof t)return sm(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];nb(e,s,r)?n.push(r):n.push(sb(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];e[sm(n)]="name"!==n&&"className"!==n||"string"!=typeof r?sb(r,n):r}return e}}const ab="3.6.0";class ob{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof ob)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new Yf(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Ka(e,t.dtype)}catch(n){throw new Yf(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof cy){if(null==this.id2Value[t.id])throw new Yf(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new Yf(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof cy){if(null==this.id2Value[t.id])throw new Yf(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new Yf(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&mi(this.id2Mask)}}const ib={},lb={};function ub(t,e,n,r){const s=null!=n&&n.training,a=Array.isArray(t),o=a?t:[t],i=o.map((t=>t.name)),l=[],u=e.names();for(const t of i)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=i.join(",")+"|"+e.names().join(",");let h,p;if(null==ib[c]){const t=function(t,e){Q(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=hb(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:o}=hb(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in o)null==r[t]&&(r[t]=new Set),o[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:cb(r)}}(o,e);h=t.sorted,p=t.recipientCounts,ib[c]=h,lb[c]=p}h=ib[c],p={},s||Object.assign(p,lb[c]);const d=new ob(e);for(let t=0;t<h.length;++t){if(null!=r){const t=pi().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const a=h[t],o=a.sourceLayer;if(o instanceof gy)continue;const u=[],c=[],f=[];let m=!1;for(const t of a.inputs){const n=d.getValue(t),r=d.getMask(t);u.push(n),c.push(r),null!=r&&(m=!0),s||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==i.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=rm(o.apply(u,n));let y=null;o.supportsMasking&&(y=o.computeMask(u,c));const b=pb(a),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}s||mi(f)}return d.disposeMasks(),a?l:l[0]}function cb(t){const e={};for(const n in t)e[n]=t[n].size;return e}function hb(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],o=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=o[o.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&o.pop();else{o.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function pb(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class db extends fy{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=ty(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],hm(this.inputs).length!==this.inputs.length)throw new Yf(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);hm(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;tm(0===n,"input layer has >1 nodes"),tm(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof gy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},a={},o=[],i=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Xf(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(db.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let t=0;t<c;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],a=u.nodeIndices[t],o=u.tensorIndices[t];i(r,e,n,s,a,o)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);o.push(u)},l=[],u=[];for(const t of this.outputs)i(t,l,u);const c=o.slice().reverse();for(const t of c){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const o=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,o),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],o=t.nodeIndices[r],i=s.inboundNodes[o],l=null==e[i.id]?0:e[i.id];e[i.id]=Math.max(a+1,l),n[i.id]=i}}const h={};for(const t in e){const r=e[t];r in h||(h[r]=[]),h[r].push(n[t])}const p={};for(const t in r){const e=r[t];e in p||(p[e]=[]),p[e].push(s[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort(cm);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof db&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((t=>parseInt(t,10))).sort(cm);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of h[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Xf(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new Xf(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new py({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Yf("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new Yf(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new Yf(`Provided weight data has no target variable: ${r}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new Yf(`${t.length} of ${r} weights are not set: ${t}`)}ly(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${ab}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=sb(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return fi((()=>{t=rm(t);const n=new ob;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return ub(this.outputs,n,e)}))}computeMask(t,e){return fi((()=>{let n;return t=rm(t),n=null==e?Qf(null,t.length):rm(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=ny(t);if(e.length!==this.inputLayers.length)throw new Yf(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(cm);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],o=t.tensorIndices[e],i=n[`${s.name}_${a}_${o}`];r.push(i)}const s=ny(e.computeOutputShape(nm(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++)n[`${e.name}_${a}_${t}`]=s[t]}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];tm(e in n),s.push(n[e])}return nm(s)}runInternalGraph(t,e){null==e&&(e=Qf(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],o=e[r];n[s.id]=[a,o]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(cm);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,o,i,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),i=rm(e.call(t,u)),l=rm(e.computeMask(t,n)),r=[t],o=[n]}else r=a.map((t=>t[0])),o=a.map((t=>t[1])),null==u.mask&&(u.mask=o),i=rm(e.call(r,u)),l=rm(e.computeMask(r,o));if(e.activityRegularizer)throw new Zf("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=i[t],a=l[t];n[e.id]=[r,a]}}}}const s=[],a=[],o=[];for(const t of this.outputs){tm(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];o.push(e.shape),s.push(e),a.push(r)}return[s,a,o]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof db?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=db.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new Yf(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new Yf("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new Yf(`No such layer: ${t}`)}calculateLosses(){return fi((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=db.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=db.nodeKey(t,n);let o={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),o=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],i=r.tensorIndices[n];let l=e[db.nodeKey(s,a)];null==l&&(l=0),t.push([s.name,l,i,o])}a.push(t)}}}const o={};o.name=t.name,o.className=r,o.config=s,o.inboundNodes=a,n.push(o)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=db.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let o=e[a];null==o&&(o=0);const i=this.inputLayersTensorIndices[t];r.push([n.name,o,i])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=db.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let o=e[a];null==o&&(o=0);const i=this.outputLayersTensorIndices[t];s.push([n.name,o,i])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function o(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function i(t,e){const n=[];let r;for(const a of e){const i=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(i in s))return void o(t,e);const c=s[i];if(c.inboundNodes.length<=l)return void o(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(nm(n),r)}function l(t){const n=t.name,a=Ey(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new Yf(`Corrupted configuration, expected array for nodeData: ${t}`);o(a,t)}))}const u=e.name,c=e.layers;for(const t of c)l(t);for(;!pm(a);)for(const t of c){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)i(e,n)}}const h=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],r=t[2];tm(e in s);const a=s[e].inboundNodes[n].outputTensors;h.push(a[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];tm(e in s);const a=s[e].inboundNodes[n].outputTensors;p.push(a[r])}return new t({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Yf("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){fi((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function fb(t,e){return function(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function mb(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=fi((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());mi(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),yh(s,"float32")}return null}function gb(t,e){return Ai(t,e)}function yb(t,e){let n,r;const s=e;n=s.xs,r=s.ys,Q(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const a=bb("input",t.inputNames,n),o=bb("output",t.outputNames,r),i=a[0].shape[0];Q(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),Q(o.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<a.length;e++)Q(a[e].shape[0]===i,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`));for(let e=0;e<o.length;e++)Q(o[e].shape[0]===i,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${o[e].shape[0]}; expected  ${i} based on input ${t.inputNames[0]}.`));return{xs:a,ys:o}}function bb(t,e,n){if(n instanceof vs)return[n];if(Array.isArray(n))return Q(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new Yf(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}function xb(t){return"function"==typeof t.iterator}function wb(t){Q(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function vb(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>tg(t,e,n-e))):tg(t,e,n-e)}function kb(t,e){return fi((()=>null==t?null:Array.isArray(t)?t.map((t=>kb(t,e))):lg(t,"int32"===e.dtype?e:e.toInt())))}function Ib(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}function Nb(t){const e=[];t instanceof vs&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Qm(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Sb(t,e){if(null==t)return;const n=[];if(e instanceof vs)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof vs)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function Cb(t){return Array.isArray(t)}function Tb(t){return!function(t){return t instanceof vs}(t)&&!Cb(t)}function $b(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Cb(t)&&t.length>0)e=!0;else if(Tb(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new Yf(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(Tb(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new Yf(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if(Cb(t)){if((t=t).length!==e.length)throw new Yf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(t=t,e.length>1)throw new Yf(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=Nb(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const o=a[t];if(o.shape.length!==n[t].length)throw new Yf(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${o.shape}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const i=o.shape[a],l=n[t][a];if(null!=l&&l>=0&&i!==l)throw new Yf(`Error when checking ${s}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${o.shape}].`)}}return a}function Eb(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new Yf(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new Yf(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const o=a[t];if(o.shape.length!==n[t].length)throw new Yf(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const i=o.shape[a],l=n[t][a];if(null!=l&&l!==i)throw new Yf(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}class Ab extends db{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new Yf("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let o;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){a.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}r("_".repeat(e)),Qy(a,n,r),r("=".repeat(e));const i=t.layers;for(let t=0;t<i.length;++t)s?tb(i[t],n,r):eb(i[t],n,o,r),r((t===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?ay(t.collectedTrainableWeights):ay(t.trainableWeights),e}(t),u=ay(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Gp.adagrad(.01),Adadelta:()=>Gp.adadelta(1,.95,qf()),Adam:()=>Gp.adam(.001,.9,.999,qf()),Adamax:()=>Gp.adamax(.002,.9,.999,qf(),0),RMSProp:()=>Gp.rmsprop(.001,.9,0,qf()),SGD:()=>Gp.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new Yf(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Wi))throw new Yf("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Yf(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>Py(t)))}else{const n=Py(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new Yf(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(Py(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Wm("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Wm("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,r,a;for(const o of e){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===Oy?-1!==["accuracy","acc"].indexOf(o)?r=By:-1!==["crossentropy","ce"].indexOf(o)&&(r=Gy):this.lossFunctions[t]===_y?-1!==["accuracy","acc"].indexOf(o)?r=Hy:-1!==["crossentropy","ce"].indexOf(o)&&(r=qy):-1!==["accuracy","acc"].indexOf(o)?r=Vy:-1!==["crossentropy","ce"].indexOf(o)&&(r=jy),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),a=r,n=""+s}else{const t=Xy(o);a=t,n=""+Yy(o)}let e;Wm(n,(()=>{e=a})),s(t,n,e)}})(r[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;wb(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const o=this.testFunction;return nm(this.testLoop(o,a,r,n.verbose,n.steps))}finally{Sb(s[0],t),Sb(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let a=[];if(n.verbose>0)throw new Zf("Verbose mode is not implemented yet.");Q(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof e.next?e:await e.iterator();let i=0,l=0;for(;!r||l<n.batches;){const e=await o.next();if(a=fi((()=>{if(e.value){const{xs:n,ys:r}=yb(t,e.value),o=n.concat(r),u=fi((()=>s(o)));if(mi(o),0===l)for(let t=0;t<u.length;++t)a.push(Vi(0));const c=o[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=a[t];a[t]=fi((()=>Ti(a[t],Ai(c,e)))),l>0&&mi(n)}mi(u),i+=c,++l}return a})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=Ei(a[t],i),mi(e)}return nm(a)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new Yf(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new Yf(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new Yf("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),a=new ob;if(t instanceof vs&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Yf(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new Yf(`No value is provided for the model's input ${e.name}`);a.add(e,n)}const o=ub(s,a);return n?o:o[0]}retrieveSymbolicTensors(t){const e=Qf(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((t=>t.name));for(let r=0;r<t.length;++r){const o=a.indexOf(t[r]);if(-1!==o&&(e[r]=s[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new Yf(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return fi((()=>{const r=this.checkNumSamples(t);if(n)throw new Zf("Verbose predictLoop() is not implemented yet.");const s=Ib(r,e),a=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e)fi((()=>{const n=s[e][0],r=s[e][1],a=vb(t,n,r),o=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)o.push({key:this.inputs[t],value:a[t]});else o.push({key:this.inputs[0],value:a});const i=new ob(o);return ub(this.outputs,i)})).forEach(((t,e)=>a[e].push(t)));return nm(a.map((t=>Ml(t,0))))}))}predict(t,e={}){const n=Nb(t);Eb(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return wb(r),this.predictLoop(n,r)}finally{Sb(n,t)}}predictOnBatch(t){Eb(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Xf("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===_y?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=hm(t.map((t=>t.shape[0])));r.sort();const s=hm(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new Yf(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new Yf(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!at(r,s))throw new Yf(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=$b(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=$b(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Ry,Oy,Dy];for(let s=0;s<t.length;++s){const a=t[s],o=e[s],i=n[s];if(null!=o){if(o===Dy&&1===a.shape[a.shape.length-1])throw new Yf(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(o)){const t=a.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new Yf(`A target Tensor with shape ${a.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new Yf(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[o,i]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=fb(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await mb(i[e],null,t[e]))}return[o,i,l]}testLoop(t,e,n,r=0,s){return fi((()=>{const a=this.checkNumSamples(e,n,s,"steps"),o=[];if(r>0)throw new Zf("Verbose mode is not implemented yet.");if(null!=s)throw new Zf("steps mode in testLoop() is not implemented yet");{const r=Ib(a,n),s=yh(Zm(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],i=r[n][1],l=tg(s,a,i-a),u=kb(e,l),c=t(u);if(0===n)for(let t=0;t<c.length;++t)o.push(Vi(0));for(let t=0;t<c.length;++t){const e=c[t];o[t]=Ti(o[t],Ai(i-a,e))}}for(let t=0;t<o.length;++t)o[t]=Ei(o[t],a)}return o}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;em(t,r)>1&&(s+=`_${em(t.slice(0,n),r)}`),e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],o=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new ob(t),i=ub(this.outputs,o,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],i[t]);null!=s[t]&&(n=gb(n,s[t]));const a=oc(n);e.push(a),l=0===t?n:Ti(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=oc(e(r[s],i[s]))}gi(n),a.push(n)}return l=oc(l),this.calculateLosses().forEach((t=>{l=Ti(l,t)})),l}),!0,o)].concat(a)}}makeTestFunction(){this.testFunction=t=>fi((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const o=new ob(a),i=ub(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],a=oc(r(s[t],i[t]));n=0===t?a:Ti(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],a=oc(n(s[r],i[r]));e.push(a)}return e}))}async fit(t,e,n={}){return async function(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,o,i,l,u,c;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;wb(h);const p=!1,d=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,h);s=d[0],a=d[1],c=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Zf("validationData including sample weights is not supported yet."):new Yf(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);o=r.validationData[0],i=r.validationData[1];const e=!0,n=await t.standardizeUserData(o,i,null,null,e,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=vb(s,t,e),s=vb(s,0,t),u=vb(a,t,e),a=vb(a,0,t),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=s.concat(a).concat(c);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,w;m?(t.makeTestFunction(),x=t.testFunction,w=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],w=b.slice());const v=Cy(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,a,o,i,l,u,c,h,p,d,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=t.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=Zm(0,g)),null==o&&(o=1);const{callbackList:b,history:x}=$y(i,o,a,p,g,d,s,m,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let o=p;o<a;++o){await b.onEpochBegin(o);const a={};{if("batch"===c)throw new Zf("batch shuffling is not implemneted yet");c&&j(y);const o=yh(y),i=Ib(g,s);for(let c=0;c<i.length;++c){const h={};if(await b.onBatchBegin(c,h),fi((()=>{const p=i[c][0],d=i[c][1],f=tg(o,p,d-p);h.batch=c,h.size=d-p;const g=kb(n,f),y=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,gi(n)}if(c===i.length-1&&m){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];gi(s),a["val_"+n]=s}}})),await b.onBatchEnd(c,h),xy(h),t.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(o,a),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,b,h,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null)}finally{t.isTraining=!1,Sb(s,e),Sb(a,n),Sb(l,o),Sb(u,i),null!=c&&mi(c)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const r=null!=n.batchesPerEpoch;if(Q(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Q(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Q(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Q(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Q(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let a,o;if(s)if(xb(n.validationData))Q(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new Zf("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,o=t.ys}const i=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const c=Cy(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=$y(c,h,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,s,u);p.setModel(t),t.history=d,await p.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await e.iterator());!r||c<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=yb(t,e.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const o=[];if(null!=n.classWeight){const e=fb(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await mb(s[t],null,e[t]))}const u=r.concat(s).concat(o),d=i(u);mi(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];a[e]=n,gi(n)}await p.onBatchEnd(h,a),xy(a),h++,c++}if(r?c>=n.batchesPerEpoch:e.done){if(s){let e;e=xb(n.validationData)?rm(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):rm(t.evaluate(a,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),o=[];for(const t of a){const e=await t.data();o.push(e[0])}return mi(a),nm(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=pi().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-pi().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=sm(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>sm(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=sm(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[sm(Yy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>sm(Yy(t))));{const t={};for(const e in this.metrics)t[e]=sm(Yy(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Ey(rb(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=am(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>am(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=am(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>am(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=am(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=ma(t);if(0===e.length)throw new Yf(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Yf(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Yf("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ra(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${ab}`,convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await ra(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=la([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Zy(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Zy(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ab.className="Model",qo(Ab);class Rb extends Ab{}async function Mb(t,e){"modelTopology"in t||(t={modelTopology:t});let n=(t=t).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ey(rb(n),e);if(null!=t.weightsManifest){const e=await ro(t.weightsManifest,t.pathPrefix,r.weights.map((t=>t.originalName))),n={};for(const t of r.weights)n[t.originalName]=e[t.originalName];r.loadWeights(n),mi(e)}return r}Rb.className="Functional",qo(Rb);class Fb extends Ab{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:ty("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new Yf(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Fb||t instanceof Ab;let n;if(e){if(n=t,1!==n.outputs.length)throw new Yf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Yf("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new Yf("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=yy({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new Yf(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new Yf("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=my(this.outputs[0])}this.inboundNodes=[],new py({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(sy(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ab({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Xf("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new Yf("Legacy serialization format not supported yet.");s=e}else Q(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,a=e;const o=new t(a);if(!(o instanceof Fb))throw new Zf(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const t of s){const e=Ey(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new Yf("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new Yf("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function Db(t){return new Ab(t)}function _b(t){return new Fb(t)}function Ob(t,e){return null==e&&(e={}),async function(t,e){if(null==e&&(e={}),"string"==typeof t){const n=ga(t,e);if(0===n.length)n.push(uo(t,e));else if(n.length>1)throw new Yf(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return async function(t,e,n){if(null==n&&(n={}),null==t.load)throw new Yf("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,o=null!=r.weightData&&null!=r.weightSpecs&&a,i=Ey(rb(s),void 0,o),l=r.trainingConfig;if(null!=l&&i.loadTrainingConfig(l),null!=r.userDefinedMetadata&&i.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Yf("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=sa(t,e),r={},s=[];return e.forEach((t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);i.loadWeights(t,a),null!=i.optimizer&&e.length>0&&await i.optimizer.setWeights(e),mi(t),mi(e.map((t=>t.tensor)))}return i}(t,0,e)}(t,e)}function Lb(t){return yy(t)}function zb(t,e){Ty.registerCallbackConstructor(t,e)}Fb.className="Sequential",qo(Fb);class Pb extends Ho{getConfig(){return{}}}class Bb extends Pb{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Zf(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return gu(t)}(t,e)}}Bb.className="elu",qo(Bb);class Vb extends Pb{apply(t){return Xc(t)}}Vb.className="selu",qo(Vb);class Wb extends Pb{apply(t){return Bc(t)}}Wb.className="relu",qo(Wb);class Ub extends Pb{apply(t){return fi((()=>hc(6,Bc(t))))}}Ub.className="relu6",qo(Ub);class Gb extends Pb{apply(t){return t}}Gb.className="linear",qo(Gb);class Hb extends Pb{apply(t){return Fl(t)}}Hb.className="sigmoid",qo(Hb);class jb extends Pb{apply(t){return function(t){return fi((()=>{const e=Ti(.5,Ai(.2,t));return Hl(e,0,1)}))}(t)}}jb.className="hardSigmoid",qo(jb);class qb extends Pb{apply(t){return Pu(t)}}qb.className="softplus",qo(qb);class Kb extends Pb{apply(t){return function(t){return fi((()=>Ei(t,Xi(t).add(1))))}(t)}}Kb.className="softsign",qo(Kb);class Xb extends Pb{apply(t){return _l(t)}}Xb.className="tanh",qo(Xb);class Yb extends Pb{apply(t,e=-1){return ah(t,e)}}Yb.className="softmax",qo(Yb);class Zb extends Pb{apply(t,e=-1){return Uu(t,e)}}Zb.className="logSoftmax",qo(Zb);class Jb extends Pb{apply(t,e=1){return fi((()=>Fl(t.mul(e)).mul(t)))}}Jb.className="swish",qo(Jb);class Qb extends Pb{apply(t){return fi((()=>Ai(t,_l(Pu(t)))))}}function tx(t){return t.getClassName()}function ex(t,e={}){return um(t,jo.getMap().classNameMap,e,"activation")}function nx(t){if(null==t){return ex({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},ex(e)}return t instanceof Pb?t:ex(t)}function rx(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}Qb.className="mish",qo(Qb);class sx extends Ho{}class ax extends sx{constructor(t){super(),rx(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return fi((()=>{let e=ic([1]);return this.hasL1&&(e=Ti(e,Wu(Ai(this.l1,Xi(t))))),this.hasL2&&(e=Ti(e,Wu(Ai(this.l2,ug(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}ax.className="L1L2",qo(ax);const ox={l1l2:"L1L2"};function ix(t){return im(t)}function lx(t,e={}){return um(t,jo.getMap().classNameMap,e,"regularizer")}function ux(t){return null==t?null:"string"==typeof t?lx({className:t in ox?ox[t]:t,config:{}}):t instanceof sx?t:lx(t)}class cx extends fy{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=ry(t);let n=Bc(t);return null!=this.maxValue&&(n=Hl(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}cx.className="ReLU",qo(cx);class hx extends fy{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ry(t);return Ru(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}hx.className="LeakyReLU",qo(hx);class px extends fy{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=_g(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ux(t.alphaRegularizer),this.alphaConstraint=Tm(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new Yf(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=sy(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new uy({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=ry(t),Tc(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Dg(this.alphaInitializer),alphaRegularizer:ix(this.alphaRegularizer),alphaConstraint:Sm(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}px.className="PReLU",qo(px);class dx extends fy{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Zf(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=ry(t);return gu(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}dx.className="ELU",qo(dx);class fx extends fy{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=ry(t);return n.mul(Jm(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}fx.className="ThresholdedReLU",qo(fx);class mx extends fy{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Yb).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=ry(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function gx(t,e,n){if("number"==typeof t)return Qf(t,e);if(t.length!==e)throw new Yf(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new Yf(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var r}function yx(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function bx(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Ym([n-e,0]);else{if("same"!==r)throw new Yf(`Unsupport padding mode: ${r}.`);t*=e}return t}function xx(t,e){return fi((()=>(zm(e),"channelsFirst"===e?yo(t,[0,2,3,1]):t)))}function wx(t,e){return fi((()=>(zm(e),"channelsFirst"===e?yo(t,[0,2,3,4,1]):t)))}function vx(t,e,n,r=[1,1],s="valid",a,o,i=null){return fi((()=>{if(null==a&&(a="channelsLast"),zm(a),3!==t.rank&&4!==t.rank)throw new Yf(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new Yf(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=xx(t,a);if("causal"===s)throw new Zf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=jh({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===a&&(l=yo(l,[0,3,1,2])),l}))}mx.className="Softmax",qo(mx);class kx extends fy{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",kx.verifyArgs(e),this.rank=t,mm(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Zf(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=gx(e.kernelSize,t,"kernelSize"),this.strides=gx(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Pm(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,zm(this.dataFormat),this.activation=nx(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=_g(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Tm(e.biasConstraint),this.biasRegularizer=ux(e.biasRegularizer),this.activityRegularizer=ux(e.activityRegularizer),this.dilationRate=gx(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Yf(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Yf(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Yf(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(tm("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!fm(t.kernelSize,"number",1,3))throw new Yf(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:tx(this.activation),useBias:this.useBias,biasInitializer:Dg(this.biasInitializer),biasRegularizer:ix(this.biasRegularizer),activityRegularizer:ix(this.activityRegularizer),biasConstraint:Sm(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Ix extends kx{constructor(t,e){super(t,e),this.kernel=null,Ix.verifyArgs(e),this.filters=e.filters,mm(this.filters,"filters"),this.kernelInitializer=_g(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Tm(e.kernelConstraint),this.kernelRegularizer=ux(e.kernelRegularizer)}build(t){t=sy(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Yf(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return fi((()=>{let e;t=ry(t);const n=null==this.bias?null:this.bias.read(),r=ym(this.activation.getClassName());if(null!=r&&2===this.rank)e=vx(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=function(t,e,n,r=1,s="valid",a,o=1){return fi((()=>{if(null==a&&(a="channelsLast"),zm(a),3!==t.shape.length)throw new Yf(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new Yf(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Yf(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===a&&(t=yo(t,[0,2,1])),"causal"===s)throw new Zf("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Zl(t,e,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(i=hg(i,n)),i}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=vx(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Zf("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,r=[1,1,1],s="valid",a,o){return fi((()=>{if(null==a&&(a="channelsLast"),zm(a),4!==t.rank&&5!==t.rank)throw new Yf(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new Yf(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let i=wx(t,a);if("causal"===s)throw new Zf("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=tu(i,e,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(i=hg(i,n)),"channelsFirst"===a&&(i=yo(i,[0,4,1,2,3])),i}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=sy(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=yx(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Dg(this.kernelInitializer),kernelRegularizer:ix(this.kernelRegularizer),kernelConstraint:Sm(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new Yf(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Nx extends Ix{constructor(t){super(2,t),Nx.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!fm(t.kernelSize,"number",1,2))throw new Yf(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Nx.className="Conv2D",qo(Nx);class Sx extends Ix{constructor(t){super(3,t),Sx.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new Yf(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Sx.className="Conv3D",qo(Sx);class Cx extends Nx{constructor(t){if(super(t),this.inputSpec=[new uy({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Yf(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=sy(t)).length)throw new Yf("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Yf("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new uy({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return fi((()=>{let e=ry(t);if(4!==e.shape.length)throw new Yf(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const o=n[s],i=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,bx(o,c,l,this.padding),bx(i,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=yo(e,[0,2,3,1]));let d=Ql(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=yo(d,[0,3,1,2])),null!=this.bias&&(d=hg(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=sy(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=bx(e[r],i,a,this.padding),e[s]=bx(e[s],l,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Cx.className="Conv2DTranspose",qo(Cx);class Tx extends Sx{constructor(t){if(super(t),this.inputSpec=[new uy({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Yf(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=sy(t)).length)throw new Yf("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new Yf("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new uy({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return fi((()=>{let e=ry(t);if(5!==e.shape.length)throw new Yf(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,a,o;"channelsFirst"===this.dataFormat?(o=2,s=3,a=4):(o=1,s=2,a=3);const i=n[o],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,bx(i,d,c,this.padding),bx(l,f,h,this.padding),bx(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=yo(e,[0,2,3,4,1]));let y=nu(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=yo(y,[0,4,1,2,3])),null!==this.bias&&(y=hg(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(t){const e=(t=sy(t)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const o=this.kernelSize[0],i=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[r]=bx(e[r],u,o,this.padding),e[s]=bx(e[s],c,i,this.padding),e[a]=bx(e[a],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Tx.className="Conv3DTranspose",qo(Tx);class $x extends Ix{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new Yf("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new Yf("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new Yf(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=_g(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ux(e.depthwiseRegularizer),this.depthwiseConstraint=Tm(e.depthwiseConstraint),this.pointwiseInitializer=_g(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ux(e.pointwiseRegularizer),this.pointwiseConstraint=Tm(e.pointwiseConstraint)}build(t){if((t=sy(t)).length<this.rank+2)throw new Yf(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new Yf(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new uy({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return fi((()=>{let e;if(t=ry(t),1===this.rank)throw new Zf("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=yo(t,[0,2,3,1])),e=Yc(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=hg(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=yo(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Dg(this.depthwiseInitializer),t.pointwiseInitializer=Dg(this.pointwiseInitializer),t.depthwiseRegularizer=ix(this.depthwiseRegularizer),t.pointwiseRegularizer=ix(this.pointwiseRegularizer),t.depthwiseConstraint=Sm(this.depthwiseConstraint),t.pointwiseConstraint=Sm(this.pointwiseConstraint),t}}$x.className="SeparableConv";class Ex extends $x{constructor(t){super(2,t)}}Ex.className="SeparableConv2D",qo(Ex);class Ax extends Ix{constructor(t){super(1,t),Ax.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!fm(t.kernelSize,"number",1,1))throw new Yf(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Ax.className="Conv1D",qo(Ax);class Rx extends fy{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return fi((()=>{if(t=ry(t),"channelsLast"===this.dataFormat){const e=ng(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ng(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ng(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ng(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Rx.className="Cropping2D",qo(Rx);class Mx extends fy{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,zm(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,dm(Fm,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return fi((()=>{let e=ry(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=yo(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r]);return yo(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Mx.className="UpSampling2D",qo(Mx);class Fx extends kx{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=_g(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Tm(t.depthwiseConstraint),this.depthwiseRegularizer=ux(t.depthwiseRegularizer)}build(t){if((t=sy(t)).length<4)throw new Yf(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new Yf(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return fi((()=>{let e=function(t,e,n=[1,1],r="valid",s,a){return fi((()=>{null==s&&(s="channelsLast"),zm(s);let o=xx(t,s);if(4!==t.rank)throw new Yf(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new Yf(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=lu(o,e,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(o=yo(o,[0,3,1,2])),o}))}(t=ry(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=hg(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=sy(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=yx(e,this.kernelSize[0],this.padding,this.strides[0]),a=yx(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Dg(this.depthwiseInitializer),t.depthwiseRegularizer=ix(this.depthwiseRegularizer),t.depthwiseConstraint=Sm(this.depthwiseRegularizer),t}}function Dx(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new Yf("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function _x(t,e,n,r=!1,s,a,o=!1,i=!1){return fi((()=>{const l=e.shape.length;if(l<3)throw new Yf(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Zm(2,l));if(e=yo(e,u),null!=a)throw new Zf("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=xu(s,-1)),s=yo(s,u)),r&&(e=Wc(e,0),null!=s&&(s=Wc(s,0)));const c=[];let h,p=n;const d=e.shape[0],f=Ch(e);let m,g;null!=s&&(m=Ch(s));for(let e=0;e<d;++e){const n=f[e],r=fi((()=>t(n,p)));if(null==s)h=r[0],p=r[1];else{const t=fi((()=>{const t=m[e],n=bc(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map(((e,s)=>r[1][s].mul(t).add(e.mul(n))))}}));h=t.output,p=t.newStates}i&&c.push(h)}return i&&(g=dh(c,1)),[h,g,p]}))}Fx.className="DepthwiseConv2D",qo(Fx);class Ox extends fy{constructor(t){let e;if(super(t),null==t.cell)throw new Yf("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Gx({cells:t.cell}):t.cell,null==e.stateSize)throw new Yf("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new uy({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Zm(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){ey(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return fi((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Zf("Constants support is not implemented in RNN yet.");ey(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new uy({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!at(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new Yf(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new uy({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){fi((()=>{if(!this.stateful)throw new Kf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Yf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ic([n,t]))):this.states_=[ic([n,this.cell.stateSize])];else if(null==t)mi(this.states_),null!=this.keptStates&&(mi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>ic([n,t]))):this.states_[0]=ic([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Yf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):mi(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,s];if(!at(r.shape,a))throw new Yf(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>gi(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Dx(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],o=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new uy({shape:t.shape}));o=o.concat(this.stateSpec)}if(null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof cy){const n=[t].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return fi((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=ry(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Yf(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:r},i=_x(((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=i[0],u=i[1],c=i[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(t){return fi((()=>{let e=ic(t.shape);return e=Wu(e,[1,2]),e=Qm(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?ag(e,[1,t]):e)):this.cell.stateSize>1?[ag(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Ox.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=Ey(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Ox.className="RNN",qo(Ox);class Lx extends fy{}class zx extends Lx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,mm(this.units,"units"),this.activation=nx(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_g(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_g(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_g(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ux(t.kernelRegularizer),this.recurrentRegularizer=ux(t.recurrentRegularizer),this.biasRegularizer=ux(t.biasRegularizer),this.kernelConstraint=Tm(t.kernelConstraint),this.recurrentConstraint=Tm(t.recurrentConstraint),this.biasConstraint=Tm(t.biasConstraint),this.dropout=Xm([1,Ym([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Xm([1,Ym([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=sy(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return fi((()=>{if(2!==(t=t).length)throw new Yf(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hx({ones:()=>bc(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hx({ones:()=>bc(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,o=this.recurrentDropoutMask;s=ig(null!=a?Ai(t,a):t,this.kernel.read()),null!=this.bias&&(s=hg(s,this.bias.read())),null!=o&&(n=Ai(n,o));let i=Ti(s,ig(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tx(this.activation),useBias:this.useBias,kernelInitializer:Dg(this.kernelInitializer),recurrentInitializer:Dg(this.recurrentInitializer),biasInitializer:Dg(this.biasInitializer),kernelRegularizer:ix(this.kernelRegularizer),recurrentRegularizer:ix(this.recurrentRegularizer),biasRegularizer:ix(this.biasRegularizer),activityRegularizer:ix(this.activityRegularizer),kernelConstraint:Sm(this.kernelConstraint),recurrentConstraint:Sm(this.recurrentConstraint),biasConstraint:Sm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}zx.className="SimpleRNNCell",qo(zx);class Px extends Ox{constructor(t){t.cell=new zx(t),super(t)}call(t,e){return fi((()=>{null!=this.cell.dropoutMask&&(mi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}Px.className="SimpleRNN",qo(Px);class Bx extends Lx{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Yf("GRUCell does not support reset_after parameter set to true.");this.units=t.units,mm(this.units,"units"),this.activation=nx(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=nx(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_g(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_g(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_g(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ux(t.kernelRegularizer),this.recurrentRegularizer=ux(t.recurrentRegularizer),this.biasRegularizer=ux(t.biasRegularizer),this.kernelConstraint=Tm(t.kernelConstraint),this.recurrentConstraint=Tm(t.recurrentConstraint),this.biasConstraint=Tm(t.biasConstraint),this.dropout=Xm([1,Ym([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Xm([1,Ym([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=sy(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return fi((()=>{if(2!==(t=t).length)throw new Yf(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hx({ones:()=>bc(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hx({ones:()=>bc(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let o,i,l;0<this.dropout&&this.dropout<1&&(t=Ai(t,s[0]));let u=ig(t,this.kernel.read());this.useBias&&(u=hg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ai(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=uh(c,[2*this.units,this.units],c.rank-1),d=ig(r,h),[f,m,g]=uh(u,3,u.rank-1),[y,b]=uh(d,2,d.rank-1);o=this.recurrentActivation.apply(Ti(f,y)),i=this.recurrentActivation.apply(Ti(m,b));const x=ig(Ai(i,r),p);l=this.activation.apply(Ti(g,x));const w=Ti(Ai(o,r),Ai(Ti(1,zu(o)),l));return[w,w]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tx(this.activation),recurrentActivation:tx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dg(this.kernelInitializer),recurrentInitializer:Dg(this.recurrentInitializer),biasInitializer:Dg(this.biasInitializer),kernelRegularizer:ix(this.kernelRegularizer),recurrentRegularizer:ix(this.recurrentRegularizer),biasRegularizer:ix(this.biasRegularizer),activityRegularizer:ix(this.activityRegularizer),kernelConstraint:Sm(this.kernelConstraint),recurrentConstraint:Sm(this.recurrentConstraint),biasConstraint:Sm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Bx.className="GRUCell",qo(Bx);class Vx extends Ox{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Bx(t),super(t)}call(t,e){return fi((()=>{null!=this.cell.dropoutMask&&(mi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Vx.className="GRU",qo(Vx);class Wx extends Lx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,mm(this.units,"units"),this.activation=nx(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=nx(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=_g(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=_g(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=_g(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=ux(t.kernelRegularizer),this.recurrentRegularizer=ux(t.recurrentRegularizer),this.biasRegularizer=ux(t.biasRegularizer),this.kernelConstraint=Tm(t.kernelConstraint),this.recurrentConstraint=Tm(t.recurrentConstraint),this.biasConstraint=Tm(t.biasConstraint),this.dropout=Xm([1,Ym([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Xm([1,Ym([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=sy(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends gg{apply(e,r){const s=t.apply([n]),a=(new bg).apply([n]),o=t.apply([2*n]);return sg(sg(s,a),o)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return fi((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new Yf(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hx({ones:()=>bc(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hx({ones:()=>bc(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let i,l,u,c;0<this.dropout&&this.dropout<1&&(t=Ai(t,a[0]));let h=ig(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ai(r,o[0])),h=Ti(h,ig(r,this.recurrentKernel.read())),this.useBias&&(h=hg(h,this.bias.read()));const[p,d,f,m]=uh(h,4,h.rank-1);i=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=Ti(Ai(l,s),Ai(i,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ai(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:tx(this.activation),recurrentActivation:tx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dg(this.kernelInitializer),recurrentInitializer:Dg(this.recurrentInitializer),biasInitializer:Dg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ix(this.kernelRegularizer),recurrentRegularizer:ix(this.recurrentRegularizer),biasRegularizer:ix(this.biasRegularizer),activityRegularizer:ix(this.activityRegularizer),kernelConstraint:Sm(this.kernelConstraint),recurrentConstraint:Sm(this.recurrentConstraint),biasConstraint:Sm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Wx.className="LSTMCell",qo(Wx);class Ux extends Ox{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Wx(t),super(t)}call(t,e){return fi((()=>{null!=this.cell.dropoutMask&&(mi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Ux.className="LSTM",qo(Ux);class Gx extends Lx{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return fi((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=r[o],a=0===o?[t[0]].concat(n):[a[0]].concat(n),a=i.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;ey(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{Wm(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(Ey(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return iy(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}ly(e)}}function Hx(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,a=()=>pg(e(),n),o=()=>dg(a,e,r);return!s||s<=1?gi(o().clone()):Array(s).fill(void 0).map(o).map((t=>gi(t.clone())))}Gx.className="StackedRNNCells",qo(Gx);class jx extends Ox{constructor(t){if(t.unroll)throw new Zf("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Zf("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new uy({ndim:5})]}call(t,e){return fi((()=>{if(null!=this.cell.dropoutMask&&(mi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(mi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new Yf("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return fi((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=ic([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){fi((()=>{if(!this.stateful)throw new Kf("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Yf("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ic(s))):this.states_=[ic(s)];else if(null==t)mi(this.states_),null!=this.keptStates&&(mi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ic(s))):this.states_[0]=ic(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Yf(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):mi(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!at(n.shape,r))throw new Yf(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>gi(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i="channelsFirst"===e,l=t[i?3:2],u=t[i?4:3],c=yx(l,r[0],s,a[0],o[0]),h=yx(u,r[1],s,a[1],o[1]);return[...t.slice(0,2),...i?[n,c,h]:[c,h,n]]}}jx.className="ConvRNN2D";class qx extends Wx{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,mm(this.filters,"filters"),this.kernelSize=gx(n,2,"kernelSize"),this.kernelSize.forEach((t=>mm(t,"kernelSize"))),this.strides=gx(r||1,2,"strides"),this.strides.forEach((t=>mm(t,"strides"))),this.padding=s||"valid",Pm(this.padding),this.dataFormat=a||"channelsLast",zm(this.dataFormat),this.dilationRate=gx(o||1,2,"dilationRate"),this.dilationRate.forEach((t=>mm(t,"dilationRate")))}build(t){var e;t=sy(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new Yf(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends gg{apply(t,e){return rg([n.apply([r]),lc([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return fi((()=>{if(3!==t.length)throw new Yf(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hx({ones:()=>bc(r),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,i=(t,e,n)=>e&&e[n]?Ai(e[n],t):t;let l=i(r,o,0),u=i(r,o,1),c=i(r,o,2),h=i(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hx({ones:()=>bc(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=i(s,p,0),f=i(s,p,1),m=i(s,p,2),g=i(s,p,3);const[y,b,x,w]=uh(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?uh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,C,T,$]=uh(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,C),m=this.recurrentConv(m,T),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(Ti(l,d)),A=this.recurrentActivation.apply(Ti(u,f)),R=Ti(Ai(A,a),Ai(E,this.activation.apply(Ti(c,m)))),M=Ai(this.recurrentActivation.apply(Ti(h,g)),this.activation.apply(R));return[M,M,R]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=Yl(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?hg(s,n,this.dataFormat):s}recurrentConv(t,e){return Yl(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}qx.className="ConvLSTM2DCell",qo(qx);class Kx extends jx{constructor(t){const e=new qx(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Kx.className="ConvLSTM2D",qo(Kx);class Xx extends fy{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return fi((()=>{this.invokeCallHook(t,e);const n=ry(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return dg((()=>pg(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Xx.className="Dropout",qo(Xx);class Yx extends Xx{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Yx.className="SpatialDropout1D",qo(Yx);class Zx extends fy{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,mm(this.units,"units"),this.activation=nx(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=_g(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=_g(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Tm(t.kernelConstraint),this.biasConstraint=Tm(t.biasConstraint),this.kernelRegularizer=ux(t.kernelRegularizer),this.biasRegularizer=ux(t.biasRegularizer),this.activityRegularizer=ux(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=sy(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=sy(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return fi((()=>{this.invokeCallHook(t,e);const n=ry(t),r=ym(this.activation.getClassName());let s;return null!=r?s=ig(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=ig(n,this.kernel.read()),null!=this.bias&&(s=hg(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:tx(this.activation),useBias:this.useBias,kernelInitializer:Dg(this.kernelInitializer),biasInitializer:Dg(this.biasInitializer),kernelRegularizer:ix(this.kernelRegularizer),biasRegularizer:ix(this.biasRegularizer),activityRegularizer:ix(this.activityRegularizer),kernelConstraint:Sm(this.kernelConstraint),biasConstraint:Sm(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Zx.className="Dense",qo(Zx);class Jx extends fy{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=sy(t);for(const e of t.slice(1))if(null==e)throw new Yf(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],qm(t,1)]}call(t,e){return fi((()=>{this.invokeCallHook(t,e);let n=ry(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new Yf(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],qm(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Jx.className="Flatten",qo(Jx);class Qx extends fy{constructor(t){super(t),this.supportsMasking=!0,this.activation=nx(t.activation)}call(t,e){return fi((()=>{this.invokeCallHook(t,e);const n=ry(t);return this.activation.apply(n)}))}getConfig(){const t={activation:tx(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Qx.className="Activation",qo(Qx);class tw extends fy{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return fi((()=>{return t=ry(t),e=t,n=this.n,fi((()=>{if(2!==e.shape.length)throw new Yf(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return ag(Qm(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}tw.className="RepeatVector",qo(tw);class ew extends fy{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new Yf("Can only specifiy one unknown dimension.");a=t}else s*=e}const o=qm(t);if(null!==a){if(0===s||o%s!=0)throw new Yf(n);r[a]=o/s}else if(o!==s)throw new Yf(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return fi((()=>{this.invokeCallHook(t,e);const n=ry(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}ew.className="Reshape",qo(ew);class nw extends fy{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=Zm(1,t.dims.length+1);if(!at(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new uy({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=sy(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return yo(ry(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}nw.className="Permute",qo(nw);class rw extends fy{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=ry(t);return ll(yc(n,this.maskValue),-1)}call(t,e){return fi((()=>{this.invokeCallHook(t,e);const n=ry(t),r=ll(yc(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}rw.className="Masking",qo(rw);class sw extends fy{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(rm(t.inputLength))}this.inputDim=t.inputDim,mm(this.inputDim,"inputDim"),this.outputDim=t.outputDim,mm(this.outputDim,"outputDim"),this.embeddingsInitializer=_g(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ux(t.embeddingsRegularizer),this.activityRegularizer=ux(t.activityRegularizer),this.embeddingsConstraint=Tm(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return fi((()=>this.maskZero?(t=ry(t),yc(t,Fi(t))):null))}computeOutputShape(t){if(t=sy(t),null==this.inputLength)return[...t,this.outputDim];const e=rm(this.inputLength);if(e.length!==t.length-1)throw new Yf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new Yf(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return fi((()=>{this.invokeCallHook(t,e);let n=ry(t);return"int32"!==n.dtype&&(n=Jm(n,"int32")),lg(this.embeddings.read(),n.as1D()).reshape(sy(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Dg(this.embeddingsInitializer),embeddingsRegularizer:ix(this.embeddingsRegularizer),activityRegularizer:ix(this.activityRegularizer),embeddingsConstraint:Sm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}sw.className="Embedding",qo(sw);class aw extends fy{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Zf}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Yf("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[sy(t)]),(t=t).length<2)throw new Yf(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=hm(e),e.length>1)throw new Yf(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===hm(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return fi((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Ym(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Qm(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],a=t.slice(1).concat([s]);let o=r.reshape([s].concat(qm(t.slice(1))));o=yo(o,[1,0]),o=o.reshape(a),e.push(o),n=!0}else if(t>1){const s=Zm(1,t).concat([0]);e.push(yo(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=yo(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(Zm(0,s-1));r=yo(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=hm(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return fi((()=>{if(null==e)return null;if(!Array.isArray(e))throw new Yf("`mask` should be an Array");if(!Array.isArray(t))throw new Yf("`inputs` should be an Array");if(e.length!==t.length)throw new Yf(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:xu(t,0))))[0];for(let t=1;t<e.length-1;++t)n=Qu(n,e[t]);return n}))}}class ow extends aw{constructor(t){super(t)}mergeFunction(t){return fi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ti(e,t[n]);return e}))}}ow.className="Add",qo(ow);class iw extends aw{constructor(t){super(t)}mergeFunction(t){return fi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ai(e,t[n]);return e}))}}iw.className="Multiply",qo(iw);class lw extends aw{constructor(t){super(t)}mergeFunction(t){return fi((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Ti(e,t[n]);return Ai(1/t.length,e)}))}}lw.className="Average",qo(lw);class uw extends aw{constructor(t){super(t)}mergeFunction(t){return fi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Qi(e,t[n]);return e}))}}uw.className="Maximum",qo(uw);class cw extends aw{constructor(t){super(t)}mergeFunction(t){return fi((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=hc(e,t[n]);return e}))}}cw.className="Minimum",qo(cw);class hw extends aw{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new Yf("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(at(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Yf("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return fi((()=>rg(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Yf("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new Yf("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Yf("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new Yf(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return fi((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(bc(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(xu(e[n],-1)):r.push(e[n]);const s=Ml(r,this.axis);return il(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function pw(t,e){for(;t<0;)t+=e;return t}hw.className="Concatenate",qo(hw);class dw extends aw{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){Q(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Zf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new Yf(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new Yf(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>pw(e,t[n].shape.length))):[pw(this.axes,n.shape.length),pw(this.axes,r.shape.length)],this.normalize&&(n=Ay(n,e[0]),r=Ay(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Zf("batchDot is not implemented for tensors of 4D or higher rank yet");if(Q(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),Q(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Zf("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return fi((()=>{let n,o;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)o=a[0]===a[1]?t.mul(e).sum(a[0]):t.transpose([1,0]).mul(e).sum(a[1]);else{const n=a[0]!==t.shape.length-1,r=a[1]===e.shape.length-1;o=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);o=o.squeeze(e)}return 1===o.shape.length&&(o=o.expandDims(1)),o}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[pw(this.axes,t.length),pw(this.axes,e.length)],n}computeOutputShape(t){Q(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Zf("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}dw.className="Dot",qo(dw);class fw extends fy{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return fi((()=>{this.invokeCallHook(t,e);const n=ry(t);return dg((()=>og(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}fw.className="GaussianNoise",qo(fw);class mw extends fy{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return fi((()=>{this.invokeCallHook(t,e);const n=ry(t);return this.rate>0&&this.rate<1?dg((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(og(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}mw.className="GaussianDropout",qo(mw);class gw extends fy{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ry(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return fi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return dg((()=>{const e=ry(t),r=-1.7580993408473766;let s=Cu(Oc(n),this.rate);s=Jm(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-a*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(a).add(o)}),(()=>ry(t)),e.training||!1)}return t}))}}function yw(t,e,n,r,s,a=.001){let o;if(2===t.rank)o=Pl(t,e,n,r,s,a);else if(3===t.rank)o=Bl(t,e,n,r,s,a);else{if(4!==t.rank)throw new Zf(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=Vl(t,e,n,r,s,a)}return o}gw.className="AlphaDropout",qo(gw);class bw extends fy{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_g(t.betaInitializer||"zeros"),this.gammaInitializer=_g(t.gammaInitializer||"ones"),this.movingMeanInitializer=_g(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=_g(t.movingVarianceInitializer||"ones"),this.betaConstraint=Tm(t.betaConstraint),this.gammaConstraint=Tm(t.gammaConstraint),this.betaRegularizer=ux(t.betaRegularizer),this.gammaRegularizer=ux(t.gammaRegularizer)}build(t){t=sy(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new Yf(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new uy({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return fi((()=>{const n=null!=e.training&&e.training,r=ry(t),s=r.shape,a=s.length,o=Zm(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);const l=Qf(1,a);l[i]=s[i];const u=o.slice();u.sort();const c=!at(u,Zm(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const t=this.movingMean.read().reshape(l),e=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return yw(r,t,e,n,s,this.epsilon)}return yw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(t,e,n,r,s=.001){return at(r.slice().sort(),Zm(0,t.rank-1))?function(t,e,n,r,s=.001){return fi((()=>{const a=fc(t,r),o=a.mean,i=a.variance;return[yw(t,o,i,n,e,s),o,i]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return fi((()=>{const a=fc(t,r),o=a.mean,i=a.variance,l=[];for(const e of Zm(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=o.reshape(l),c=i.reshape(l),h=null==e?null:e.reshape(l),p=null==n?null:n.reshape(l);return[yw(t,u,c,p,h,s),o,i]}))}(t,e,n,r,s)}(r,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(t,e,n)=>{fi((()=>{const r=1-n,s=t.read(),a=s.sub(e).mul(r);t.write(s.sub(a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dg(this.betaInitializer),gammaInitializer:Dg(this.gammaInitializer),movingMeanInitializer:Dg(this.movingMeanInitializer),movingVarianceInitializer:Dg(this.movingVarianceInitializer),betaRegularizer:ix(this.betaRegularizer),gammaRegularizer:ix(this.gammaRegularizer),betaConstraint:Sm(this.betaConstraint),gammaConstraint:Sm(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}bw.className="BatchNormalization",qo(bw);class xw extends fy{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=_g(t.betaInitializer||"zeros"),this.gammaInitializer=_g(t.gammaInitializer||"ones"),this.betaRegularizer=ux(t.betaRegularizer),this.gammaRegularizer=ux(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=sy(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==hm(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=ry(t),r=n.shape,s=r.length;return fi((()=>{let{mean:t,variance:e}=fc(n,this.axis,!0);const a=Qf(1,s);for(const t of this.axis)a[t]=r[t];const o=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(a):t;let i=o(this.gamma.read()),l=o(this.beta.read());const u=[],c=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),c.push(1)):(u.push(1),c.push(r[t]));return t=t.tile(u),e=e.tile(u),i=i.tile(c),l=l.tile(c),yw(n,t,e,l,i,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dg(this.betaInitializer),gammaInitializer:Dg(this.gammaInitializer),betaRegularizer:ix(this.betaRegularizer),gammaRegularizer:ix(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}xw.className="LayerNormalization",qo(xw);class ww extends fy{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new Yf(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new Yf(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new Yf(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new uy({ndim:4})]}computeOutputShape(t){let e,n;return t=sy(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return fi((()=>{return e=ry(t),n=this.padding,r=this.dataFormat,fi((()=>{if(4!==e.rank)throw new Yf(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Yf("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Yf(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],wc(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function vw(t,e,n,r,s,a){return fi((()=>{let o;zm(s),Bm(a),Pm(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=xx(t,s);const i="same"===r?"same":"valid";return o="max"===a?rc(t,e,n,i):Al(t,e,n,i),"channelsFirst"===s&&(o=yo(o,[0,3,1,2])),o}))}function kw(t,e,n,r,s,a){return fi((()=>{let o;zm(s),Bm(a),Pm(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=wx(t,s);const i="same"===r?"same":"valid";return o="max"===a?sc(t,e,n,i):Rl(t,e,n,i),"channelsFirst"===s&&(o=yo(o,[0,4,1,2,3])),o}))}ww.className="ZeroPadding2D",qo(ww);class Iw extends fy{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new Yf(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(mm(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new Yf(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}mm(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Pm(this.padding),this.inputSpec=[new uy({ndim:3})]}computeOutputShape(t){const e=yx((t=sy(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return fi((()=>{this.invokeCallHook(t,e),t=Qm(ry(t),2);const n=this.poolingFunction(ry(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ph(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Nw extends Iw{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return zm(s),Pm(r),vw(t,e,n,r,s,"max")}}Nw.className="MaxPooling1D",qo(Nw);class Sw extends Iw{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return zm(s),Pm(r),vw(t,e,n,r,s,"avg")}}Sw.className="AveragePooling1D",qo(Sw);class Cw extends fy{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new Yf(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];mm(this.poolSize,"poolSize"),mm(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,zm(this.dataFormat),Pm(this.padding),this.inputSpec=[new uy({ndim:4})]}computeOutputShape(t){t=sy(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=yx(e,this.poolSize[0],this.padding,this.strides[0]),n=yx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return fi((()=>(this.invokeCallHook(t,e),this.poolingFunction(ry(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Tw extends Cw{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return zm(s),Pm(r),vw(t,e,n,r,s,"max")}}Tw.className="MaxPooling2D",qo(Tw);class $w extends Cw{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return zm(s),Pm(r),vw(t,e,n,r,s,"avg")}}$w.className="AveragePooling2D",qo($w);class Ew extends fy{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new Yf(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];mm(this.poolSize,"poolSize"),mm(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,zm(this.dataFormat),Pm(this.padding),this.inputSpec=[new uy({ndim:5})]}computeOutputShape(t){t=sy(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=yx(e,this.poolSize[0],this.padding,this.strides[0]),n=yx(n,this.poolSize[1],this.padding,this.strides[1]),r=yx(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return fi((()=>(this.invokeCallHook(t,e),this.poolingFunction(ry(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Aw extends Ew{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return zm(s),Pm(r),kw(t,e,n,r,s,"max")}}Aw.className="MaxPooling3D",qo(Aw);class Rw extends Ew{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return zm(s),Pm(r),kw(t,e,n,r,s,"avg")}}Rw.className="AveragePooling3D",qo(Rw);class Mw extends fy{constructor(t){super(t),this.inputSpec=[new uy({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Zf}}class Fw extends Mw{constructor(t){super(t||{})}call(t,e){return fi((()=>{const e=ry(t);return oc(e,1)}))}}Fw.className="GlobalAveragePooling1D",qo(Fw);class Dw extends Mw{constructor(t){super(t||{})}call(t,e){return fi((()=>{const e=ry(t);return Vu(e,1)}))}}Dw.className="GlobalMaxPooling1D",qo(Dw);class _w extends fy{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,zm(this.dataFormat),this.inputSpec=[new uy({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Zf}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ow extends _w{call(t,e){return fi((()=>{const e=ry(t);return"channelsLast"===this.dataFormat?oc(e,[1,2]):oc(e,[2,3])}))}}Ow.className="GlobalAveragePooling2D",qo(Ow);class Lw extends _w{call(t,e){return fi((()=>{const e=ry(t);return"channelsLast"===this.dataFormat?Vu(e,[1,2]):Vu(e,[2,3])}))}}Lw.className="GlobalMaxPooling2D",qo(Lw);class zw extends fy{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=Ey(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class Pw extends zw{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=sy(t)).length<3)throw new Yf(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=sy(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return fi((()=>_x(((t,n)=>[ry(this.layer.call(t,e)),[]]),t=ry(t),[],!1,null,null,!1,!0)[1]))}}Pw.className="TimeDistributed",qo(Pw);class Bw extends zw{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Ey(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Ey(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,dm(Om,"BidirectionalMergeMode",s),t.weights)throw new Zf("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),e=s[0]):e=s[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):nm(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=Dx(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new Yf("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map((t=>new uy({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),o.push(...r)}if(null!=r)throw new Zf("Support for constants in Bidirectional layers is not implemented yet.");const i=a[0]instanceof cy;for(const t of a)if(t instanceof cy!==i)throw new Yf("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=s,i}return super.apply(t,e)}call(t,e){return fi((()=>{const n=e.initialState;let r,s,a,o;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Wc(s,1)),"concat"===this.mergeMode?o=rg([r,s]):"sum"===this.mergeMode?o=Ti(r,s):"ave"===this.mergeMode?o=Ai(.5,Ti(r,s)):"mul"===this.mergeMode?o=Ai(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(a):[o].concat(a):o}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Wm(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Wm(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Ey(e.layer);if(delete e.layer,null!=e.numConstants)throw new Zf("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function Vw(t){return new gy(t)}function Ww(t){return new dx(t)}function Uw(t){return new cx(t)}function Gw(t){return new hx(t)}function Hw(t){return new px(t)}function jw(t){return new mx(t)}function qw(t){return new fx(t)}function Kw(t){return new Ax(t)}function Xw(t){return new Nx(t)}function Yw(t){return new Cx(t)}function Zw(t){return new Sx(t)}function Jw(t){return new Tx(t)}function Qw(t){return new Ex(t)}function tv(t){return new Rx(t)}function ev(t){return new Mx(t)}function nv(t){return new Fx(t)}function rv(t){return new Qx(t)}function sv(t){return new Zx(t)}function av(t){return new Xx(t)}function ov(t){return new Yx(t)}function iv(t){return new Jx(t)}function lv(t){return new tw(t)}function uv(t){return new ew(t)}function cv(t){return new nw(t)}function hv(t){return new sw(t)}function pv(t){return new ow(t)}function dv(t){return new lw(t)}function fv(t){return new hw(t)}function mv(t){return new uw(t)}function gv(t){return new cw(t)}function yv(t){return new iw(t)}function bv(t){return new dw(t)}function xv(t){return new bw(t)}function wv(t){return new xw(t)}function vv(t){return new ww(t)}function kv(t){return new Sw(t)}function Iv(t){return kv(t)}function Nv(t){return kv(t)}function Sv(t){return new $w(t)}function Cv(t){return Sv(t)}function Tv(t){return Sv(t)}function $v(t){return new Rw(t)}function Ev(t){return $v(t)}function Av(t){return $v(t)}function Rv(t){return new Fw(t)}function Mv(t){return new Ow(t)}function Fv(t){return new Dw(t)}function Dv(t){return new Lw(t)}function _v(t){return new Nw(t)}function Ov(t){return new Tw(t)}function Lv(t){return new Aw(t)}function zv(t){return new Vx(t)}function Pv(t){return new Bx(t)}function Bv(t){return new Ux(t)}function Vv(t){return new Wx(t)}function Wv(t){return new Px(t)}function Uv(t){return new zx(t)}function Gv(t){return new Kx(t)}function Hv(t){return new qx(t)}function jv(t){return new Ox(t)}function qv(t){return new Gx(t)}function Kv(t){return new Bw(t)}function Xv(t){return new Pw(t)}Bw.className="Bidirectional",qo(Bw);const Yv=Fv,Zv=Dv,Jv=_v,Qv=Ov;function tk(t){return new fw(t)}function ek(t){return new mw(t)}function nk(t){return new gw(t)}function rk(t){return new rw(t)}function sk(t,e){return By(t,e)}function ak(t,e){return Gy(t,e)}function ok(t,e){return Hy(t,e)}function ik(t,e){return Vy(t,e)}function lk(t,e){return jy(t,e)}function uk(t,e){return Uy(t,e)}function ck(t,e){return function(t,e){return fi((()=>{const n=Wy(t,e),r=function(t,e){return fi((()=>Qu(t.equal(1),e.equal(0)).sum().cast("float32")))}(t,e),s=n.add(r);return pu(Su(s,0),n.div(s),0).cast("float32")}))}(t,e)}function hk(t,e){return Ly(t,e)}function pk(t,e){return My(t,e)}function dk(t,e){return Fy(t,e)}function fk(t,e){return Fy(t,e)}function mk(t,e){return Fy(t,e)}function gk(t,e){return Ry(t,e)}function yk(t,e){return Ry(t,e)}function bk(t,e){return Ry(t,e)}function xk(t){return new ax(t)}function wk(t){return rx(e=t),new ax({l1:null!=e?e.l1:null,l2:0});var e}function vk(t){return rx(e=t),new ax({l2:null!=e?e.l2:null,l1:0});var e}class kk extends vy{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof Ab))throw new Error("model must be a LayersModel, not some other Container");this.model=t}}function Ik(t,e){return t<e}function Nk(t,e){return t>e}class Sk extends kk{constructor(t){if(super(),null==t&&(t={}),t.restoreBestWeights)throw new Zf("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Ik:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Nk:this.monitorFunc=Ik,this.monitorFunc===Ik&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Ik?1/0:-1/0}async onEpochEnd(t,e){await by(e);const n=this.getMonitorValue(e);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){null==t&&(t={});const e=t[this.monitor];return null==e&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),e}}const Ck={earlyStopping:function(t){return new Sk(t)}};var Tk,$k;!function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Tk||(Tk={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}($k||($k={}));const Ek={};function Ak(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};Ek[t]=n}function Rk(t){return Ek[t]}function Mk(t){delete Ek[t]}function Fk(t,e,n,r,s){const a=e.inputParams[t];if(a&&void 0!==a.inputIndexStart){const t=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?t+1:a.inputIndexEnd;if("tensor"===a.type)return Dk(e.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return e.inputNames.slice(t,o).map((t=>Dk(t,n,r,s)));const i=Dk(e.inputNames.slice(t)[0],n,r,s),l=i.dataSync();return"number"===a.type?l[0]:Rt(i.shape,l)}const o=e.attrParams[t];return o&&o.value}function Dk(t,e,n,r){const[s,a]=Lk(t);if(null!=r){const t=r.getHashTableHandleByName(s);if(null!=t)return t}const o=n.currentContextIds.find((t=>!!e[Ok(s,t)]));return void 0!==o?e[Ok(s,o)][a]:void 0}function _k(t,e){const[n,r]=Lk(t);return[Ok(n,e&&e.currentContextId),r]}function Ok(t,e){return e?`${t}-${e}`:t}function Lk(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function zk(t,e,n){let r=Fk("pad",t,e,n);if("explicit"===r){r=Fk("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function Pk(t){return t.kept?t:Xa(t)}const Bk=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Vk=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Wk=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],Uk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Gk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Hk=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jk=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],qk=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Kk=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Xk=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],Yk=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Zk=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Jk=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Qk=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],eI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],nI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class rI{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[N,S,C,T,$,E,A,D,F,R,_,O,L,z,P,B,M].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],s=[],a=[],o=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?s.push(t[e.name]):null!=e.input&&0!==e.input.length||a.push(t[e.name]),t)),{});let i=[];const l=[];let u={},c={};null!=e&&(u=this.mapSignatureEntries(e.inputs),c=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach((t=>{const e=o[t];e.inputNames.forEach((t=>{const[n]=_k(t);e.inputs.push(o[n]),o[n].children.push(e)}))})),0===Object.keys(c).length?h.forEach((t=>{const e=o[t];0===e.children.length&&l.push(e)})):Object.keys(c).forEach((t=>{const[e]=_k(t),n=o[e];null!=n&&(n.signatureKey=c[t],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((t=>{const[e]=_k(t),n=o[e];n&&(n.signatureKey=u[t],i.push(n))})):i=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:o,inputs:i,outputs:l,weights:s,placeholders:r,signature:e,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=Rk(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let s;switch(n.type){case"string":s=aI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=aI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=mI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=iI(t.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=iI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=fI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=oI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=oI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=yI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=yI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=dI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=gI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=cI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=cI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=hI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=hI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=uI(t.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uI(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:s,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const s=[],a=[];t.signature.inputArg.forEach((t=>{const[e]=_k(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lI(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,s.push(n),r[e]=n})),Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=_k(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const o=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=_k(o[t.name]),s=r[e];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(t);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function sI(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=Vt().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function aI(t,e,n,r=!1){const s=t[e];return null!=s?sI(s.s,r):n}function oI(t,e,n){const r=t[e];return r?r.b:n}function iI(t,e,n){const r=t[e]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function lI(t){switch("string"==typeof t&&(t=Tk[t]),t){case Tk.DT_FLOAT:return"float32";case Tk.DT_INT32:case Tk.DT_INT64:case Tk.DT_INT8:case Tk.DT_UINT8:return"int32";case Tk.DT_BOOL:return"bool";case Tk.DT_DOUBLE:return"float32";case Tk.DT_STRING:return"string";default:return null}}function uI(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function cI(t,e,n){const r=t[e];return r&&r.type?lI(r.type):n}function hI(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>lI(t))):n}function pI(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function dI(t,e,n){const r=t[e];return r&&r.shape?pI(r.shape):n}function fI(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function mI(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map((t=>sI(t,r))):n}function gI(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>pI(t))):n}function yI(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class bI{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return Dk(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Dk(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return iI(this.node.rawAttrs,t,e);if(null!=n.s)return aI(this.node.rawAttrs,t,e);if(null!=n.b)return oI(this.node.rawAttrs,t,e);if(null!=n.shape)return dI(this.node.rawAttrs,t,e);if(null!=n.type)return cI(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fI(this.node.rawAttrs,t,e);if(null!=n.list.s)return mI(this.node.rawAttrs,t,e);if(null!=n.list.shape)return gI(this.node.rawAttrs,t,e);if(null!=n.list.b)return yI(this.node.rawAttrs,t,e);if(null!=n.list.type)return hI(this.node.rawAttrs,t,e)}return e}}function xI(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){Q(t.length===e.length,(()=>n+` Shapes ${t} and ${e} must match`));for(let r=0;r<t.length;r++){const s=t[r],a=e[r];Q(s<0||a<0||s===a,(()=>n+` Shapes ${t} and ${e} must match`))}}}function wI(t){return"number"!=typeof t&&!t.some((t=>t<0))}function vI(t,e,n){let r=kI(t,n);const s=!wI(r);if(s&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach((t=>{r=kI(t.shape,r)})),!wI(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function kI(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const s=t[r],a=e[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=s>=0?s:a}return n}class II{constructor(t,e,n,r,s,a,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Vi(0),gi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),xI(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,gi(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return ea([],[0].concat(this.elementShape));const n=this.readMany(t);return xI(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),dh(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return ea([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return xI(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ml(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Ch(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,a=[];fi((()=>{e=El(e,[1,n,s]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,t[n],s];a[n]=El(Dl(e,o,i),this.elementShape)}return a}));const o=[];for(let e=0;e<t.length;e++)o[e]=e;this.writeMany(o,a)}}class NI{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);xI(e,t.shape,"TensorList shape mismatch: "),gi(t)})),this.idTensor=Vi(0),this.maxNumElements=r,gi(this.idTensor)}get id(){return this.idTensor.id}copy(){return new NI([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);xI(t,this.elementShape,"TensorList shape mismatch: ");const r=vI(this.elementShape,this.tensors,t);return fi((()=>{const t=this.tensors.map((t=>El(t,r)));return dh(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=vI(this.elementShape,this.tensors,t),r=this.tensors.pop();return xI(r.shape,t,"TensorList shape mismatch: "),El(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(xI(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");gi(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);xI(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=vI(this.elementShape,this.tensors,e);return El(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);xI(this.elementShape,e.shape,"TensorList shape mismatch: "),gi(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);xI(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=vI(this.elementShape,this.tensors,n);return 0===t.length?ea([],[0].concat(r)):fi((()=>{const e=t.map((t=>El(this.tensors[t],r)));return dh(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);xI(this.elementShape,e,"TensorList shape mismatch: ");const n=vI(this.elementShape,this.tensors,e);return 0===this.size()?ea([],[0].concat(n)):fi((()=>{const t=this.tensors.map((t=>El(t,n)));return Ml(t,0)}))}}function SI(t,e,n){const[r,s]=Fk("fusedOps",t,e,n),a="biasadd"===r,o="prelu"===s,i="fusedbatchnorm"===r,l=Fk("numArgs",t,e,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=Fk("strides",t,e,n),c=zk(t,e,n),h=Fk("dataFormat",t,e,n).toUpperCase(),p=Fk("dilations",t,e,n),[d,f]=Fk("args",t,e,n);return{stride:u,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:s,leakyreluAlpha:Fk("leakyreluAlpha",t,e,n)}}function CI(t,e,n){return{boxes:Fk("boxes",t,e,n),scores:Fk("scores",t,e,n),maxOutputSize:Fk("maxOutputSize",t,e,n),iouThreshold:Fk("iouThreshold",t,e,n),scoreThreshold:Fk("scoreThreshold",t,e,n),softNmsSigma:Fk("softNmsSigma",t,e,n)}}class TI{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Vi(0),this.tensorMap=new Map,gi(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Vi(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),fi((()=>{const t=Ch(e),r=n.length,s=t.length;Q(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let e=0;e<r;e++){const r=n[e],s=t[e];gi(s),this.tensorMap.set(r,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return fi((()=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,e);t.push(a)}return dh(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function $I(t,e,n,r){const s=((t,e,n)=>{switch(t.category){case"arithmetic":return fi((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[Ti(Fk("a",t,e,n),Fk("b",t,e,n))];case"AddN":return[ol(Fk("tensors",t,e,n))];case"FloorMod":case"Mod":return[dc(Fk("a",t,e,n),Fk("b",t,e,n))];case"Mul":return[Ai(Fk("a",t,e,n),Fk("b",t,e,n))];case"RealDiv":case"Div":return[Ei(Fk("a",t,e,n),Fk("b",t,e,n))];case"DivNoNan":return[du(Fk("a",t,e,n),Fk("b",t,e,n))];case"FloorDiv":return[$i(Fk("a",t,e,n),Fk("b",t,e,n))];case"Sub":return[qi(Fk("a",t,e,n),Fk("b",t,e,n))];case"Minimum":return[hc(Fk("a",t,e,n),Fk("b",t,e,n))];case"Maximum":return[Qi(Fk("a",t,e,n),Fk("b",t,e,n))];case"Pow":return[ji(Fk("a",t,e,n),Fk("b",t,e,n))];case"SquaredDifference":return[hh(Fk("a",t,e,n),Fk("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return fi((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Xi(Fk("x",t,e,n))];case"Acos":return[sl(Fk("x",t,e,n))];case"Acosh":return[al(Fk("x",t,e,n))];case"Asin":return[hl(Fk("x",t,e,n))];case"Asinh":return[pl(Fk("x",t,e,n))];case"Atan":return[dl(Fk("x",t,e,n))];case"Atan2":return[fl(Fk("x",t,e,n),Fk("y",t,e,n))];case"Atanh":return[ml(Fk("x",t,e,n))];case"Ceil":return[Gl(Fk("x",t,e,n))];case"Complex":return[Qs(Fk("real",t,e,n),Fk("imag",t,e,n))];case"Cos":return[ru(Fk("x",t,e,n))];case"Cosh":return[su(Fk("x",t,e,n))];case"Elu":return[gu(Fk("x",t,e,n))];case"Erf":return[yu(Fk("x",t,e,n))];case"Exp":return[bu(Fk("x",t,e,n))];case"Expm1":return[wu(Fk("x",t,e,n))];case"Floor":return[Iu(Fk("x",t,e,n))];case"Log":return[Ou(Fk("x",t,e,n))];case"Log1p":return[Lu(Fk("x",t,e,n))];case"Imag":return[Tu(Fk("x",t,e,n))];case"Neg":return[zu(Fk("x",t,e,n))];case"Reciprocal":return[Pc(Fk("x",t,e,n))];case"Real":return[zc(Fk("x",t,e,n))];case"Relu":return[Bc(Fk("x",t,e,n))];case"Round":return[qc(Fk("x",t,e,n))];case"Selu":return[Xc(Fk("x",t,e,n))];case"Sigmoid":return[Fl(Fk("x",t,e,n))];case"Sin":return[Qc(Fk("x",t,e,n))];case"Sign":return[Jc(Fk("x",t,e,n))];case"Sinh":return[th(Fk("x",t,e,n))];case"Softplus":return[Pu(Fk("x",t,e,n))];case"Sqrt":return[Ri(Fk("x",t,e,n))];case"Square":return[Mi(Fk("x",t,e,n))];case"Tanh":return[_l(Fk("x",t,e,n))];case"Tan":return[gh(Fk("x",t,e,n))];case"ClipByValue":return[Hl(Fk("x",t,e,n),Fk("clipValueMin",t,e,n),Fk("clipValueMax",t,e,n))];case"Relu6":return[Vc(Fk("x",t,e,n))];case"Rsqrt":return[Kc(Dk(t.inputNames[0],e,n))];case"Prod":return[$c(Fk("x",t,e,n),Fk("axes",t,e,n))];case"LeakyRelu":return[Ru(Fk("x",t,e,n),Fk("alpha",t,e,n))];case"Prelu":return[Tc(Fk("x",t,e,n),Fk("alpha",t,e,n))];case"IsNan":return[Au(Dk(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Fk("thenBranch",t,e,n),s=Fk("elseBranch",t,e,n),a=Fk("cond",t,e,n),o=Fk("args",t,e,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Fk("body",t,e,n),s=Fk("cond",t,e,n),a=Fk("args",t,e,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((t=>t.id));let l=await o[0].data();o.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||t.dispose()}));let u=a;for(;l[0];){const t=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const e=u.map((t=>t.id));t.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return u}case"LoopCond":return[Pk(Fk("pred",t,e,n))];case"Switch":{const r=Fk("pred",t,e,n);let s=Fk("data",t,e,n);return s.kept||(s=Pk(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==Dk(t,e,n)));return r?[Pk(Dk(r,e,n))]:void 0}case"Enter":{const r=Fk("frameName",t,e,n),s=Fk("tensor",t,e,n);return n.enterFrame(r),[Pk(s)]}case"Exit":{const r=Fk("tensor",t,e,n);return n.exitFrame(),[Pk(r)]}case"NextIteration":{const r=Fk("tensor",t,e,n);return n.nextIteration(),[Pk(r)]}case"TensorArrayV3":{const r=Fk("size",t,e,n),s=Fk("dtype",t,e,n),a=Fk("elementShape",t,e,n),o=Fk("dynamicSize",t,e,n),i=Fk("clearAfterRead",t,e,n),l=Fk("identicalElementShapes",t,e,n),u=Fk("name",t,e,n),c=new II(u,s,r,a,l,o,i);return n.addTensorArray(c),[c.idTensor,Vi(1)]}case"TensorArrayWriteV3":{const r=Fk("tensorArrayId",t,e,n),s=Fk("index",t,e,n),a=Fk("tensor",t,e,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=Fk("tensorArrayId",t,e,n),s=Fk("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Fk("tensorArrayId",t,e,n),s=Fk("indices",t,e,n),a=Fk("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=Fk("tensorArrayId",t,e,n),s=Fk("indices",t,e,n),a=Fk("tensor",t,e,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=Fk("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),a=Fk("dtype",t,e,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=Fk("tensorArrayId",t,e,n),s=Fk("tensor",t,e,n),a=Fk("lengths",t,e,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=Fk("tensorArrayId",t,e,n);return[Vi(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Fk("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Fk("tensorListId",t,e,n),s=Fk("index",t,e,n),a=Fk("tensor",t,e,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=Fk("tensorListId",t,e,n),s=Fk("index",t,e,n),a=Fk("elementShape",t,e,n),o=Fk("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Fk("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new NI([],n,t.dtype,r),o=Ch(t,0);return e.forEach(((t,e)=>{a.setItem(t,o[e])})),a}(Fk("tensor",t,e,n),r,Fk("elementShape",t,e,n),Fk("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Fk("elementShape",t,e,n),s=Fk("elementDType",t,e,n);let a;a="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=function(t,e,n){return new NI([],t,e,n)}(r,s,Fk(a,t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Fk("tensorListId",t,e,n),s=Fk("indices",t,e,n),a=Fk("elementShape",t,e,n),o=Fk("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=Fk("tensorListId",t,e,n),s=Fk("elementShape",t,e,n),a=Fk("elementDType",t,e,n),o=Fk("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);xI(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=Ch(t);return new NI(s,e,r)}(Fk("tensor",t,e,n),Fk("elementShape",t,e,n),Fk("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Fk("tensorListId",t,e,n),s=n.getTensorList(r.id),a=Fk("dtype",t,e,n),o=Fk("elementShape",t,e,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=Fk("tensorListId",t,e,n),s=Fk("tensor",t,e,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=Fk("tensorListId",t,e,n),s=Fk("elementShape",t,e,n),a=Fk("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=Fk("tensor",t,e,n),s=Fk("elementShape",t,e,n),a=function(t,e,n){let r=0;const s=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const a=kI(t.shape.slice(1),n),o=0===r?0:t.size/r,i=fi((()=>{const n=[];t=El(t,[1,r,o]);for(let r=0;r<e.length;++r){const i=[0,0===r?0:s[r-1],0],l=[1,e[r],o];n[r]=El(Dl(t,i,l),a)}return t.dispose(),n})),l=new NI([],n,t.dtype,e.length);for(let t=0;t<i.length;t++)l.setItem(t,i[t]);return l}(r,Fk("lengths",t,e,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return fi((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Fk("stride",t,e,n),s=Fk("pad",t,e,n),a=Fk("dataFormat",t,e,n).toUpperCase(),o=Fk("dilation",t,e,n);return[Zl(Fk("x",t,e,n),Fk("filter",t,e,n),r,s,a,o)]}case"Conv2D":{const r=Fk("strides",t,e,n),s=zk(t,e,n),a=Fk("dataFormat",t,e,n).toUpperCase(),o=Fk("dilations",t,e,n);return[Yl(Fk("x",t,e,n),Fk("filter",t,e,n),[r[1],r[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=SI(t,e,n);return[jh({x:Fk("x",t,e,n),filter:Fk("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:l,activationFunc:u,leakyreluAlpha:c}=SI(t,e,n);return[Xh({x:Fk("x",t,e,n),filter:Fk("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Fk("outputShape",t,e,n),s=Fk("strides",t,e,n),a=zk(t,e,n);return[Ql(Fk("x",t,e,n),Fk("filter",t,e,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Fk("strides",t,e,n),s=zk(t,e,n),a=Fk("dilations",t,e,n),o=Fk("dataFormat",t,e,n).toUpperCase();return[lu(Fk("input",t,e,n),Fk("filter",t,e,n),[r[1],r[2]],s,o,[a[1],a[2]])]}case"Conv3D":{const r=Fk("strides",t,e,n),s=Fk("pad",t,e,n),a=Fk("dataFormat",t,e,n).toUpperCase(),o=Fk("dilations",t,e,n);return[tu(Fk("x",t,e,n),Fk("filter",t,e,n),[r[1],r[2],r[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Fk("strides",t,e,n),s=Fk("pad",t,e,n),a=Fk("kernelSize",t,e,n);return[Al(Fk("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=Fk("strides",t,e,n),s=Fk("pad",t,e,n),a=Fk("kernelSize",t,e,n);return[rc(Fk("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=Fk("strides",t,e,n),s=Fk("pad",t,e,n),a=Fk("kernelSize",t,e,n),o=Fk("includeBatchInIndex",t,e,n),{result:i,indexes:l}=ac(Fk("x",t,e,n),[a[1],a[2]],[r[1],r[2]],s,o);return[i,l]}case"AvgPool3D":{const r=Fk("strides",t,e,n),s=Fk("pad",t,e,n),a=Fk("kernelSize",t,e,n);return[Rl(Fk("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=Fk("strides",t,e,n),s=Fk("pad",t,e,n),a=Fk("kernelSize",t,e,n);return[sc(Fk("x",t,e,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=Fk("strides",t,e,n),s=Fk("pad",t,e,n),a=Fk("dilations",t,e,n),o=r[1],i=r[2],l=a[1],u=a[2];return[cu(Fk("x",t,e,n),Fk("filter",t,e,n),[o,i],s,[l,u],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return fi((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Fk("shape",t,e,n),s=Fk("dtype",t,e,n);return[Gi(r,Fk("value",t,e,n),s)]}case"LinSpace":return[Du(Fk("start",t,e,n),Fk("stop",t,e,n),Fk("num",t,e,n))];case"Multinomial":{const r=Fk("logits",t,e,n),s=Fk("numSamples",t,e,n),a=Fk("seed",t,e,n);return[gc(r,s,a)]}case"OneHot":{const r=Fk("indices",t,e,n),s=Fk("depth",t,e,n),a=Fk("onValue",t,e,n),o=Fk("offValue",t,e,n);return[go(r,s,a,o)]}case"Ones":return[lc(Fk("shape",t,e,n),Fk("dtype",t,e,n))];case"OnesLike":return[bc(Fk("x",t,e,n))];case"RandomUniform":return[Oc(Fk("shape",t,e,n),Fk("minval",t,e,n),Fk("maxval",t,e,n),Fk("dtype",t,e,n))];case"Range":return[Lc(Fk("start",t,e,n),Fk("stop",t,e,n),Fk("step",t,e,n),Fk("dtype",t,e,n))];case"TruncatedNormal":{const r=Fk("shape",t,e,n),s=Fk("mean",t,e,n),a=Fk("stdDev",t,e,n),o=Fk("seed",t,e,n);return[Ih(r,s,a,Fk("dtype",t,e,n),o)]}case"Zeros":return[ic(Fk("shape",t,e,n),Fk("dtype",t,e,n))];case"ZerosLike":return[Fi(Fk("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:l}=CI(t,e,n),u=await Pp.nonMaxSuppressionWithScoreAsync(r,s,a,o,i,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=CI(t,e,n),l=Fk("padToMaxOutputSize",t,e,n),u=await Pp.nonMaxSuppressionPaddedAsync(r,s,a,o,i,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=CI(t,e,n);return[await Pp.nonMaxSuppressionAsync(r,s,a,o,i)]}case"Where":{const r=Ka(Fk("condition",t,e,n),"bool"),s=[await Eh(r)];return r.dispose(),s}case"ListDiff":return Zc(Fk("x",t,e,n),Fk("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return fi((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Fk("x",t,e,n),s=Fk("k",t,e,n),a=Fk("sorted",t,e,n),o=kh(r,s,a);return[o.values,o.indices]}case"Unique":{const r=Fk("x",t,e,n),s=Nh(r);return[s.values,s.indices]}case"UniqueV2":{const r=Fk("x",t,e,n),s=Fk("axis",t,e,n),a=Nh(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return fi((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Fk("images",t,e,n),s=Fk("size",t,e,n),a=Fk("alignCorners",t,e,n),o=Fk("halfPixelCenters",t,e,n);return[Pp.resizeBilinear(r,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{const r=Fk("images",t,e,n),s=Fk("size",t,e,n),a=Fk("alignCorners",t,e,n),o=Fk("halfPixelCenters",t,e,n);return[Pp.resizeNearestNeighbor(r,[s[0],s[1]],a,o)]}case"CropAndResize":{const r=Fk("image",t,e,n),s=Fk("boxes",t,e,n),a=Fk("boxInd",t,e,n),o=Fk("cropSize",t,e,n),i=Fk("method",t,e,n),l=Fk("extrapolationValue",t,e,n);return[Pp.cropAndResize(r,s,a,o,i,l)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return fi((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Fk("default",t,e,n);return[Dk(t.name,e,n)||r];case"Placeholder":return[Dk(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[Pk(Fk("x",t,e,n))];case"IdentityN":return Fk("x",t,e,n).map((t=>Pk(t)));case"Snapshot":return[Pk(Fk("x",t,e,n))];case"Shape":return[yh(Fk("x",t,e,n).shape,"int32")];case"ShapeN":return Fk("x",t,e,n).map((t=>yh(t.shape)));case"Size":return[Vi(Fk("x",t,e,n).size,"int32")];case"Rank":return[Vi(Fk("x",t,e,n).rank,"int32")];case"NoOp":return[Vi(1)];case"Print":const s=Fk("x",t,e,n),a=Fk("data",t,e,n),o=Fk("message",t,e,n),i=Fk("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let t=0;t<a.length;t++)console.log(Array.prototype.slice.call(a[t].dataSync()).slice(0,i));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return fi((()=>((t,e,n)=>{switch(t.op){case"Equal":return[hu(Fk("a",t,e,n),Fk("b",t,e,n))];case"NotEqual":return[yc(Fk("a",t,e,n),Fk("b",t,e,n))];case"Greater":return[Su(Fk("a",t,e,n),Fk("b",t,e,n))];case"GreaterEqual":return[Cu(Fk("a",t,e,n),Fk("b",t,e,n))];case"Less":return[Mu(Fk("a",t,e,n),Fk("b",t,e,n))];case"LessEqual":return[Fu(Fk("a",t,e,n),Fk("b",t,e,n))];case"LogicalAnd":return[Qu(Fk("a",t,e,n),Fk("b",t,e,n))];case"LogicalNot":return[tc(Fk("a",t,e,n))];case"LogicalOr":return[ec(Fk("a",t,e,n),Fk("b",t,e,n))];case"Select":case"SelectV2":return[pu(Fk("condition",t,e,n),Fk("a",t,e,n),Fk("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return fi((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[mo(Fk("a",t,e,n),Fk("b",t,e,n),Fk("transposeA",t,e,n),Fk("transposeB",t,e,n))];case"Einsum":return[mu(Fk("equation",t,e,n),...Fk("tensors",t,e,n))];case"Transpose":return[yo(Fk("x",t,e,n),Fk("perm",t,e,n))];case"_FusedMatMul":const[r,s]=Fk("fusedOps",t,e,n),a="biasadd"===r,o="prelu"===s,i=Fk("numArgs",t,e,n),l=Fk("leakyreluAlpha",t,e,n);if(a){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=Fk("args",t,e,n);return[Yh({a:Fk("a",t,e,n),b:Fk("b",t,e,n),transposeA:Fk("transposeA",t,e,n),transposeB:Fk("transposeB",t,e,n),bias:u,activation:s,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return fi((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[zl(Fk("x",t,e,n),Fk("mean",t,e,n),Fk("variance",t,e,n),Fk("offset",t,e,n),Fk("scale",t,e,n),Fk("epsilon",t,e,n))];case"LRN":return[_u(Fk("x",t,e,n),Fk("radius",t,e,n),Fk("bias",t,e,n),Fk("alpha",t,e,n),Fk("beta",t,e,n))];case"Softmax":return[ah(Fk("x",t,e,n))];case"LogSoftmax":return[Uu(Fk("x",t,e,n))];case"SparseToDense":return[_h(Fk("sparseIndices",t,e,n),Fk("outputShape",t,e,n),Fk("sparseValues",t,e,n),Fk("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return fi((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Fk("axis",t,e,n),s=Fk("keepDims",t,e,n);return[Vu(Fk("x",t,e,n),r,s)]}case"Mean":{const r=Fk("axis",t,e,n),s=Fk("keepDims",t,e,n);return[oc(Fk("x",t,e,n),r,s)]}case"Min":{const r=Fk("axis",t,e,n),s=Fk("keepDims",t,e,n);return[cc(Fk("x",t,e,n),r,s)]}case"Sum":{const r=Fk("axis",t,e,n),s=Fk("keepDims",t,e,n);return[Wu(Fk("x",t,e,n),r,s)]}case"All":{const r=Fk("axis",t,e,n),s=Fk("keepDims",t,e,n);return[il(Fk("x",t,e,n),r,s)]}case"Any":{const r=Fk("axis",t,e,n),s=Fk("keepDims",t,e,n);return[ll(Fk("x",t,e,n),r,s)]}case"ArgMax":{const r=Fk("axis",t,e,n);return[ul(Fk("x",t,e,n),r)]}case"ArgMin":{const r=Fk("axis",t,e,n);return[cl(Fk("x",t,e,n),r)]}case"Prod":{const r=Fk("axis",t,e,n),s=Fk("keepDims",t,e,n);return[$c(Fk("x",t,e,n),r,s)]}case"Cumsum":{const r=Fk("axis",t,e,n),s=Fk("exclusive",t,e,n),a=Fk("reverse",t,e,n);return[au(Fk("x",t,e,n),r,s,a)]}case"Bincount":const r=Fk("x",t,e,n),s=Fk("weights",t,e,n),a=Fk("size",t,e,n);return[Wl(r,s,a)];case"DenseBincount":{const r=Fk("x",t,e,n),s=Fk("weights",t,e,n),a=Fk("size",t,e,n),o=Fk("binaryOutput",t,e,n);return[ou(r,s,a,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return fi((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Fk("n",t,e,n),s=Fk("axis",t,e,n);let a=Fk("tensors",t,e,n);return a=a.slice(0,r),[Ml(a,s)]}case"Gather":{const r=Fk("x",t,e,n),s=Fk("indices",t,e,n);return[Nu(r,Ka(s,"int32"),0)]}case"GatherV2":{const r=Fk("axis",t,e,n),s=Fk("batchDims",t,e,n),a=Fk("x",t,e,n),o=Fk("indices",t,e,n);return[Nu(a,Ka(o,"int32"),r,s)]}case"Reverse":{const r=Fk("dims",t,e,n),s=[];for(let t=0;t<r.length;t++)r[t]&&s.push(t);const a=Fk("x",t,e,n);return[Wc(a,s)]}case"ReverseV2":{const r=Fk("axis",t,e,n),s=Fk("x",t,e,n);return[Wc(s,r)]}case"Slice":{const r=Fk("begin",t,e,n),s=Fk("size",t,e,n);return[Dl(Fk("x",t,e,n),r,s)]}case"StridedSlice":{const r=Fk("begin",t,e,n),s=Fk("end",t,e,n),a=Fk("strides",t,e,n),o=Fk("beginMask",t,e,n),i=Fk("endMask",t,e,n),l=Fk("ellipsisMask",t,e,n),u=Fk("newAxisMask",t,e,n),c=Fk("shrinkAxisMask",t,e,n),h=Fk("x",t,e,n);return[mh(h,r,s,a,o,i,l,u,c)]}case"Pack":return fi((()=>{const r=Fk("axis",t,e,n),s=Fk("tensors",t,e,n),a=s[0].shape,o=ph(s[0]).shape,i=s.map((t=>{const e=at(t.shape,a);if(!e&&!at(ph(t).shape,o))throw new Error("the input tensors shape does not match");return e?t:El(t,a)}));return[dh(i,r)]}));case"Unpack":{const r=Fk("axis",t,e,n),s=Fk("tensor",t,e,n);return Ch(s,r)}case"Tile":{const r=Fk("reps",t,e,n);return[vu(Fk("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Fk("axis",t,e,n),s=Fk("numOrSizeSplits",t,e,n),a=Fk("x",t,e,n);return uh(a,s,r)}case"ScatterNd":{const r=Fk("indices",t,e,n),s=Fk("values",t,e,n),a=Fk("shape",t,e,n);return[Dh(r,s,a)]}case"GatherNd":{const r=Fk("x",t,e,n),s=Fk("indices",t,e,n);return[Oh(r,s)]}case"SparseToDense":{const r=Fk("sparseIndices",t,e,n),s=Fk("outputShape",t,e,n),a=Fk("sparseValues",t,e,n),o=Fk("defaultValue",t,e,n);return[_h(r,a,s,a.dtype===o.dtype?o:Ka(o,a.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"sparse":return fi((()=>((t,e,n)=>{switch(t.op){case"SparseReshape":{const{outputIndices:r,outputShape:s}=Wp.sparseReshape(Fk("inputIndices",t,e,n),Fk("inputShape",t,e,n),Fk("newShape",t,e,n));return[r,s]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return fi((()=>((t,e,n)=>{switch(t.op){case"FFT":return[oh(Fk("x",t,e,n))];case"IFFT":return[ih(Fk("x",t,e,n))];case"RFFT":return[ch(Fk("x",t,e,n))];case"IRFFT":return[lh(Fk("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return fi((()=>((t,e,n)=>{switch(t.op){case"Cast":return[Ka(Fk("x",t,e,n),Fk("dtype",t,e,n))];case"ExpandDims":{const r=Fk("axis",t,e,n);return[xu(Fk("x",t,e,n),r)]}case"Squeeze":{const r=Fk("axis",t,e,n);return[ph(Fk("x",t,e,n),r)]}case"Reshape":return[El(Fk("x",t,e,n),Fk("shape",t,e,n))];case"MirrorPad":return[pc(Fk("x",t,e,n),Fk("padding",t,e,n),Fk("mode",t,e,n))];case"PadV2":case"Pad":return[wc(Fk("x",t,e,n),Fk("padding",t,e,n),Fk("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Fk("blockShape",t,e,n),s=Fk("paddings",t,e,n);return[Sc(Fk("x",t,e,n),r,s)]}case"BatchToSpaceND":{const r=Fk("blockShape",t,e,n),s=Fk("crops",t,e,n);return[Ll(Fk("x",t,e,n),r,s)]}case"DepthToSpace":{const r=Fk("blockSize",t,e,n),s=Fk("dataFormat",t,e,n).toUpperCase();return[iu(Fk("x",t,e,n),r,s)]}case"BroadcastTo":return[Ul(Fk("x",t,e,n),Fk("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=Fk("keyDType",t,e,n),a=Fk("valueDType",t,e,n),o=new TI(s,a);return r.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=Fk("tableHandle",t,e,n,r),a=Fk("keys",t,e,n),o=Fk("values",t,e,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Fk("tableHandle",t,e,n,r),a=Fk("keys",t,e,n),o=Fk("defaultValue",t,e,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=Fk("tableHandle",t,e,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const s=Rk(t.op);if(s&&s.customExecutor)return s.customExecutor(new bI(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return zt(s)?s.then((t=>[].concat(t))):[].concat(s)}class EI{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function AI(t,e,n,r){const s=new Set,a=[];let o=null,i=null;const l=new Set,u=Object.keys(t).map((t=>Lk(t)[0]));let c=[];null!=r&&(c=r.map((t=>Lk(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(DI(t)||_I(t)||OI(t))&&null==o&&(o=t,i=o.children.map((t=>t.name)).filter((t=>s.has(t)))),s.add(t.name),null==n[t.name]&&-1===u.indexOf(t.name)&&-1===c.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{l.has(t.name)||(l.add(t.name),h.push(t))})):a.push(t.name))}return{inputs:t,outputs:e,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}const RI=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],MI=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],FI=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function DI(t){return RI.indexOf(t.op)>=0}function _I(t){return MI.indexOf(t.op)>=0}function OI(t){return FI.indexOf(t.op)>=0}class LI{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new LI(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=AI(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=e.map((t=>t.name)),s=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map((t=>Lk(t)[0])).map((e=>t.nodes[e])),i=t.initNodes;o.forEach((t=>{r.has(t.name)&&a.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&a.push(t)})),null!=i&&i.forEach((t=>{r.has(t.name)&&a.push(t)}));const l=new Set,u=[];for(;a.length>0;){const t=a.pop();l.add(t.name),e[t.name]||u.push(t),t.children.forEach((t=>{!l.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>l.has(t.name)))&&a.push(t)}))}return u}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[Lk(t)[0]])),s=e.map((t=>Lk(t)[0]));let a=s.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const o=this.getCompilationKey(r,a);let i=this.compiledMap.get(o);null==i&&(i=this.compile(t,a),this.compiledMap.set(o,i));const l={},u={};return fi((()=>{const n=new EI(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,s]=Lk(e),a=[];a[s]=t[e],r[n]=a}));const a=this.getFrozenTensorIds(r),o={};for(let t=0;t<i.length;t++){const e=i[t];if(!r[e.name]){const t=$I(e,r,n,this._resourceManager);if(zt(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,a,s,o)}}return null==this.parent&&n.dispose(a),e.map((t=>Dk(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,s,a,o){"control"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[Ok(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!t.kept&&!s.has(t.id)){const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const a=new EI(this.weightMap,r,s,this.functionExecutorMap),o=await this.executeWithControlFlow(t,a,e,n),i=e.map((t=>Dk(t,o,a))),l=i.map((t=>t.id)),u=Object.keys(t).map((e=>t[e].id)),c=new Set([...l,...u,...this.weightIds]);return Object.keys(o).forEach((t=>{o[t].forEach((t=>{!t||t.kept||t.isDisposed||c.has(t.id)||t.dispose()}))})),null==this.parent&&a.dispose(c),i}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const s=Object.keys(t),a=s.map((t=>this.graph.nodes[Lk(t)[0]])),o=n.map((t=>Lk(t)[0]));let i=o.map((t=>this.graph.nodes[t]));0===i.length&&(i=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=AI(t,i,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=Lk(e),s=[];s[r]=t[e],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(a,p,e,d,g,m,o,f,l);await Promise.all(t)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((t=>!DI(t)&&!Dk(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=c&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${u}]. ${t}`)}return d}processStack(t,e,n,r,s,a,o,i,l){const u=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let c="";if("Enter"===t.node.op&&Fk("isConstant",t.node,r,n)&&([c]=_k(t.node.name,n)),null==r[t.node.name]){const h=$I(t.node,r,n,this._resourceManager);c||([c]=_k(t.node.name,n));const p=n.currentContext;zt(h)?u.push(h.then((u=>(r[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,t.node,r,n,a,o,i),this.processChildNodes(t.node,e,n,r,s,l),u)))):(r[c]=h,this.checkTensorForDisposal(c,t.node,r,n,a,o,i),this.processChildNodes(t.node,e,n,r,s,l))}else this.processChildNodes(t.node,e,n,r,s,l)}return u}processChildNodes(t,e,n,r,s,a){t.children.forEach((t=>{const[o]=_k(t.name,n);!s[o]&&a.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!Dk(t,r,n)))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!Dk(t,r,n)))&&(s[o]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=Lk(e),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value;Q(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&Q(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=Lk(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=Lk(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class zI{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class PI{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new zI}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=uo(t,this.loadOptions);else{const e=ga(t,this.loadOptions);if(0===e.length)e.push(uo(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=sa(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new LI(rI.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=rI.Instance.transformGraph(t.modelInitializer);this.initializer=new LI(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=ma(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof vs||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function BI(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new PI(t,e);return await n.load(),n}const VI="3.6.0";function WI(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(qI(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const a in t){const o=WI(t[a],e,n,r);s[a]=o}return r.delete(t),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function UI(t,e=HI){return GI(t,e)}function GI(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(qI(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=GI(t.map((t=>t[a])),e,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function HI(t){return null===t?null:qI(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function jI(t,e){const n=new Map;WI(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(zt(e)){const r=await e;n.set(t,r)}}return WI(t,e,n)}function qI(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof vs))}function KI(t){return t instanceof vs?{value:t.clone(),recurse:!1}:qI(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class XI{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class YI extends XI{constructor(){super(YI.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function ZI(t){return new tN(t)}function JI(t){return new eN(t)}YI.INITIAL_CAPACITY=32;class QI{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new lN(this,t)}filter(t){return new oN(this,t)}map(t){return new iN(this,t)}mapAsync(t){return new uN(this,t)}serialMapAsync(t){return new uN(this,t).serial()}flatmap(t){return new hN(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new aN(this,t,e)}columnMajorBatch(t,e=!0,n=HI){return this.rowMajorBatch(t,e).map((t=>UI(t,n)))}concatenate(t,e){return new pN(ZI([this,t]),e)}take(t){return t<0||null==t?this:new sN(this,t)}skip(t){return t<0||null==t?this:new rN(this,t)}prefetch(t){return new mN(this,t)}shuffle(t,e){return new gN(this,t,e)}serial(){return new nN(this)}}class tN extends QI{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,function(t,e){return WI(t,e)}(e,KI)),done:!1};var e}}class eN extends QI{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class nN extends QI{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class rN extends QI{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;mi(t.value)}return this.upstream.next()}}class sN extends QI{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class aN extends QI{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class oN extends QI{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;mi(t.value)}}}class iN extends QI{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=_s(t.value),n=this.transform(t.value),r=_s(n);for(const t of e)Ds(t,r)||t.dispose();return{value:n,done:!1}}}class lN extends QI{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class uN extends QI{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=_s(t.value),n=await this.transform(t.value),r=_s(n);for(const t of e)Ds(t,r)||t.dispose();return{value:n,done:!1}}}class cN extends QI{constructor(){super(),this.outputQueue=new YI,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class hN extends cN{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=_s(t.value),n=this.transform(t.value),r=_s(n);this.outputQueue.pushAll(n);for(const t of e)Ds(t,r)||t.dispose();return!0}}class pN extends QI{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var dN;!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(dN||(dN={}));class fN extends QI{constructor(t,e=dN.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const r=await jI(this.iterators,(function(t){return t instanceof QI?{value:t.next().then((t=>(e++,t.done&&n++,t.value))),recurse:!1}:{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case dN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case dN.SHORTEST:return{value:null,done:!0};case dN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class mN extends QI{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new XI(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class gN extends mN{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Ac.alea(n||as().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class yN{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return Q(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),bN((async()=>(await n.iterator()).columnMajorBatch(t,e,vN)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,bN((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,bN((async()=>(await e.iterator()).filter((e=>fi((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return bN((async()=>(await e.iterator()).map((e=>fi((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return bN((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return bN((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,bN((async()=>{return n=JI((async()=>({value:await e.iterator(),done:!1}))).take(t),new pN(n,r);var n,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,bN((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Ac.alea(e||as().toString());return bN((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,bN((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function bN(t,e=null){return new class extends yN{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function xN(t){return bN((async()=>ZI(t)),t.length)}function wN(t){if(!qI(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return bN((async()=>function(t,e=dN.FAIL){return new fN(t,e)}(await jI(t,(t=>{if(t instanceof yN)return{value:t.iterator(),recurse:!1};if(qI(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),dN.SHORTEST)),e)}function vN(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof vs||wt(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof vs?dh(t):ea(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}yN.MAX_BUFFER_SIZE=1e4;class kN extends yN{constructor(t){super(),this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t)))}}const IN='"',NN=Symbol("out"),SN=Symbol("field"),CN=Symbol("quote"),TN=Symbol("quoteafterquote"),$N=Symbol("quoteinquote");class EN extends yN{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new kN(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(Q(null==e.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&Q(t.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce(((t,e)=>(t[e]=t[e]+1||1,t)),{}),n=Object.keys(e).filter((t=>e[t]>1));if(Q(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const t of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(t))throw new Error('The key "'+t+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map((t=>this.makeDataElement(t)))}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],o=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||o){const i=e[s];let l=null;if(""===i)if(o&&void 0!==o.default)l=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${t}`);l=void 0}else{const t=Number(i);if(isNaN(t))l=o&&"bool"===o.dtype?this.getBoolean(i):i;else if(o&&o.dtype)switch(o.dtype){case"float32":l=t;break;case"int32":l=Math.floor(t);break;case"bool":l=this.getBoolean(i);break;default:l=t}else l=t}o&&o.isLabel?r[a]=l:n[a]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const s=t.length;let a=NN;for(let e=0;e<s;e++)switch(a){case NN:switch(t.charAt(e)){case IN:r=e+1,a=CN;break;case this.delimiter:if(r=e+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=NN;break;default:a=SN,r=e}break;case SN:switch(t.charAt(e)){case this.delimiter:n.push(t.substring(r,e)),a=NN,r=e+1}break;case CN:switch(t.charAt(e)){case IN:a=TN}break;case TN:switch(t.charAt(e)){case this.delimiter:n.push(t.substring(r,e-1)),a=NN,r=e+1;break;case IN:a=CN;break;default:a=$N}break;case $N:switch(t.charAt(e)){case IN:a=CN}}if(a===TN?n.push(t.substring(r,s-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class AN extends QI{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(Vt().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const e=new AN(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(t){throw new Error(`Error thrown while initializing video stream: ${t.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=await this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],e=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:t,timeDataQueue:e}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach(((t,r)=>n.set(t,r*e))),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(rt(e));return n.set(t,n.length-t.length),ea(n,e)}}class RN extends QI{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=yh([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,s=n+t,a=e+r;this.cropBox=bh([r,n,a,s],[1,4])}else this.cropBox=bh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(Vt().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new RN(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Q("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=No(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{t.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return fi((()=>{const e=xu(Ka(t,"float32"),0);let n;n=Pp.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return El(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((t=>t.stop()));try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class MN{}class FN extends QI{split(t){return new DN(this,t)}}class DN extends FN{constructor(t,e){super(),this.upstream=t,this.impl=new _N(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class _N extends cN{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const t of e.slice(0,-1))this.outputQueue.push(t);return this.carryover=e[e.length-1],!0}}class ON extends QI{decodeUTF8(){return new LN(this)}}class LN extends FN{constructor(t){super(),this.upstream=t,this.impl=new zN(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class zN extends cN{constructor(t){if(super(),this.upstream=t,Vt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(84589);this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let e,n;return!t.done&&(e=t.value,n=Vt().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(n),!0)}}class PN extends ON{constructor(t,e={}){super(),this.file=t,this.options=e,Q(t instanceof Uint8Array||!!Vt().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise(((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(s)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await t,done:!1}}}function BN(t){return"string"==typeof t&&"file://"===t.substr(0,7)}class VN extends MN{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(BN(this.input)&&Vt().get("IS_NODE")){const t=n(12993);this.input=t.readFileSync(this.input.substr(7))}return new PN(this.input,this.options)}}class WN extends MN{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return BN(this.url)?new VN(this.url,this.fileOptions).iterator():async function(t,e={}){let n,r;var s;"string"==typeof t?n=t:(n=t.url,r={method:(s=t).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const a=await os(n,r);if(a.ok){const t=new Uint8Array(await a.arrayBuffer());return new PN(t,e)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function UN(t,e={}){return new EN(new WN(t),e)}function GN(t){const e=JI(t);return bN((async()=>e))}function HN(t){return bN((async()=>{const e=await t();return JI((()=>e.next()))}))}async function jN(t,e){return RN.create(t,e)}async function qN(t){return AN.create(t)}const KN="3.6.0";function XN(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Q("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}const YN=$h;class ZN extends G{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new U(this,hi())}nextDataId(){return ZN.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,Vt().get("IS_NODE")&&hd("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&It(n[0])){const s=n.map((t=>is(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);return"complex64"===e?dd(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>ls(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return qa(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return hi().makeTensorFromDataId(r,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=as();return t(),{kernelMs:as()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){XN([t],"where");const e=this.readSync(t.dataId);return YN(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function JN(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(XN(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,l=i.data.get(o.dataId).values,u=rt(o.shape),c=n||o.dtype,h=gt(c,u);for(let t=0;t<u;++t)h[t]=e(l[t],s);return i.makeTensorInfo(o.shape,c,h)}}function QN(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(XN(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,l=i.data.get(o.dataId).values,u=n||o.dtype,c=e(l,u,s);return i.makeTensorInfo(o.shape,u,c)}}ZN.nextDataId=0,Ni("cpu",(()=>new ZN),1);const tS=JN(Ve,(t=>t>=0?t:Math.exp(t)-1)),eS={kernelName:Ve,backendName:"cpu",kernelFunc:tS};function nS(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rS={kernelName:sn,backendName:"cpu",kernelFunc:nS};function sS(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:a}=r;XN([s],"leakyRelu");const o=rt(s.shape),i=n.data.get(s.dataId).values,l=mt("float32",o);for(let t=0;t<i.length;t++)l[t]=i[t]<0?a*i[t]:i[t];return n.makeTensorInfo(s.shape,"float32",l)}const aS={kernelName:hn,backendName:"cpu",kernelFunc:sS};function oS(t){return(e,n,r,s,a)=>{const o=Ji(e,n),i=o.length,l=Et(o),u=mt(a,rt(o)),c=e.length,h=n.length,p=Et(e),d=Et(n),f=Yi(e,o),m=Yi(n,o);if(f.length+m.length===0)for(let e=0;e<u.length;++e)u[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<u.length;++e){const n=Lt(e,i,l),a=n.slice(-c);f.forEach((t=>a[t]=0));const o=Ot(a,c,p),g=n.slice(-h);m.forEach((t=>g[t]=0));const y=Ot(g,h,d);u[e]=t(r[o],s[y])}return[u,o]}}const iS=oS(((t,e)=>t<0?e*t:t));function lS(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;XN([r,s],"prelu");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,l]=iS(r.shape,s.shape,a,o,r.dtype);return n.makeTensorInfo(l,r.dtype,i)}const uS={kernelName:Kn,backendName:"cpu",kernelFunc:lS},cS=JN(Qn,(t=>Math.max(0,t))),hS={kernelName:Qn,backendName:"cpu",kernelFunc:cS},pS=JN(ar,(t=>Math.min(Math.max(0,t),6))),dS={kernelName:ar,backendName:"cpu",kernelFunc:pS},fS=JN(gr,(t=>1/(1+Math.exp(-t)))),mS={kernelName:gr,backendName:"cpu",kernelFunc:fS};function gS(t,e,n,r,s){if("linear"===n)return nS({inputs:{x:e},backend:t});if("relu"===n)return cS({inputs:{x:e},backend:t});if("elu"===n)return tS({inputs:{x:e},backend:t});if("relu6"===n)return pS({inputs:{x:e},backend:t});if("prelu"===n)return lS({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return sS({inputs:{x:e},backend:t,attrs:{alpha:s}});if("sigmoid"===n)return fS({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function yS(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}const bS={kernelName:ye,backendName:"cpu",kernelFunc:yS};function xS(t,e,n="float32"){if("complex64"===n)return yS({inputs:{real:xS(t,e,"float32"),imag:xS(t,e,"float32")},backend:t});const r=Ft(rt(e),n);return t.makeTensorInfo(e,n,r)}function wS(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const vS={kernelName:Zn,backendName:"cpu",kernelFunc:wS};function kS(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return nS({inputs:{x:s},backend:n});const t=xS(n,s.shape,s.dtype),e=kS({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=yS({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=wS({inputs:{input:s},backend:n}),e=kS({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!xt(s.dtype,a)){const t=nS({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===a){const t=n.data.get(s.dataId).values,e=ss([0],s.dtype),[r,a]=oS(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const IS={kernelName:fe,backendName:"cpu",kernelFunc:kS};function NS(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:o}=n,i=s;XN([a,o],t);const l=i.data.get(a.dataId).values,u=i.data.get(o.dataId).values,c=r||a.dtype,[h,p]=e(a.shape,o.shape,l,u,c);return i.makeTensorInfo(p,c,h)}:({inputs:t,backend:s})=>{const{a,b:o}=t,i=s;if("complex64"===a.dtype||"complex64"===o.dtype){const t=kS({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),e=i.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,l=i.data.get(r.dataId).values,u=i.data.get(s.dataId).values,c=kS({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),h=i.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=i.data.get(p.dataId).values,m=i.data.get(d.dataId).values,[g,y,b]=n(a.shape,o.shape,l,u,f,m),x=i.makeTensorInfo(b,"float32",g),w=i.makeTensorInfo(b,"float32",y),v=yS({inputs:{real:x,imag:w},backend:i});return i.disposeIntermediateTensorInfo(t),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(w),v}{const t=i.data.get(a.dataId).values,n=i.data.get(o.dataId).values,s=r||a.dtype,[l,u]=e(a.shape,o.shape,t,n,s);return i.makeTensorInfo(u,s,l)}}}function SS(t){return(e,n,r,s,a,o)=>{const i=Ji(e,n),l=rt(i),u=i.length,c=Et(i),h=mt("float32",l),p=mt("float32",l),d=Yi(e,i),f=Yi(n,i),m=dd(r,s),g=dd(a,o),y=e.length,b=Et(e),x=n.length,w=Et(n);if(d.length+f.length===0)for(let e=0;e<h.length;e++){const n=e%m.length,r=e%g.length,s=t(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[e]=s.real,p[e]=s.imag}else for(let e=0;e<h.length;e++){const n=Lt(e,u,c),r=n.slice(-y);d.forEach((t=>r[t]=0));const s=Ot(r,y,b),a=n.slice(-x);f.forEach((t=>a[t]=0));const o=Ot(a,x,w),i=t(m[2*s],m[2*s+1],g[2*o],g[2*o+1]);h[e]=i.real,p[e]=i.imag}return[h,p,i]}}const CS=oS(((t,e)=>t+e)),TS=SS(((t,e,n,r)=>({real:t+n,imag:e+r}))),$S=NS(Xt,CS,TS),ES={kernelName:Xt,backendName:"cpu",kernelFunc:$S};function AS(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,o=rt(s.shape),i=pt(a,o),l=rt(i);Q(o===l,(()=>`The new shape (${i}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const t=u.complexTensorInfos.real,e=u.complexTensorInfos.imag;t.shape=i,e.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const RS={kernelName:tr,backendName:"cpu",kernelFunc:AS};function MS(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a}=e,{transposeA:o,transposeB:i}=r;XN([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=o?s.shape[l-2]:s.shape[l-1],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-1]:s.shape[l-2],d=i?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=rt(f),y=rt(m);Q(l>=2&&u>=2&&(g===y||1===g||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const b=(g>y?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([p,d]);Q(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`));const x=i?[y,d,h]:[y,h,d],w=AS({inputs:{x:s},backend:n,attrs:{shape:o?[g,c,p]:[g,p,c]}}),v=AS({inputs:{x:a},backend:n,attrs:{shape:x}}),k=o?w.shape[1]:w.shape[2],I=o?w.shape[2]:w.shape[1],N=i?v.shape[1]:v.shape[2],S=Math.max(g,y),C=n.data.get(w.dataId).values,T=n.data.get(v.dataId).values,$=Et(w.shape),E=Et(v.shape),[A,R,M]=o?[$[0],1,$[1]]:[$[0],$[1],1],[F,D,_]=i?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*N,L=qa([S,I,N],w.dtype),z=L.values,P=n.blockSize;for(let t=0;t<S;t++)for(let e=0;e<I;e+=P)for(let n=0;n<N;n+=P)for(let r=0;r<k;r+=P){const s=Math.min(e+P,I),a=Math.min(n+P,N),o=Math.min(r+P,k);for(let i=e;i<s;i++)for(let e=n;e<a;e++){let n=0;for(let s=r;s<o;s++){const r=Math.min(t,g-1)*A,a=Math.min(t,y-1)*_;n+=C[r+i*R+s*M]*T[s*F+e*D+a]}z[t*O+(i*N+e)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const FS={kernelName:ce,backendName:"cpu",kernelFunc:MS},DS={kernelName:Ur,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a,bias:o,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=MS({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(d=$S({inputs:{a:p,b:o},backend:n}),m.push(p),p=d),c&&(f=gS(n,p,c,i,h),m.push(p),p=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return p}};function _S(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const OS={kernelName:jt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;XN(e,"abs");let r=new Float32Array(rt(e.shape));return r=_S(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,"float32")}},LS=JN(qt,(t=>Math.acos(t))),zS={kernelName:qt,backendName:"cpu",kernelFunc:LS},PS=JN(Kt,(t=>Math.acosh(t))),BS={kernelName:Kt,backendName:"cpu",kernelFunc:PS},VS={kernelName:Yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;XN(e,"addN");const s=r.map((t=>n.data.get(t.dataId).values)),a=qa(r[0].shape,r[0].dtype),o=a.values;for(let t=0;t<r.length;t++){const e=s[t];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function WS(t,e,n,r,s){const a=e.length,o=rt(e),i=Et(e),l=Et(s),u=mt(n,rt(s));for(let e=0;e<o;++e){const n=Lt(e,a,i),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[Ot(s,a,l)]=t[e]}return u}function US(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:a}=n;XN(s,"transpose");const o=s.shape.length,i=new Array(o);for(let t=0;t<i.length;t++)i[t]=s.shape[a[t]];const l=WS(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(l,i,s.dtype),shape:i,dtype:s.dtype}}const GS={kernelName:_r,backendName:"cpu",kernelFunc:US},HS={kernelName:Zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r;XN(s,"all");const i=dt(a,s.shape);let l=i;const u=Xu(l,s.shape.length);let c=s;null!=u&&(c=US({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Zu(l.length,s.shape.length)),Ku("all",l,c.shape.length);const[h,p]=ju(c.shape,l),d=rt(p),f=Ft(rt(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const r=m[e+t];n=n&&r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const t=AS({inputs:{x:g},backend:n,attrs:{shape:qu(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},jS={kernelName:Jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r;XN(s,"any");const i=dt(a,s.shape);let l=i;const u=Xu(l,s.shape.length);let c=s;null!=u&&(c=US({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Zu(l.length,s.shape.length)),Ku("any",l,c.shape.length);const[h,p]=ju(c.shape,l),d=rt(p),f=Ft(rt(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const r=m[e+t];n=n||r}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const t=AS({inputs:{x:g},backend:n,attrs:{shape:qu(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},qS={kernelName:Qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a}=r;XN(s,"argMax");let o=dt(a,s.shape);const i=Xu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=US({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Zu(o.length,l.shape.length)),o=[o[0]],Ku("argMax",o,l.shape.length);const[c,h]=ju(l.shape,o),p=Ft(rt(c),"int32"),d=rt(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],r=0;for(let t=0;t<d;++t){const s=f[e+t];s>n&&(n=s,r=t)}p[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},KS={kernelName:te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a}=r;XN(s,"argMin");let o=dt(a,s.shape);const i=Xu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=US({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Zu(o.length,l.shape.length)),o=[o[0]],Ku("argMin",o,l.shape.length);const[c,h]=ju(l.shape,o),p=Ft(rt(c),"int32"),d=rt(h),f=n.data.get(l.dataId).values;for(let t=0;t<p.length;++t){const e=t*d;let n=f[e],r=0;for(let t=0;t<d;++t){const s=f[e+t];s<n&&(n=s,r=t)}p[t]=r}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c,"int32",p)}},XS=JN(ee,(t=>Math.asin(t))),YS={kernelName:ee,backendName:"cpu",kernelFunc:XS},ZS=JN(ne,(t=>Math.asinh(t))),JS={kernelName:ne,backendName:"cpu",kernelFunc:ZS},QS=JN(re,(t=>Math.atan(t))),tC={kernelName:re,backendName:"cpu",kernelFunc:QS},eC=oS(((t,e)=>Math.atan2(t,e))),nC=NS(ae,eC),rC={kernelName:ae,backendName:"cpu",kernelFunc:nC},sC=JN(se,(t=>Math.atanh(t))),aC={kernelName:se,backendName:"cpu",kernelFunc:sC};function oC(t,e,n,r,s,a){const o=s.strideHeight,i=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=qa(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,m=e*r[0];for(let e=0;e<s.inChannels;++e)for(let y=0;y<s.outHeight;++y){const w=y*o-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+y*b;for(let n=0;n<s.outWidth;++n){const o=n*i-d,c=Math.max(0,o),p=Math.min(s.inWidth,h+o);let y=f,b=0,w=0;for(let n=v;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<p;n+=u){const o=t[s+n*r[2]+e];"max"===a&&o>y?y=o:"avg"===a&&(b+=o,w++)}if(isNaN(y))break}g[I+n*x+e]="avg"===a?b/w:y}}}return m}function iC(t,e,n,r,s=!1,a=!1){const o=qa(r.outShape,"int32"),i=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=qa(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const g=n*i-d;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let i=0;i<r.outWidth;++i){const h=i*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const o=n-g;for(let i=d;i<x;i+=c){const l=i-h,u=m.get(t,n,i,e);u>w&&(w=u,v=s?a?((t*r.inHeight+n)*r.inWidth+i)*r.inChannels+e:(n*r.inWidth+i)*r.inChannels+e:o*p+l)}}o.set(v,t,n,i,e)}}return o}function lC(t,e,n,r,s,a){const o=s.strideDepth,i=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=qa(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let e=0;e<s.batchSize;++e){const n=e*v,x=e*r[0];for(let e=0;e<s.inChannels;++e)for(let v=0;v<s.outDepth;++v){const S=v*o-m;let C=S;for(;C<0;)C+=u;const T=Math.min(s.inDepth,p+S),$=n+v*k;for(let n=0;n<s.outHeight;++n){const o=n*i-g;let p=o;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+o),v=$+n*I;for(let n=0;n<s.outWidth;++n){const o=n*l-y;let i=o;for(;i<0;)i+=h;const d=Math.min(s.inWidth,f+o),g=v+n*N;let k=b,I=0,S=0;for(let n=C;n<T;n+=u){const s=x+n*r[1];for(let n=p;n<m;n+=c){const o=s+n*r[2];for(let n=i;n<d;n+=h){const s=t[o+n*r[3]+e];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+e]="avg"===a?I/S:k}}}}return x}const uC={kernelName:oe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;XN(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;Q(Tl(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=yl(s.shape,a,o,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&at(u.inShape,u.outShape))c=nS({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=Et(s.shape),r=oC(t,s.shape,s.dtype,e,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},cC={kernelName:le,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r;XN(s,"avgPool3d");const c=bl(s.shape,a,o,1,i,l,u),h=lC(n.data.get(s.dataId).values,s.shape,s.dtype,Et(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},hC={kernelName:ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;XN([s,a],"avgPool3DGrad");const c=bl(a.shape,o,i,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=k-1-c.padInfo.left,S=v-1-c.padInfo.top,C=qa(a.shape,"float32"),T=1/(f*m*g),$=n.bufferSync(s);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,o=r-S,i=s-N;let l=0;for(let n=0;n<w;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const s=(o+n)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(i+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=$.get(t,r,s,a,e))}}}C.set(l*T,t,n,r,s,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},pC={kernelName:ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,o=a;XN([s,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=r,c=yl(o.shape,i,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=qa(o.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,N=qa(s.shape,"float32",I);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let o=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(o+=N.get(t,r,s,e))}}v.set(o*k,t,n,r,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},dC={kernelName:Qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:a,offset:o,mean:i,variance:l}=e;Q(i.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Q(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Q(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),XN([s,i,l,a,o],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let t=0;t<c.length;++t)m[t]=f[w++]+(c[t]-h[v++])*d[k++]/Math.sqrt(p[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function fC(t,e,n,r,s){const a=Vo(r,e,n),o=rt(n),i=Et(r);if(a){const n=Wo(e,i);return"string"===s?t.slice(n,n+o):t.subarray(n,n+o)}const l=qa(r,s,"string"===s?Md(t):t),u=qa(n,s);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));u.set(l.get(...r),...n)}return"string"===s?Fd(u.values):u.values}function mC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,size:o}=r;XN(s,"slice");const[i,l]=Uo(s,a,o);Eo(s,i,l);const u=fC(n.data.get(s.dataId).values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const gC={kernelName:pr,backendName:"cpu",kernelFunc:mC},yC={kernelName:he,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,crops:o}=r;XN([s],"batchToSpaceND");const i=a.reduce(((t,e)=>t*e)),l=Jp(s.shape,a,i),u=Qp(l.length,a.length),c=td(s.shape,a,i),h=ed(o,a.length),p=nd(c,o,a.length),d=AS({inputs:{x:s},backend:n,attrs:{shape:l}}),f=US({inputs:{x:d},backend:n,attrs:{perm:u}}),m=AS({inputs:{x:f},backend:n,attrs:{shape:c}}),g=mC({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function bC(t,e,n,r,s){const a=rt(r),o=Ft(s,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=a>0?e[n]:1)}return o}function xC(t,e,n,r=!1){const s=t.shape[0],a=t.shape[1],o=qa([s,n],e.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=t.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):e.size>0?o.set(o.get(i,a)+e.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o}const wC={kernelName:pe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:a}=e,{size:o}=r,i=bC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,i)}};function vC(t){return(e,n,r)=>{const s=mt(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}const kC=vC((t=>Math.ceil(t))),IC=QN(me,kC),NC={kernelName:me,backendName:"cpu",kernelFunc:IC},SC=JN(ge,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),CC={kernelName:ge,backendName:"cpu",kernelFunc:SC},TC={kernelName:be,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(rt(e.shape)),s=n.data.get(e.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values;for(let t=0;t<i.length;t++){const e=i[t],n=l[t];r[t]=Math.hypot(e,n)}return n.makeOutput(r,e.shape,"float32")}};function $C(t,e,n,r){const s=gt(n,rt(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=rt(t.shape);s.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const a="string"===n?Md(t.vals):t.vals;let o=0;for(let n=0;n<t.shape[0];++n){const i=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[i+e]=a[o++]}r+=t.shape[1]}))}return s}function EC(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const AC={kernelName:on,backendName:"cpu",kernelFunc:EC};function RC(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=dt(s,e[0].shape)[0];let o=Kp(e.map((t=>t.shape)),a);if(0===rt(o))return n.makeTensorInfo(o,e[0].dtype,[]);const i=e.filter((t=>rt(t.shape)>0));if(1===i.length)return nS({inputs:{x:i[0]},backend:n});if(qp(i.map((t=>t.shape)),a),"complex64"===i[0].dtype){const t=i.map((t=>wS({inputs:{input:t},backend:n}))),e=i.map((t=>EC({inputs:{input:t},backend:n}))),r=RC({inputs:t,backend:n,attrs:{axis:a}}),s=RC({inputs:e,backend:n,attrs:{axis:a}}),o=yS({inputs:{real:r,imag:s},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const l=i.map((t=>{const e=rt(t.shape.slice(a));return AS({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),u=l.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));o=Kp(l.map((t=>t.shape)),1);const c=1===l[0].shape[0],h=$C(u,o,e[0].dtype,c),p=Kp(i.map((t=>t.shape)),a),d=n.makeTensorInfo(p,e[0].dtype,h);return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}const MC={kernelName:xe,backendName:"cpu",kernelFunc:RC};function FC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=r;XN([s,a],"conv2d");const h=$l(l),p=xl(s.shape,a.shape,o,u,i,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new ys(p.outShape,s.dtype),v=Et(s.shape),k=Et(a.shape),I=v[0],N=x?v[1]:v[2],S=x?v[2]:1,C=x?1:v[1],T=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(s.dataId).values,M=n.data.get(a.dataId).values,F=w.values;for(let t=0;t<p.batchSize;++t){const e=t*I,n=t*T;for(let t=0;t<p.outHeight;++t){const r=n+t*$,s=t*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],o=e+n*N;for(let t=0;t<p.outWidth;++t){const e=r+t*E,n=t*p.strideWidth-y;for(let t=0;t<f;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const s=o+r*S;let i=a+t*k[1];for(let t=0;t<p.inChannels;++t){const n=R[s+t*C];for(let t=0;t<p.outChannels;++t)F[e+t*A]+=n*M[i+t];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const DC={kernelName:we,backendName:"cpu",kernelFunc:FC},_C={kernelName:ve,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;XN([s,a],"conv2dBackpropFilter");const h=$l(l),p=xl(s.shape,c,o,1,i,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new ys(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new ys(s.shape,s.dtype,v),N=new ys(a.shape,a.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((w-t)/d)),n=Math.min(p.outHeight,(p.inHeight+w-t)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let o=0;o<p.inChannels;++o)for(let i=0;i<p.outChannels;++i){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*d-w;for(let t=s;t<a;++t){const n=r+t*f-x;l+=y?I.get(u,e,n,o)*N.get(u,c,t,i):I.get(u,o,e,n)*N.get(u,i,c,t)}}b.set(l,t,r,o,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},OC={kernelName:ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r;XN([s,a],"conv2dBackpropInput");const h=Et(a.shape),p=Et(s.shape);let d=$l(u);const f=xl(o,a.shape,i,1,l,c,!1,d),m=new ys(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:C,inWidth:T,outChannels:$,outHeight:E,outWidth:A,strideHeight:R,strideWidth:M}=f;d=f.dataFormat;const F=I-1-f.padInfo.top,D=N-1-f.padInfo.left,_="channelsLast"===d,O=m.strides[0],L=_?m.strides[1]:m.strides[2],z=_?m.strides[2]:1,P=_?1:m.strides[1],B=p[0],V=_?p[1]:p[2],W=_?p[2]:1,U=_?1:p[1];for(let t=0;t<k;++t)for(let e=0;e<S;++e)for(let n=0;n<C;++n){const r=n-F,s=Math.max(0,Math.ceil(r/R)),a=Math.min(E,(I+r)/R);for(let o=0;o<T;++o){const i=o-D,l=Math.max(0,Math.ceil(i/M)),u=Math.min(A,(N+i)/M);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=l;r<u;++r){const a=B*t+V*n+W*r,o=x*(I-1-s)+w*(N-1-(r*M-i))+v*e;for(let t=0;t<$;++t)c+=y[a+U*t]*b[o+t]}}g[O*t+L*n+z*o+P*e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},LC={kernelName:Ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:o,pad:i,dilations:l}=r;XN([s,a],"conv3d");const u=wl(s.shape,a.shape,o,l,i),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new ys(u.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=w.values,N=Et(s.shape),S=Et(a.shape);for(let t=0;t<u.batchSize;++t){const e=t*N[0],n=t*w.strides[0];for(let t=0;t<u.outDepth;++t){const r=n+t*w.strides[1],s=t*u.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=u.inDepth)continue;const a=t*S[0],o=e+n*N[1];for(let t=0;t<u.outHeight;++t){const e=r+t*w.strides[2],n=t*u.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*f;if(r<0||r>=u.inHeight)continue;const s=a+t*S[1],i=o+r*N[2];for(let t=0;t<u.outWidth;++t){const n=e+t*u.outChannels,r=t*u.strideWidth-b;for(let t=0;t<p;++t){const e=r+t*m;if(e<0||e>=u.inWidth)continue;const a=s+t*S[2],o=i+e*u.inChannels;let l=a;for(let t=0;t<u.inChannels;++t){const e=v[o+t];for(let t=0;t<u.outChannels;++t)I[n+t]+=e*k[l+t];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},zC={kernelName:Ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:o,pad:i,filterShape:l}=r;XN([s,a],"conv3dBackpropFilterV2");const u=Et(s.shape),c=Et(a.shape),h=wl(s.shape,l,o,1,i),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new ys(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(a.dataId).values,[S,C,T,$]=c,E=n.data.get(s.dataId).values,[A,R,M,F]=u,D=h.padInfo.front,_=h.padInfo.left,O=h.padInfo.top;for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((D-t)/p)),n=Math.min(h.outDepth,(h.inDepth+D-t)/p),r=t*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((O-s)/d)),o=Math.min(h.outHeight,(h.inHeight+O-s)/d),i=s*v+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((_-r)/f)),u=Math.min(h.outWidth,(h.inWidth+_-r)/f),c=r*k+i;for(let i=0;i<h.inChannels;++i){const m=i*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=e;m<n;++m){const e=(t+m*p-D)*R+h,n=m*C+y;for(let t=a;t<o;++t){const a=(s+t*d-O)*M+e,o=t*T+n;for(let t=l;t<u;++t){const e=t*$+o;g+=E[(r+t*f-_)*F+a+i]*N[e+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},PC={kernelName:Se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{pad:o,strides:i,inputShape:l}=r;XN([s],"conv3dBackpropInputV2");const u=Et(s.shape),c=Et(a.shape),h=wl(l,a.shape,i,1,o),p=new ys(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=u,I=n.data.get(a.dataId).values,[N,S,C,T]=c,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:M,inDepth:F,inHeight:D,inWidth:_,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:W}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let t=0;t<$;++t)for(let e=0;e<M;++e)for(let n=0;n<F;++n){const r=n-U,s=Math.max(0,Math.ceil(r/B)),a=Math.min(L,(E+r)/B);for(let o=0;o<D;++o){const i=o-G,l=Math.max(0,Math.ceil(i/V)),u=Math.min(z,(A+i)/V);for(let c=0;c<_;++c){const h=c-H,p=Math.max(0,Math.ceil(h/W)),$=Math.min(P,(R+h)/W);let M=0;for(let n=s;n<a;++n){const s=n*B-r;for(let r=l;r<u;++r){const a=r*V-i;for(let o=p;o<$;++o){const i=x*t+w*n+v*r+k*o,l=N*(E-1-s)+S*(A-1-a)+C*(R-1-(o*W-h))+T*e;for(let t=0;t<O;++t)M+=b[i+t]*I[l+t]}}}d[f*t+m*n+g*o+y*c+e]=M}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},BC=JN(Ce,(t=>Math.cos(t))),VC={kernelName:Ce,backendName:"cpu",kernelFunc:BC},WC=JN(Te,(t=>Math.cosh(t))),UC={kernelName:Te,backendName:"cpu",kernelFunc:WC},GC={kernelName:Ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:a,boxInd:o}=e,{cropSize:i,method:l,extrapolationValue:u}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=i,y=qa([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,w=n.data.get(s.dataId).values,v=Et(s.shape),k=Et(y.shape);for(let t=0;t<f;t++){const e=4*t,n=b[e],r=b[e+1],s=b[e+2],a=b[e+3],o=x[t];if(o>=c)continue;const i=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(p-1)/(g-1):0;for(let e=0;e<m;e++){const c=m>1?n*(h-1)+e*i:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const s=r+n*k[2]+e*k[1]+t*k[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),i=c-n;for(let l=0;l<g;l++){const c=g>1?r*(p-1)+l*f:.5*(r+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+l*k[2]+e*k[1]+t*k[0];y.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let a=r+h*v[2]+n*v[1]+o*v[0];const u=w[a];a=r+m*v[2]+n*v[1]+o*v[0];const c=w[a];a=r+h*v[2]+s*v[1]+o*v[0];const p=w[a];a=r+m*v[2]+s*v[1]+o*v[0];const d=u+(c-u)*b,f=p+(w[a]-p)*b;a=r+l*k[2]+e*k[1]+t*k[0],y.values[a]=d+(f-d)*i}}}else for(let n=0;n<g;++n){const s=g>1?r*(p-1)+n*f:.5*(r+a)*(p-1);if(s<0||s>p-1){for(let r=0;r<d;r++){const s=r+n*k[2]+e*k[1]+t*k[0];y.values[s]=u}continue}const i=Math.round(s),l=Math.round(c);for(let r=0;r<d;r++){const s=r+i*v[2]+l*v[1]+o*v[0],a=r+n*k[2]+e*k[1]+t*k[0];y.values[a]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},HC={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,exclusive:o,reverse:i}=r;XN(s,"cumsum");const l=Xu([a],s.shape.length);let u=s;null!=l&&(u=US({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Zu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=As(u.dtype,"int32"),p=Ft(rt(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let t=0;t<d.length;t+=f)for(let e=0;e<f;e++){const n=m(t,e);if(0===e)p[n]=o?0:d[n];else{const r=m(t,e-1);p[n]=o?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const t=US({inputs:{x:g},backend:n,attrs:{perm:Yu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}},jC={kernelName:Ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:a}=e,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const t=bC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,t)}if(2===s.shape.length){const t=xC(n.bufferSync(s),n.bufferSync(a),o,i);return n.makeTensorInfo(t.shape,a.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},qC={kernelName:Re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:a,dataFormat:o}=r;Q("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`)),Q(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const i=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*h*p*d);let g=0;for(let t=0;t<i;++t)for(let e=0;e<h;++e){const n=Math.floor(e/a),r=e%a;for(let e=0;e<p;++e){const s=Math.floor(e/a),o=(r*a+e%a)*d;for(let e=0;e<d;++e){const r=e+o+c*(s+u*(n+l*t));m[g++]=f[r]}}}return n.makeTensorInfo([i,h,p,d],s.dtype,m)}};function KC(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=r;XN([s,a],"depthwiseConv2DNative");const c=Et(s.shape),h=Et(a.shape);let p=l;null==p&&(p=[1,1]),Q(Tl(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const d=xl(s.shape,a.shape,o,p,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new ys(d.outShape,s.dtype),I=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,S=k.values;for(let t=0;t<d.batchSize;++t){const e=t*c[0],n=t*k.strides[0];for(let t=0;t<d.outHeight;++t){const r=n+t*k.strides[1],s=t*d.strideHeight-w;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],o=e+n*c[1];for(let t=0;t<d.outWidth;++t){const e=r+t*k.strides[2],n=t*d.strideWidth-x;for(let t=0;t<m;++t){const r=n+t*y;if(r<0||r>=d.inWidth)continue;const s=a+t*h[1],i=o+r*d.inChannels;let l=e,u=s;for(let t=0;t<d.inChannels;++t){const e=I[i+t];for(let t=0;t<v;++t)S[l+t]+=e*N[u+t];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const XC={kernelName:Me,backendName:"cpu",kernelFunc:KC},YC={kernelName:Fe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=r;XN([s,a],"depthwiseConv2dNativeBackpropFilter");const h=xl(s.shape,c,o,i,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new ys(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new ys(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,I=new ys(a.shape,a.dtype,k);for(let t=0;t<f;++t){const e=Math.max(0,Math.ceil((b-t)/p)),n=Math.min(h.outHeight,(h.inHeight+b-t)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/x),l=o%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*p-b;for(let t=s;t<a;++t){const n=r+t*d-y;u+=v.get(l,e,n,i)*I.get(l,c,t,o)}}g.set(u,t,r,i,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},ZC={kernelName:De,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=r;XN([s,a],"depthwiseConv2DNativeBackpropInput");const h=Et(s.shape),p=Et(a.shape),d=xl(c,a.shape,o,i,l,u,!0),f=new ys(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[N,S,C]=p,{batchSize:T,filterHeight:$,filterWidth:E,inChannels:A,inHeight:R,inWidth:M,outChannels:F,outHeight:D,outWidth:_,strideHeight:O,strideWidth:L}=d,z=$-1-d.padInfo.top,P=E-1-d.padInfo.left,B=F/A;for(let t=0;t<T;++t)for(let e=0;e<A;++e)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(D,($+r)/O);for(let o=0;o<M;++o){const i=o-P,l=Math.max(0,Math.ceil(i/L)),u=Math.min(_,(E+i)/L);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=l;r<u;++r){const a=w*t+v*n+k*r,o=N*($-1-s)+S*(E-1-(r*L-i))+C*e;for(let t=0;t<B;++t)c+=x[a+(e*B+t)]*I[o+t]}}m[g*t+y*n+b*o+e]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},JC={kernelName:_e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=rt(r.shape),a=n.data.get(r.dataId).values,o=qa([s,s],r.dtype),i=o.values;for(let t=0;t<a.length;t++)i[t*s+t]=a[t];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,o.dtype,o.values)}},QC={kernelName:Oe,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:a,pad:o,dilations:i}=n,l=e,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=gl(r.shape,s.shape,a,o,"NHWC",i),T=rt(C),$=C.length,E=gt(r.dtype,T);for(let t=0;t<d;++t)for(let e=0;e<y;++e){const n=e*w-x.top;for(let a=0;a<b;++a){const o=a*v-x.left;for(let i=0;i<g;++i){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const a=n+e*N;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=o+n*S;if(d>=0&&d<m){const o=Ot([t,a,d,i],c,Et(r.shape)),f=Ot([e,n,i],p,Et(s.shape)),m=u[o]+h[f];m>l&&(l=m)}}}E[Ot([t,e,a,i],$,Et(C))]=l}}}return{dataId:l.write(ss(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},tT={kernelName:ze,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:o,pad:i,dilations:l}=n,u=e,c=Rt(r.shape,u.data.get(r.dataId).values),h=Rt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=gl(r.shape,s.shape,o,i,"NHWC",l);Q(a.rank===S.length,(()=>`Error in ${ze}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const C=Rt(S,u.data.get(a.dataId).values),T=Dt(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER,i=0,l=0;for(let e=0;e<v;++e){const r=n+e*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=s+n*N;if(u>=0&&u<f){const s=c[t][r][u][a]+h[e][n][a];s>o&&(o=s,i=e,l=n)}}}T[i][l][a]+=C[t][e][r][a]}}}return{dataId:u.write(ss(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},eT={kernelName:Le,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:a}=t,{strides:o,pad:i,dilations:l}=n,u=e,c=Rt(r.shape,u.data.get(r.dataId).values),h=Rt(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=gl(r.shape,s.shape,o,i,"NHWC",l);Q(a.rank===S.length,(()=>`Error in ${Le}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const C=Rt(S,u.data.get(a.dataId).values),T=Dt(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER,i=n<0?0:n,l=s<0?0:s;for(let e=0;e<v;++e){const r=n+e*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=s+n*N;if(u>=0&&u<f){const s=c[t][r][u][a]+h[e][n][a];s>o&&(o=s,i=r,l=u)}}}T[t][i][l][a]+=C[t][e][r][a]}}}return{dataId:u.write(ss(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},nT=oS(((t,e)=>t*e)),rT=SS(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),sT=NS(On,nT,rT),aT={kernelName:On,backendName:"cpu",kernelFunc:sT};function oT(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r;let i;XN(s,"sum"),i="bool"===s.dtype?kS({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):nS({inputs:{x:s},backend:n});const l=i.shape.length,u=dt(a,i.shape),c=Xu(u,l);let h=u,p=i;null!=c&&(p=US({inputs:{x:i},backend:n,attrs:{perm:c}}),h=Zu(h.length,l)),Ku("sum",h,p.shape.length);const[d,f]=ju(p.shape,h);let m=xS(n,d,As(p.dtype,"int32"));const g=rt(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let t=0;t<y.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=b[e+t];y[t]=n}if(o){const t=m;m=AS({inputs:{x:m},backend:n,attrs:{shape:qu(m.shape,u)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(p),m}const iT={kernelName:xr,backendName:"cpu",kernelFunc:oT},lT={kernelName:Be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,a=e,{allDims:o,summedDims:i,idDims:l}=kd(s,a.length);Nd(o.length,l,a);const{path:u,steps:c}=Sd(i,l),h=c.length;let p=null,d=o.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=Id(d,l[e]);let s;Cd(t)?s=a[e]:(s=US({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let t=0;t<r.length;++t)o.splice(r[t],0,1);at(s.shape,o)||(s=AS({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===p?p=s:(p=sT({inputs:{a:s,b:p},backend:n}),f.push(p))}t<h-1&&(u[t]>=0&&(p=oT({inputs:{x:p},backend:n,attrs:{axis:u[t]-(o.length-d),keepDims:!1}}),f.push(p)),d--)}for(const t of f)t!==p&&n.disposeIntermediateTensorInfo(t);return p}},uT={kernelName:We,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;XN([r,s],"eluGrad");const a=new Float32Array(rt(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let t=0;t<o.length;++t){const e=o[t];a[t]=e>=1?i[t]:i[t]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}},cT=oS(((t,e)=>t===e?1:0)),hT=NS(Ge,cT,null,"bool"),pT={kernelName:Ge,backendName:"cpu",kernelFunc:hT},dT=ad,fT=od,mT=id,gT=ld,yT=ud,bT=cd,xT=JN(Ue,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+dT*n);return e*(1-((((bT*r+yT)*r+gT)*r+mT)*r+fT)*r*Math.exp(-n*n))})),wT={kernelName:Ue,backendName:"cpu",kernelFunc:xT},vT=vC((t=>Math.exp(t))),kT=QN(He,vT),IT={kernelName:He,backendName:"cpu",kernelFunc:kT};function NT(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:a}=r,o=s.shape.length,i=s.shape.slice();let l=a;return a<0&&(Q(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),i.splice(l,0,1),AS({inputs:{x:s},backend:n,attrs:{shape:i}})}const ST={kernelName:je,backendName:"cpu",kernelFunc:NT},CT=vC((t=>Math.expm1(t))),TT=QN(qe,CT),$T={kernelName:qe,backendName:"cpu",kernelFunc:TT},ET=oS(((t,e)=>t/e)),AT=NS(Pe,ET),RT={kernelName:Pe,backendName:"cpu",kernelFunc:AT},MT=oS(((t,e)=>t-e)),FT=SS(((t,e,n,r)=>({real:t-n,imag:e-r}))),DT=NS(Er,MT,FT),_T={kernelName:Er,backendName:"cpu",kernelFunc:DT};function OT(t,e,n){const r=t.shape,s=r[0],a=r[1],o=n.data.get(t.dataId),i=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,u=[s,a],c=rt(u),h=mt("float32",c),p=mt("float32",c);for(let t=0;t<s;t++){const r=mC({inputs:{x:i},backend:n,attrs:{begin:[t,0],size:[1,a]}}),s=mC({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,a]}}),o=yS({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=LT(o,e,n),d=dd(u,c);for(let e=0;e<a;e++){const n=yd(d,e);h[t*a+e]=n.real,p[t*a+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=yS({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function LT(t,e,n){const r=rt(t.shape),s=n.data.get(t.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((i=r)&i-1)){const s=zT(a,o,r,e,n),i=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(i,"float32",s.real),e=n.makeTensorInfo(i,"float32",s.imag),a=n.makeTensorInfo([],"float32",rs(r,"float32")),o=nS({inputs:{x:a},backend:n}),l=RT.kernelFunc({inputs:{a:t,b:a},backend:n}),u=RT.kernelFunc({inputs:{a:e,b:o},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}return fd(function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let a=0,o=0;for(let r=0;r<e;r++){const i=wd(s*r,e,n),l=yd(t,r);a+=l.real*i.real-l.imag*i.imag,o+=l.real*i.imag+l.imag*i.real}n&&(a/=e,o/=e),bd(r,a,o,s)}return r}(dd(a,o),r,e));var i}function zT(t,e,n,r,s){if(1===n)return{real:t,imag:e};const a=dd(t,e),o=n/2,i=md(a),l=i.real,u=i.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),p=s.makeTensorInfo(c,"float32",u),d=yS({inputs:{real:h,imag:p},backend:s}),f=gd(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=yS({inputs:{real:b,imag:x},backend:s}),v=zT(l,u,o,r,s),k=v.real,I=v.imag,N=[k.length],S=s.makeTensorInfo(N,"float32",k),C=s.makeTensorInfo(N,"float32",I),T=yS({inputs:{real:S,imag:C},backend:s}),$=zT(m,g,o,r,s),E=$.real,A=$.imag,R=[E.length],M=s.makeTensorInfo(R,"float32",E),F=s.makeTensorInfo(R,"float32",A),D=yS({inputs:{real:M,imag:F},backend:s}),_=xd(n,r),O=[_.real.length],L=s.makeTensorInfo(O,"float32",_.real),z=s.makeTensorInfo(O,"float32",_.imag),P=yS({inputs:{real:L,imag:z},backend:s}),B=sT({inputs:{a:P,b:D},backend:s}),V=$S({inputs:{a:T,b:B},backend:s}),W=DT({inputs:{a:T,b:B},backend:s}),U=wS({inputs:{input:V},backend:s}),G=wS({inputs:{input:W},backend:s}),H=EC({inputs:{input:V},backend:s}),j=EC({inputs:{input:W},backend:s}),q=RC({inputs:[U,G],backend:s,attrs:{axis:0}}),K=RC({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const PT={kernelName:Ke,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=rt(r.shape),a=r.shape[r.shape.length-1],o=AS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=OT(o,!1,n),l=AS({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}};function BT(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:a}=n,o=a||Ct(s),i=gt(o,rt(r));return function(t,e,n){t.fill(e)}(i,s),e.makeTensorInfo(r,o,i)}const VT={kernelName:Xe,backendName:"cpu",kernelFunc:BT},WT={kernelName:Ye,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,a=mt(r.dtype,rt(r.shape)),[o,i,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let t=0;t<o;t++){const e=t*l*i*u;for(let t=0;t<i;t++){const n=t*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let i=0;i<u;i++){const h=[o,t,r,i][2],p=Math.round(l-h),d=e+n+s+i;let f=c[d];p>=0&&p<l&&(f=c[e+n+p*u+i]),a[d]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},UT=vC((t=>Math.floor(t))),GT=QN(Ze,UT),HT={kernelName:Ze,backendName:"cpu",kernelFunc:GT},jT=oS(((t,e)=>Math.floor(t/e))),qT=NS(Je,jT,null,"int32"),KT={kernelName:Je,backendName:"cpu",kernelFunc:qT},XT={kernelName:Gr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:o,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=FC({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(o){const t=m;m=$S({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=gS(n,m,d,i,f),n.disposeIntermediateTensorInfo(t)}return m}},YT={kernelName:Hr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:o,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=KC({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(o){const t=m;m=$S({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(d){const t=m;m=gS(n,m,d,i,f),n.disposeIntermediateTensorInfo(t)}return m}},ZT={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,a=rt(r.shape),o=s.shape,i=o[o.length-1],[l,u,c,h]=So(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const p=qa([u,c],r.dtype),d=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=[];let n=0;for(let r=0;r<i;r++){const s=d[t*i+r];n+=s*h[r],e.push(s)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let e=0;e<c;e++)p.values[t*c+e]=f[n*c+e]}return n.makeTensorInfo(l,p.dtype,p.values)}};function JT(t,e,n){const r=qa(n,t.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],o=s[2],i=e.locToIndex([a,o]);s[2]=e.values[i];const l=t.locToIndex(s);r.values[n]=t.values[l]}return r}const QT={kernelName:tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:a}=e,{axis:o,batchDims:i}=r;XN([s,a],"gatherV2");let l=i;null==i&&(l=0);const u=rt(a.shape),c=Rd(s,a,dt(o,s.shape)[0],l),h=AS({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=AS({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),d=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(p),m=JT(n.bufferSync(h),f,d);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},t$=oS(((t,e)=>t>e?1:0)),e$=NS(nn,t$,null,"bool"),n$={kernelName:nn,backendName:"cpu",kernelFunc:e$},r$=oS(((t,e)=>t>=e?1:0)),s$=NS(rn,r$,null,"bool"),a$={kernelName:rn,backendName:"cpu",kernelFunc:s$},o$={kernelName:an,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=rt(r.shape),a=r.shape[r.shape.length-1],o=AS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=OT(o,!0,n),l=AS({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),l}},i$=JN(ln,(t=>Number.isFinite(t)?1:0),"bool"),l$={kernelName:ln,backendName:"cpu",kernelFunc:i$},u$=JN(un,(t=>Math.abs(t)===1/0?1:0),"bool"),c$={kernelName:un,backendName:"cpu",kernelFunc:u$},h$=JN(cn,(t=>Number.isNaN(t)?1:0),"bool"),p$={kernelName:cn,backendName:"cpu",kernelFunc:h$},d$=oS(((t,e)=>t<e?1:0)),f$=NS(pn,d$,null,"bool"),m$={kernelName:pn,backendName:"cpu",kernelFunc:f$},g$=oS(((t,e)=>t<=e?1:0)),y$=NS(dn,g$,null,"bool"),b$={kernelName:dn,backendName:"cpu",kernelFunc:y$};function x$(t,e,n){const r=(e-t)/(n-1),s=Ft(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return s}const w$={kernelName:fn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:a}=n,o=x$(r,s,a);return e.makeTensorInfo([o.length],"float32",o)}},v$=vC((t=>Math.log(t))),k$=QN(mn,v$),I$={kernelName:mn,backendName:"cpu",kernelFunc:k$},N$=JN(gn,(t=>Math.log1p(t))),S$={kernelName:gn,backendName:"cpu",kernelFunc:N$},C$=oS(((t,e)=>t&&e)),T$=NS(yn,C$,null,"bool"),$$={kernelName:yn,backendName:"cpu",kernelFunc:T$},E$=JN(bn,(t=>t?0:1),"bool"),A$={kernelName:bn,backendName:"cpu",kernelFunc:E$},R$=oS(((t,e)=>t||e)),M$=NS(xn,R$,null,"bool"),F$={kernelName:xn,backendName:"cpu",kernelFunc:M$},D$={kernelName:vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:a,bias:o,alpha:i,beta:l}=r;XN(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,p=rt(s.shape),d=new Float32Array(p);function f(t){const e=t%u;let n=t-e+Math.max(0,e-a);const r=t-e+Math.min(e+a,c);let s=0;for(;n<=r;n++){const t=h[n];s+=t*t}return s}for(let t=0;t<p;t++){const e=f(t),n=h[t]*Math.pow(o+i*e,-l);d[t]=n}return n.makeTensorInfo(s.shape,s.dtype,d)}},_$={kernelName:kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:a,dy:o}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=r;XN(o,"LRNGrad");const h=rt(o.shape),p=o.shape[3],d=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let t=0;t<y;t++){const e=t%p,n=t-e+Math.max(0,e-i),r=t-e+Math.min(p,e+i+1);let s=0;for(let t=n;t<r;t++)s+=Math.pow(f[t],2);s=u*s+l;for(let e=n;e<r;e++){let n=-2*u*c*f[e]*m[t]/s;t===e&&(n+=Math.pow(s,-c)),n*=d[t],g[e]+=n}}return n.makeTensorInfo(o.shape,s.dtype,g)}};function O$(t,e,n,r){const s=mt(r,rt(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>a&&(a=e)}s[n]=a}return s}function L$(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:a,keepDims:o}=r,i=n;let l=s.shape;const u=l.length,c=dt(a,l);let h=c;const p=Xu(h,u);let d=i.data.get(s.dataId).values;if(null!=p){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[p[e]];d=WS(d,l,s.dtype,p,t),h=Zu(h.length,u),l=t}XN(s,"max"),Ku("max",h,u);const[f,m]=ju(l,h),g=O$(d,rt(m),f,s.dtype),y=i.write(g,f,s.dtype);let b=f;return o&&(b=qu(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const z$={kernelName:In,backendName:"cpu",kernelFunc:L$},P$=oS(((t,e)=>Math.max(t,e))),B$=NS(Nn,P$),V$={kernelName:Nn,backendName:"cpu",kernelFunc:B$},W$={kernelName:Sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;XN(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;Q(Tl(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=yl(s.shape,a,o,1,i,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&at(u.inShape,u.outShape))c=nS({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=Et(s.shape),r=oC(t,s.shape,s.dtype,e,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},U$={kernelName:Tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r;XN(s,"maxPool3d");const c=bl(s.shape,a,o,1,i,l,u),h=lC(n.data.get(s.dataId).values,s.shape,s.dtype,Et(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},G$={kernelName:$n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;XN([s,a],"maxPool3DGrad");const c=bl(a.shape,o,i,1,l,u),h=function(t,e){const n=qa(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,d=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=o;const w=Math.min(e.inDepth,u+b);for(let r=0;r<e.outHeight;++r){const u=r*s-d;let p=u;for(;p<0;)p+=i;const v=Math.min(e.inHeight,c+u);for(let s=0;s<e.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=l;const I=Math.min(e.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let e=x;e<w;e+=o){const n=e-b;for(let r=p;r<v;r+=i){const s=r-u;for(let a=k;a<I;a+=l){const o=a-d,i=t.get(m,e,r,a,g);i>=N&&(N=i,S=n*c*h+s*c+o)}}}n.set(S,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,N=qa(a.shape,"float32"),S=n.bufferSync(s);for(let t=0;t<c.batchSize;++t)for(let e=0;e<c.inChannels;++e)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-v,o=r-I,i=s-k;let l=0;for(let n=0;n<b;n+=m){const r=(a+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(o+s)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let o=0;o<w;o+=y){const u=(i+o)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*w-1-h.get(t,r,a,u,e)===n*x*w+s*w+o?1:0;0!==p&&(l+=S.get(t,r,a,u,e)*p)}}}N.set(l,t,n,r,s,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},H$={kernelName:Cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:o}=e,i=a;XN([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=yl(i.shape,l,u,1,c,h),d=n.data.get(i.dataId).values,f=qa(p.outShape,i.dtype,iC(d,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=qa(i.shape,"float32"),N=n.data.get(s.dataId).values,S=qa(s.shape,"float32",N);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-v;let o=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const i=(a+s)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const l=x*w-1-f.get(t,r,i,e)===n*w+s?1:0;0!==l&&(o+=S.get(t,r,i,e)*l)}}I.set(o,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},j$={kernelName:En,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=e,l=n;XN(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=yl(r.shape,s,a,[1,1],o),[h,p]=function(t,e,n,r,s){const a=oC(t,0,n,Et(e),s,"max"),o=iC(t,e,n,s,!0,r);return[a.values,o.values]}(u,r.shape,r.dtype,i,c),d=l.write(h,c.outShape,r.dtype),f=l.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},q$={kernelName:An,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r,i=dt(a,s.shape),l=rt(ju(s.shape,i)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=kS({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=AT({inputs:{a:h,b:c},backend:n});u.push(p);const d=oT({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:o}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},K$={kernelName:Rn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r;XN(s,"min");const i=dt(a,s.shape);let l=i;const u=Xu(l,s.shape.length);let c=s;null!=u&&(c=US({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Zu(l.length,s.shape.length)),Ku("min",l,c.shape.length);const[h,p]=ju(c.shape,l),d=rt(p),f=Ft(rt(h),c.dtype),m=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*d;let n=m[e];for(let t=0;t<d;++t){const r=m[e+t];r<n&&(n=r)}f[t]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const t=AS({inputs:{x:g},backend:n,attrs:{shape:qu(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},X$=oS(((t,e)=>Math.min(t,e))),Y$=NS(Mn,X$),Z$={kernelName:Mn,backendName:"cpu",kernelFunc:Y$},J$={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,mode:o}=r;XN(s,"mirrorPad");const i=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=a.map((t=>t[0])),u=a.map(((t,e)=>t[0]+s.shape[e])),c="reflect"===o?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=Et(s.shape),f=rt(i),m=i.length,g=Et(i),y=mt(s.dtype,f);for(let t=0;t<f;t++){let e=Lt(t,m,g);for(let t=0;t<m;t++)e[t]<l[t]?e[t]=2*l[t]-e[t]-c:e[t]>=u[t]&&(e[t]=2*(u[t]-1)-e[t]+c);e=e.map(((t,e)=>t-l[e]));const n=Ot(e,p,d);y[t]=h[n]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},Q$=oS(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),tE=NS(Dn,Q$),eE={kernelName:Dn,backendName:"cpu",kernelFunc:tE};function nE(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:a}=r,o=s.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const l=dt([i],s.shape),u=L$({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=qu(u.shape,l),h=AS({inputs:{x:u},backend:n,attrs:{shape:c}}),p=DT({inputs:{a:s,b:h},backend:n}),d=kT({inputs:{x:p},backend:n}),f=oT({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=AS({inputs:{x:f},backend:n,attrs:{shape:c}}),g=AT({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const rE={kernelName:kr,backendName:"cpu",kernelFunc:nE},sE={kernelName:_n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:a,seed:o,normalized:i}=r;XN(s,"multinomial");const l=i?s:nE({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=Ft(rt(p),"int32");for(let t=0;t<u;++t){const e=t*c,n=new Float32Array(c-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const r=Ac.alea(o.toString()),s=t*a;for(let t=0;t<a;++t){const e=r();d[s+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){d[s+t]=r;break}}}return i||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function aE(t,e,n){const r=rs(-1,n);return nT([],e,r,t,n)}const oE={kernelName:Ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;XN(r,"neg");const s=n.data.get(r.dataId).values,[a,o]=aE(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}},iE=lp,lE={kernelName:Pn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r;XN(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=iE(u,c,o,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},uE=up,cE={kernelName:Bn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=r;XN(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=uE(c,h,o,i,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},hE=cp,pE={kernelName:Vn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=r;XN(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=o,d=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=hE(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},dE=oS(((t,e)=>t!==e?1:0)),fE=NS(zn,dE,null,"bool"),mE={kernelName:zn,backendName:"cpu",kernelFunc:fE},gE={kernelName:Un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:a,onValue:o,offValue:i}=r;XN(s,"oneHot");const l=rt(s.shape),u=new Float32Array(l*a);u.fill(i);const c=n.data.get(s.dataId).values;for(let t=0;t<l;++t)c[t]>=0&&c[t]<a&&(u[t*a+c[t]]=o);return n.makeTensorInfo([...s.shape,a],"int32",u)}};function yE(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=wS({inputs:{input:r},backend:n}),e=yE({inputs:{x:t},backend:n}),s=EC({inputs:{input:r},backend:n}),a=yE({inputs:{x:s},backend:n}),o=yS({inputs:{real:e,imag:a},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return BT({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const bE={kernelName:Pr,backendName:"cpu",kernelFunc:yE},xE={kernelName:Wn,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=wS({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),a=EC({inputs:{input:s},backend:r}),o=yE({inputs:{x:a},backend:r}),i=yS({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return BT({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function wE(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return NT({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const a=e[0].shape,o=e[0].dtype;e.forEach((t=>{tt(a,t.shape,"All tensors passed to stack must have matching shapes"),Q(o===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],l=RC({inputs:e.map((t=>{const e=NT({inputs:{input:t},backend:n,attrs:{dim:s}});return i.push(e),e})),backend:n,attrs:{axis:s}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}const vE={kernelName:Gn,backendName:"cpu",kernelFunc:wE},kE={kernelName:Hn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,constantValue:o}=r;XN(s,"pad");const i=a.map(((t,e)=>t[0]+s.shape[e]+t[1])),l=a.map((t=>t[0])),u=n.data.get(s.dataId).values,c=rt(s.shape),h=s.shape.length,p=Et(s.shape),d=rt(i),f=i.length,m=Et(i),g=mt(s.dtype,d);0!==o&&g.fill(o);for(let t=0;t<c;t++)g[Ot(Lt(t,h,p).map(((t,e)=>t+l[e])),f,m)]=u[t];return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},IE=oS(((t,e)=>Math.pow(t,e))),NE=NS(qn,IE),SE={kernelName:qn,backendName:"cpu",kernelFunc:NE};function CE(t,e,n,r){const[s,a]=ju(t,r),o=As(e,"int32"),i=Ft(rt(s),o),l=rt(a);for(let t=0;t<i.length;++t){const e=t*l;let r=1;for(let t=0;t<l;++t)r*=n[e+t];i[t]=r}return{outVals:i,outShape:s,outDtype:o}}const TE={kernelName:Xn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r;XN(s,"prod");const i=s.shape.length,l=dt(a,s.shape),u=Xu(l,i);let c=l,h=s;const p=[];null!=u&&(h=US({inputs:{x:s},backend:n,attrs:{perm:u}}),p.push(h),c=Zu(c.length,i));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=CE(h.shape,h.dtype,d,c);let y=m;return o&&(y=qu(m,l)),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,f)}};function $E(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return Ft(0,r);const s=Ft(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+n;return s}const EE={kernelName:Yn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:a,step:o}=n,i=$E(r,s,o,a);return e.makeTensorInfo([i.length],a,i)}},AE=JN(Jn,(t=>1/t)),RE={kernelName:Jn,backendName:"cpu",kernelFunc:AE},ME={kernelName:rr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:a,halfPixelCenters:o,size:i}=r;XN(s,"resizeBilinear");const l=Et(s.shape),[u,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(rt([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let t=0;t<h;t++)for(let e=0;e<u;e++){let n;n=o?w*(e+.5)-.5:w*e;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(p-1,Math.ceil(n)),i=t*l[0]+r*l[1],u=t*l[0]+a*l[1];for(let t=0;t<c;t++){let e;e=o?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),r=e-n,a=Math.min(d-1,Math.ceil(e)),c=i+n*l[2],h=u+n*l[2],p=i+a*l[2],y=u+a*l[2];for(let t=0;t<f;t++){const e=m[c+t],n=m[h+t],a=e+(m[p+t]-e)*r,o=a+(n+(m[y+t]-n)*r-a)*s;g[x++]=o}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},FE={kernelName:sr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:a}=e,{alignCorners:o}=r;XN([a,s],"resizeBilinearGrad");const i=Et(s.shape),[l,u,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[o&&p>1?u-1:u,o&&d>1?c-1:c],g=[o&&p>1?p-1:p,o&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let t=0;t<l;t++){const e=t*i[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=e+r*i[1],o=e+s*i[1],l=n-r,p=1-l;for(let t=0;t<d;t++){const e=t*b,n=Math.floor(e),r=Math.min(Math.ceil(e),c-1),s=e-n,u=1-s,d=a+n*i[2],m=a+r*i[2],g=o+n*i[2],y=o+r*i[2],v=p*u,k=p*s,I=l*u,N=l*s;for(let t=0;t<h;t++){const e=x[w++];f[d+t]+=e*v,f[m+t]+=e*k,f[g+t]+=e*I,f[y+t]+=e*N}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},DE={kernelName:er,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:a,halfPixelCenters:o,size:i}=r;XN(s,"resizeNearestNeighbor");const l=Et(s.shape),[u,c]=i,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let t=0;t<h;t++){const e=t*l[0];for(let t=0;t<u;t++){const n=o?x*(t+.5):x*t;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*l[1];for(let t=0;t<c;t++){const e=o?w*(t+.5):w*t;let n=Math.min(d-1,a?Math.round(e):Math.floor(e));o&&(n=Math.max(0,n));const r=s+n*l[2];for(let t=0;t<f;t++){const e=m[r+t];g[v++]=e}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},_E={kernelName:nr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:a}=e,{alignCorners:o}=r;XN([a,s],"resizeNearestNeighborGrad");const i=Et(s.shape),l=Et(a.shape),[u,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[o&&d>1?c-1:c,o&&f>1?h-1:h],b=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let t=0;t<u;t++){const e=t*i[0];for(let t=0;t<c;t++){const n=e+t*i[1],r=Math.floor(t*v),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*i[2],u=Math.floor(r*k),y=Math.floor(u-N/2);for(let n=0;n<p;n++){let i=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=d)continue;const p=e+u*l[1],m=u*x;if(t===Math.min(c-1,o?Math.round(m):Math.floor(m)))for(let t=0;t<N;t++){const e=t+y;if(e<0||e>=f)continue;const s=p+e*l[2],a=e*w;r===Math.min(h-1,o?Math.round(a):Math.floor(a))&&(i+=g[s+n])}}m[a+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},OE={kernelName:or,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:a}=r;XN(s,"reverse");const o=s.shape.length,i=dt(a,s.shape);if(0===o)return nS({inputs:{x:s},backend:n});const l=new ys(s.shape,s.dtype),u=n.bufferSync(s);for(let t=0;t<l.size;t++){const e=l.indexToLoc(t),n=e.slice();i.forEach((t=>n[t]=s.shape[t]-1-n[t])),l.set(u.get(...n),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},LE={kernelName:Wr,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:o}=e,i=n,l=mt(r.dtype,rt(r.shape)),[u,c,h,p]=r.shape,[d,f]=Zp(o,c,h),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let t=0;t<u;t++){const e=t*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let o=0;o<p;o++){const i=[u,t,r,o],b=i[2],x=i[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===o?255:a[o]),w>=0&&w<h&&v>=0&&v<c&&(k=y[e+v*(h*p)+w*p+o]),l[e+n+s+o]=k}}}}return{dataId:i.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},zE=JN(ir,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),PE={kernelName:ir,backendName:"cpu",kernelFunc:zE},BE=vC((t=>1/Math.sqrt(t))),VE=QN(lr,BE),WE={kernelName:lr,backendName:"cpu",kernelFunc:VE};function UE(t,e,n,r,s,a,o,i,l,u){const c=[r/s,s],h=t.values,p=e.values;if(0===r)return qa(n,e.dtype);const d=qa(c,e.dtype);d.values.fill(l);for(let t=0;t<a;t++){const a=[];let l=0;for(let e=0;e<o;e++){const n=h[t*o+e];a.push(n),l+=n*i[e]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?d.values[l*s+n]+=p[t*s+n]:d.values[l*s+n]=0===e.rank?p[0]:p[t*s+n]}return d}const GE={kernelName:ur,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:a}=e,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=$o(0,s,o),p=UE(n.bufferSync(s),n.bufferSync(a),o,h,u,l,i,c,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}},HE={kernelName:cr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:a}=e;XN([r,s,a],"select");const o=r.shape.length,i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=As(s.dtype,a.dtype),h=Ft(rt(s.shape),c);let p=0;const d=0===o||o>1||1===s.shape.length?1:rt(s.shape.slice(1));for(let t=0;t<i.length;t++)for(let e=0;e<d;e++)1===i[t]?h[p++]=l[t]:h[p++]=u[t];return n.makeTensorInfo(s.shape,c,h)}},jE=rd,qE=sd,KE=JN(hr,(t=>t>=0?qE*t:jE*(Math.exp(t)-1))),XE={kernelName:hr,backendName:"cpu",kernelFunc:KE},YE=JN(mr,(t=>t<0?-1:t>0?1:0)),ZE={kernelName:mr,backendName:"cpu",kernelFunc:YE},JE=JN(dr,(t=>Math.sin(t))),QE={kernelName:dr,backendName:"cpu",kernelFunc:JE},tA=JN(fr,(t=>Math.sinh(t))),eA={kernelName:fr,backendName:"cpu",kernelFunc:tA},nA=Math.log(1.1920928955078125e-7)+2,rA=JN(yr,(t=>{const e=t>-nA,n=t<nA,r=Math.exp(t);let s;return s=n?r:e?t:Math.log(1+r),s})),sA={kernelName:yr,backendName:"cpu",kernelFunc:rA},aA={kernelName:wr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,paddings:o}=r;XN([s],"spaceToBatchND");const i=rt(a),l=[[0,0]];l.push(...o);for(let t=1+a.length;t<s.shape.length;++t)l.push([0,0]);const u=kE.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Jp(u.shape,a,i,!1),h=Qp(c.length,a.length,!1),p=td(u.shape,a,i,!1),d=AS({inputs:{x:u},backend:n,attrs:{shape:c}}),f=US({inputs:{x:d},backend:n,attrs:{perm:h}}),m=AS({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function oA(t,e,n,r,s,a,o){const i=e[0],l=a[0],u=new Array(l),c=new Array(i),h=e[1];if(0===l){if(0!==i)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${i}`);return[gt(n,0),[0,h],gt(s,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let e=0;e<i;++e){const n=t[e*h];if(n<0)throw new Error(`indices(${e}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${e}, 0) is invalid: ${n} >= ${l}`);++f[n],p=p&&n>=d,d=n}let m=!0;for(let t=0;t<l;++t){const e=0===f[t];u[t]=e,m=m&&!e,f[t]=Math.max(f[t],1),t>0&&(f[t]+=f[t-1])}if(m&&p){const e=t,n=r;for(let t=0;t<i;++t)c[t]=t;return[e,[i,h],n,u,c]}{const e=f[l-1],a=gt(n,e*h),p=gt(s,e),d=new Array(l).fill(0);for(let e=0;e<i;++e){const n=t[e*h],s=d[n],o=(0===n?0:f[n-1])+s;d[n]++;for(let n=0;n<h;++n)a[o*h+n]=t[e*h+n];p[o]=r[e],c[e]=o}for(let t=0;t<l;++t)if(0===d[t]){const e=0===t?0:f[t-1];a[e*h+0]=t;for(let t=1;t<h;++t)a[e*h+t]=0;p[e]=o}return[a,[i,h],p,u,c]}}const iA={kernelName:Ir,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:a,defaultValue:o}=e;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[h,p,d,f,m]=oA(i,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function lA(t,e,n,r,s){const a=rt(r),o=e[0],i=s.length,l=[];let u=1,c=-1;for(let t=0;t<i;++t){const e=s[t];if(-1===e){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${t}`);c=t,l.push(1)}else{if(e<0)throw new Error(`size ${t} must be non-negative, not ${e}`);u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(a/u);if(u*t!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}\n          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${l}`);l[c]=t}const h=rt(l);if(h!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${l}`);const p=r.length,d=[];if(p>0){d[p-1]=1;for(let t=p-2;t>=0;--t)d[t]=d[t+1]*r[t+1]}const f=[];if(i>0){f[i-1]=1;for(let t=i-2;t>=0;--t)f[t]=f[t+1]*l[t+1]}const m=gt(n,o*i);for(let e=0;e<o;++e){let n=0;for(let r=0;r<p;++r)n+=t[e*p+r]*d[r];for(let t=0;t<i;++t)m[e*i+t]=Math.trunc(n/f[t]),n%=f[t]}return[m,[o,i],l]}const uA={kernelName:Nr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:a}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=lA(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},cA={kernelName:Sr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:a,defaultValue:o}=e,{outputShape:i}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=$o(0,s,i),d=UE(n.bufferSync(s),n.bufferSync(a),i,p,c,u,l,h,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(i,d.dtype,d.values)}},hA={kernelName:vr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:a,axis:o}=r,i=dt(o,s.shape)[0],l=$d(s,a,i),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((t=>{const e=[...c];e[i]=t;const r=mC({inputs:{x:s},backend:n,attrs:{begin:u,size:e}});return u[i]+=t,r}))}},pA=JN(br,(t=>Math.sqrt(t))),dA={kernelName:br,backendName:"cpu",kernelFunc:pA},fA={kernelName:Tr,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;XN(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let t=0;t<s.length;++t){const e=s[t];a[t]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},mA=oS(((t,e)=>{const n=t-e;return n*n})),gA=NS(Cr,mA),yA={kernelName:Cr,backendName:"cpu",kernelFunc:gA},bA=JN(Br,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),xA={kernelName:Br,backendName:"cpu",kernelFunc:bA};function wA(t,e,n,r){const s=qa(t,e.dtype);for(let t=0;t<s.size;t++){const a=s.indexToLoc(t),o=new Array(a.length);for(let t=0;t<o.length;t++)o[t]=a[t]*n[t]+r[t];s.set(e.get(...o),...a)}return s}const vA={kernelName:$r,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;XN(s,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Go(s.shape,a,o,i,l,u,c,h,p),x=AS({inputs:{x:s},backend:n,attrs:{shape:y}});let w;if(d){const t=mC({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=AS({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))w=n.makeTensorInfo(b,s.dtype,[]);else{const t=wA(b,n.bufferSync(x),m,f);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const v=AS({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},kA=JN(Ar,(t=>Math.tan(t))),IA={kernelName:Ar,backendName:"cpu",kernelFunc:kA},NA=JN(Rr,(t=>Math.tanh(t)));function SA(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=qa(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r}function CA(t,e,n,r,s){const a=e[e.length-1],[o,i]=[t.length/a,a],l=mt(n,o*r),u=mt("int32",o*r);for(let e=0;e<o;e++){const n=e*i,s=t.subarray(n,n+i),a=[];for(let t=0;t<s.length;t++)a.push({value:s[t],index:t});a.sort(((t,e)=>e.value-t.value));const o=e*r,c=l.subarray(o,o+r),h=u.subarray(o,o+r);for(let t=0;t<r;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=r,[qa(c,n,l),qa(c,"int32",u)]}function TA(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return K(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return K(0,n,e-1)}(t,e);case"nearest":return function(t,e){return K(0,t,e-1)}(t,e);case"constant":default:return function(t,e){return t}(t)}}function $A(t,e,n,r,s,a,o,i,l,u,c){return 0<=i&&i<e&&0<=l&&l<n?t[o*r+i*s+l*a+u]:c}function EA(t,e,n,r,s,a,o,i,l,u,c){return $A(t,e,n,r,s,a,o,Math.round(i),Math.round(l),u,c)}function AA(t,e,n,r,s,a,o,i,l,u,c){const h=Math.floor(i),p=Math.floor(l),d=h+1,f=p+1;return(d-i)*((f-l)*$A(t,e,n,r,s,a,o,h,p,u,c)+(l-p)*$A(t,e,n,r,s,a,o,h,f,u,c))+(i-h)*((f-l)*$A(t,e,n,r,s,a,o,d,p,u,c)+(l-p)*$A(t,e,n,r,s,a,o,d,f,u,c))}function RA(t,e,n,r){const s=dt(e,n)[0],a=[1,n[0],1];for(let t=0;t<s;t++)a[0]*=n[t];a[1]=n[s];for(let t=s+1;t<n.length;t++)a[2]*=n[t];const o={},i=new Int32Array(n[s]),l=new ys(a,r,t),u=[],c=1===a[0]&&1===a[2];for(let e=0;e<n[s];e++){let n;if(c)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)t.push(l.get(n,e,r));n=t.join(",")}if(void 0!==o[n])i[e]=o[n];else{const t=Object.keys(o).length;o[n]=t,i[e]=t,u.push(e)}}const h=a.slice();h[1]=Object.keys(o).length;const p=new ys(h,r);u.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,t,r),n,e,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:i}}const MA=[DS,OS,zS,BS,ES,VS,HS,jS,qS,KS,YS,JS,tC,rC,aC,uC,cC,hC,pC,FS,dC,yC,wC,IS,NC,CC,bS,TC,MC,_C,OC,DC,zC,PC,LC,VC,UC,GC,HC,jC,qC,XC,YC,ZC,JC,QC,eT,tT,RT,lT,eS,uT,pT,wT,IT,ST,$T,PT,VT,WT,HT,KT,XT,YT,ZT,QT,n$,a$,rS,o$,AC,l$,c$,p$,aS,m$,b$,w$,I$,S$,$$,A$,F$,D$,_$,V$,W$,U$,G$,H$,j$,z$,q$,K$,Z$,J$,eE,sE,aT,oE,lE,cE,pE,mE,gE,xE,vE,kE,SE,uS,TE,EE,vS,RE,hS,dS,RS,ME,FE,DE,_E,OE,LE,PE,WE,GE,HE,XE,mS,ZE,QE,eA,gC,rE,sA,aA,iA,uA,cA,hA,dA,fA,yA,xA,vA,_T,iT,IA,{kernelName:Rr,backendName:"cpu",kernelFunc:NA},{kernelName:Mr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:a}=r;XN(s,"tile");const o=SA(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},{kernelName:Fr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:a,sorted:o}=r;XN(s,"topk");const i=n.data.get(s.dataId).values,[l,u]=CA(i,s.shape,s.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},GS,{kernelName:Dr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:a}=e,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=n,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=Et(s.shape),b=y[0],x=y[1],w=y[2],v=mt(s.dtype,rt(g));v.fill(l);const k=r.data.get(s.dataId).values,I=r.data.get(a.dataId).values;for(let t=0;t<c;++t){const e=1===a.shape[0]?I:I.subarray(8*t,8*t+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<d;++s){let a;const u=e[6]*r+e[7]*n+1;if(0===u)continue;const c=(e[0]*r+e[1]*n+e[2])/u,d=(e[3]*r+e[4]*n+e[5])/u,f=TA(c,p,i),m=TA(d,h,i);switch(o){case"nearest":a=EA(k,h,p,b,x,w,t,m,f,s,l);break;case"bilinear":a=AA(k,h,p,b,x,w,t,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}v[t*b+n*x+r*w+s]=a}return r.makeTensorInfo(g,s.dtype,v)}return{dataId:r.write(v,g,s.dtype),shape:s.shape,dtype:s.dtype}}},{kernelName:Or,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;XN(a,"unique");const o=r.data.get(a.dataId).values,{outputValues:i,outputShape:l,indices:u}=RA(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Lr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s.shape.length,i=s.shape[a],l=new Array(o-1);let u=0;for(let t=0;t<o;t++)t!==a&&(l[u++]=s.shape[t]);const c=new Array(o).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(i);for(let t=0;t<p.length;t++){c[a]=t;const e=mC({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[t]=AS({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}},{kernelName:zr,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:a}=e,{numSegments:o}=r;XN(s,"unsortedSegmentSum");const i=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let t=0;t<u;++t){const e=NT({inputs:{input:c},backend:n,attrs:{dim:t+1}});c=e,l.push(e)}for(let t=0;t<o;++t){const e=rs(t,"int32"),r=n.makeTensorInfo([],"int32",e),a=hT({inputs:{a:r,b:c},backend:n}),o=kS({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=sT({inputs:{a:o,b:s},backend:n}),h=oT({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});i.push(h),l.push(r),l.push(a),l.push(o),l.push(u),l.push(h)}const h=wE({inputs:i,backend:n,attrs:{axis:0}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},bE];for(const t of MA)Zr(t);const FA={},DA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function _A(t){if(!(t in FA)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete FA[t]}),!1),1===t?e.getContext("webgl",DA)||e.getContext("experimental-webgl",DA):e.getContext("webgl2",DA)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;FA[t]=e}const e=FA[t];return e.isContextLost()?(delete FA[t],_A(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),FA[t])}var OA,LA,zA;function PA(t,e){return[e,t]}function BA(t){const e=rt(t);return lt(Math.ceil(e/4))}function VA(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function WA(t,e){const n=t;let r,s,a,o,i,l,u,c,h,p;return 2===Vt().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,a=t.RGBA,o=n.RGBA,i=t.RGBA,u=4,c=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),l=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function UA(t,e){const n=e();return Vt().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function GA(t){return!!(Vt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function HA(t,e){return QA(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(OA||(OA={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(LA||(LA={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(zA||(zA={}));const jA=/ERROR: [0-9]+:([0-9]+):/g;function qA(t,e){if(UA(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function KA(t,e,n,r,s,a,o){const i=t.getAttribLocation(e,n);return-1!==i&&(UA(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),UA(t,(()=>t.vertexAttribPointer(i,s,t.FLOAT,!1,a,o))),UA(t,(()=>t.enableVertexAttribArray(i))),!0)}function XA(t,e,n,r){UA(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),UA(t,(()=>t.activeTexture(t.TEXTURE0+n))),UA(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),UA(t,(()=>t.uniform1i(n,r)))}function YA(t,e,n){UA(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),UA(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function ZA(t,e){UA(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),UA(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function JA(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function QA(t,e,n){const r=UA(t,(()=>e()));if(null==r)throw new Error(n);return r}function tR(t,e=2){return rt(t.slice(0,t.length-e))}function eR(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function nR(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[tR(t),...eR(t)]),e}function rR(t){return t%2==0}function sR(t,e){if(at(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(rR(n)&&rR(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&rR(t[0])&&rR(e[0])}let aR,oR;function iR(t,e){return null!=t.getExtension(e)}function lR(t){try{if(null!=_A(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function uR(t){const e=WA(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),s}function cR(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Q("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const hR=Vt();function pR(){let t,e,n,r,s,a,o,i,l,u;return 2===Vt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",a="outputColor",o="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:l,defineRound:u}}function dR(t,e,n="index"){const r=Et(e);return r.map(((e,s)=>`int ${t[s]} = ${n} / ${e}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function fR(t){const e=Et(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}hR.registerFlag("HAS_WEBGL",(()=>hR.getNumber("WEBGL_VERSION")>0)),hR.registerFlag("WEBGL_VERSION",(()=>lR(2)?2:lR(1)?1:0)),hR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),hR.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===hR.get("WEBGL_VERSION"))),hR.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),hR.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),hR.registerFlag("WEBGL_PACK",(()=>hR.getBool("HAS_WEBGL"))),hR.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_PACK_CLIP",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_PACK_REDUCE",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_LAZILY_UNPACK",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_CONV_IM2COL",(()=>hR.getBool("WEBGL_PACK"))),hR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==aR){const e=_A(t);aR=e.getParameter(e.MAX_TEXTURE_SIZE)}return aR}(hR.getNumber("WEBGL_VERSION")))),hR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==oR){const e=_A(t);oR=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,oR)}(hR.getNumber("WEBGL_VERSION")))),hR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=hR.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=_A(t);return e=iR(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:iR(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),hR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>hR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Us())),hR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=_A(t);if(1===t){if(!iR(e,"OES_texture_float"))return!1}else if(!iR(e,"EXT_color_buffer_float"))return!1;return uR(e)}(hR.getNumber("WEBGL_VERSION")))),hR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!hR.getBool("WEBGL_FORCE_F16_TEXTURES")&&hR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),hR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=_A(t);if(1!==t){if(iR(e,"EXT_color_buffer_float"))return uR(e);const t="EXT_color_buffer_half_float";if(iR(e,t)){const n=e.getExtension(t);return function(t,e){const n=WA(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(s),a}(e,n)}return!1}return!!iR(e,"OES_texture_float")&&!!iR(e,"WEBGL_color_buffer_float")&&uR(e)}(hR.getNumber("WEBGL_VERSION")))),hR.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=hR.getNumber("WEBGL_VERSION"))&&null!=_A(t).fenceSync;var t})),hR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>hR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),hR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),hR.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Us()&&hR.getBool("IS_CHROME")?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}));const mR="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class gR{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=OA.DENSE;const e=BA(t),n=pR();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${dR(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class yR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=OA.DENSE;const e=BA(t),n=pR();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${dR(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class bR{constructor(t){this.variableNames=["A"],this.outTexUsage=LA.DOWNLOAD;const e=pR();this.outputShape=t,this.userCode=`\n      ${mR}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class xR{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=LA.DOWNLOAD;const e=pR();this.outputShape=t,this.userCode=`\n      ${mR}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class wR{constructor(t,e,n=!1){this.variableNames=["A"];const r=pR(),[s,a]=e;this.outputShape=t;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`\n      ${fR(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}class vR{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=pR(),[s,a]=e;this.outputShape=t;let o="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const i=2*e+n;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${i}] = values[0];\n              } else if(offset == 1) {\n                result[${i}] = values[1];\n              } else if(offset == 2) {\n                result[${i}] = values[2];\n              } else {\n                result[${i}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${fR(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${o}\n\n        ${r.output} = ${i};\n      }\n    `}}function kR(t,e,n,r,s,a){!function(t,e){const n=Vt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const o=function(t){return QA(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),i=t.TEXTURE_2D;return UA(t,(()=>t.bindTexture(i,o))),UA(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),UA(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),UA(t,(()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST))),UA(t,(()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST))),UA(t,(()=>t.texImage2D(i,0,r,e,n,0,s,a,null))),UA(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),o}function IR(t){return t.internalFormatFloat}function NR(t){return t.internalFormatHalfFloat}function SR(t){return t.downloadTextureFormat}function CR(t){return t.internalFormatPackedFloat}function TR(t){return t.internalFormatPackedHalfFloat}class $R{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Vt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){FA[t]=e}(e,t)):this.gl=_A(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Vt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=HA(this.gl,t),iR(this.gl,e))this.textureHalfFloatExtension=HA(this.gl,e);else if(Vt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),iR(this.gl,r))this.colorBufferHalfFloatExtension=HA(this.gl,r);else if(Vt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",iR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!iR(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(t){return function(t,e){const n=QA(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return UA(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),UA(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=QA(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return UA(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),UA(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return QA(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=WA(this.gl,this.textureHalfFloatExtension)}get debug(){return Vt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;UA(t,(()=>t.finish())),UA(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),UA(t,(()=>t.deleteFramebuffer(this.framebuffer))),UA(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),UA(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),UA(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=PA(e,n);return kR(t,s,a,IR(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=PA(e,n);return kR(t,s,a,NR(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=PA(e,n);return kR(t,s,a,SR(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){UA(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?UA(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):UA(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),UA(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a){let o,i,l;UA(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=t.UNSIGNED_BYTE,l=t.RGBA):(o=new Float32Array(n*r*4),i=t.FLOAT,l=a.internalFormatPackedFloat),o.set(s),UA(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,i,o))),UA(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=VA(e,n);return kR(t,s,a,TR(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=VA(e,n);return kR(t,s,a,CR(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(ZA(this.gl,this.framebuffer),this.outputTexture=null),UA(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,a]=PA(e,n),o=new Uint8Array(e*n*4);return UA(t,(()=>t.readPixels(0,0,s,a,r.downloadTextureFormat,t.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return function(t,e,n,r,s,a,o,i){const l=t,u=new Float32Array(function(t,e){const[n,r]=VA(t,e);return n*r*4}(a,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();UA(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const a=16*e*n;return UA(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),UA(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),UA(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Vt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return UA(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=QA(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(UA(t,(()=>t.shaderSource(n,e))),UA(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=jA.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),a=s.length.toString().length+2,o=s.map(((t,e)=>ct((e+1).toString(),a)+t));let i=0;for(let t=0;t<o.length;t++)i=Math.max(o[t].length,i);const l=o.slice(0,r-1),u=o.slice(r-1,r),c=o.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${ct(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t);null==this.vertexShader&&(this.vertexShader=function(t){const e=pR();return function(t,e){const n=QA(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(UA(t,(()=>t.shaderSource(n,e))),UA(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const r=function(t){return QA(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return UA(e,(()=>e.attachShader(r,this.vertexShader))),UA(e,(()=>e.attachShader(r,n))),function(t,e){if(UA(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&qA(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return UA(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),KA(t,e,"clipSpacePos",n,3,20,0)&&KA(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&UA(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&qA(this.gl,this.program),UA(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return QA(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),UA(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),XA(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=VA(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&qA(this.gl,this.program),JA(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),UA(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),UA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=HA(this.gl,2===Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await ht((()=>this.disposed||this.isQueryAvailable(t,Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||ht((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),YA(this.gl,t,this.framebuffer),this.debug&&JA(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(YA(this.gl,this.outputTexture,this.framebuffer),this.debug&&JA(this.gl)):ZA(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;YA(r,t,this.framebuffer),this.debug&&JA(r),this.outputTexture=t,UA(r,(()=>r.viewport(0,0,e,n))),UA(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),UA(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:ER}=g;function AR(t,e,n,r){const s=[];t.forEach((t=>{const e=rt(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))}));const a=s.join("\n"),o=t.map((t=>function(t,e,n=!1){let r="";r+=n?MR(t):RR(t);const s=t.shapeInfo.logicalShape,a=e.logicalShape;return s.length<=a.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,i=ER(t.shapeInfo.logicalShape,e.logicalShape),l=PR(o),u=o-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":o<2&&i.length>=1?"coords = 0;":i.map((t=>`coords.${h[t+u]} = 0;`)).join("\n");let p="";p=o<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${h[e+u]}`)).join(", ");let d="return outputValue;";const f=1===rt(t.shapeInfo.logicalShape),m=1===rt(e.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const t=a-2,e=a-1;i.indexOf(t)>-1&&i.indexOf(e)>-1?d="return vec4(outputValue.x);":i.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.texShape,o=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===l&&null==t.shapeInfo.flatOffset&&at(o,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=PR(l),c=ER(t.shapeInfo.logicalShape,e.logicalShape),h=l-i;let p;const d=["x","y","z","w","u","v"];p=0===i?"":l<2&&c.length>=1?"coords = 0;":c.map((t=>`coords.${d[t+h]} = 0;`)).join("\n");let f="";return f=l<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(t,e)),r}(t,e,r))).join("\n"),i=e.texShape,l=pR(),u=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${FR}\n    ${DR}\n    ${_R}\n  `}(l);return e.isPacked?(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(at(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),s=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),s=r*Math.ceil(t[t.length-2]/2);let a=s,o="",i="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],o=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+o,i=`b${e}, `+i;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${i});\n    }\n  `}(t,e)}}(e.logicalShape,i),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(l)):(c=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return at(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=dR(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=dR(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=dR(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=dR(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,i),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(p+=OR),[p,u,h,a,c,o,n].join("\n")}function RR(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,s]=t.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,o]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${o}, ${LR(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${zR(t)}\n      }\n    `;const r=t.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const o=LR(e);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&at(e,s)){const t=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=ft(e),i=a;if(i.length<e.length){const e=["row","col"];return`\n      ${RR(BR(t,i))}\n      float ${r}(int row, int col) {\n        return ${r}(${VR(e,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${zR(t)}\n      }\n    `;const l=s[0],u=s[1],c=LR(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:o,keptDims:i}=ft(e),l=o;if(l.length<e.length){const e=["row","col","depth"];return`\n        ${RR(BR(t,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${VR(e,i)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${zR(t)}\n      }\n    `;const u=t.shapeInfo.texShape,c=u[0],h=u[1],p=t.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${LR(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,o=e[1]*a,{newShape:i,keptDims:l}=ft(e);if(i.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${RR(BR(t,i))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${VR(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${s}, 1)));\n        ${zR(t)}\n      }\n    `;const u=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,h=c[0],p=c[1];if(p===o&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${LR(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],a=e[3]*s,o=e[2]*a,i=e[1]*o,{newShape:l,keptDims:u}=ft(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${RR(BR(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${VR(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${a}, ${s})) +\n          depth3;\n        ${zR(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${LR(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=ft(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${RR(BR(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${VR(e,a)});\n      }\n    `}const o=e[5],i=e[4]*o,l=e[3]*i,u=e[2]*l,c=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${zR(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${LR(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function MR(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${pR().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=pR();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=s[0],o=s[1],i=pR();if(null!=s&&at(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${i.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===e[0]){const n=[1,2],s=["b","row","col"];return`\n        ${MR(BR(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${VR(s,n)});\n        }\n      `}const o=a[0],i=a[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${o}, ${i}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${pR().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],i=o[0],l=o[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],p=`b${t} * ${c} + `+p;return`\n    vec4 ${s}(${h}) {\n      int index = ${p};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${i});\n      return ${pR().texture2D}(${r}, uv);\n    }\n  `}(t)}}const FR="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DR="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_R="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",OR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function LR(t){return`offset${t}`}function zR(t){const e=t.name,n=rt(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function PR(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function BR(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function VR(t,e){return e.map((e=>t[e])).join(", ")}function WR(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],a=s.shape;if(!at(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const o=t.texShape,i=s.isUniform?null:s.texData.texShape;if(!at(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}const{addImpl:UR,bincountImpl:GR,bincountReduceImpl:HR,ceilImpl:jR,concatImpl:qR,expImpl:KR,expm1Impl:XR,floorImpl:YR,gatherV2Impl:ZR,greaterImpl:JR,lessImpl:QR,linSpaceImpl:tM,logImpl:eM,maxImpl:nM,maximumImpl:rM,minimumImpl:sM,multiplyImpl:aM,negImpl:oM,prodImpl:iM,rangeImpl:lM,rsqrtImpl:uM,simpleAbsImpl:cM,sliceImpl:hM,sparseFillEmptyRowsImpl:pM,sparseReshapeImpl:dM,stridedSliceImpl:fM,subImpl:mM,tileImpl:gM,topKImpl:yM,transposeImpl:bM,uniqueImpl:xM}=W;function wM(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function vM(t,e){return 1===e?[t]:wM(t,e)}class kM{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=vM("rc",e),r=PR(e),s=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let s=t-2;s<t;s++)r+=`${n[s]} >= ${e[s]}`,s<t-1&&(r+="||");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),o=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<t;n++)a=`${e[e.length-1-n]},`+a;n.push(a)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class IM{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${dR(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${fR(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class NM{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=CM(e,n),s=TM(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=SM(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let o;return r===zA.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===zA.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===zA.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===zA.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===zA.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=CM(n,r),a=TM(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=SM(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=Vt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=o):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function SM(t,e,n,r,s){const a=function(t,e){switch(t){case zA.PACKED_2X2_FLOAT32:return CR(e);case zA.PACKED_2X2_FLOAT16:return TR(e);case zA.UNPACKED_FLOAT32:return IR(e);case zA.UNPACKED_FLOAT16:return NR(e);case zA.PACKED_4X1_UNSIGNED_BYTE:return SR(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let o;if(s){const[e,n]=VA(t[0],t[1]);o=e*n}else{const[e,n]=PA(t[0],t[1]);o=e*n}return o*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,a)}function CM(t,e){if(t===LA.UPLOAD)return zA.PACKED_2X2_FLOAT32;if(t===LA.RENDER||null==t)return function(t){return Vt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?zA.PACKED_2X2_FLOAT32:zA.UNPACKED_FLOAT32:t?zA.PACKED_2X2_FLOAT16:zA.UNPACKED_FLOAT16}(e);if(t===LA.DOWNLOAD||t===LA.PIXELS)return zA.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function TM(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class $M{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const EM="return abs(x);",AM="return x;";class RM{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class MM{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=vM("rc",e),r=PR(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),o=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const FM=$h,DM={};class _M extends G{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Vt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=_A(Vt().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Vt().getNumber("WEBGL_VERSION"))in DM||(DM[e]={}),DM[e]),this.gpgpu=new $R(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new NM(this.gpgpu),this.numMBBeforeWarning=null==Vt().global.screen?1024:Vt().global.screen.height*Vt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new U(this,hi())}nextDataId(){return _M.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((Vt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Vt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:LA.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,r,s){if(Vt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:LA.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=e;if(null!=a){let e;e=i?new RM(o,AM):new $M(o,AM);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=as()),c="complex64"===r?dd(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(t),l&&(this.downloadWaitMs+=as()-u),this.convertAndCacheOnCPU(t,c)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=e;if(null!=s){let e;e=i?new RM(r,AM):new $M(r,AM);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Vt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Vt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Vt().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(e.texture,...BA(r))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);u=dd(t[0],t[1])}else if(null==c)u=this.getValuesFromTexture(t);else{const t=rt(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,t)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(t,u),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&hi().removeDataId(t,this),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>ls(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return qa(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!GA(n)){if(Vt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=rt(e);if(Vt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...BA(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Vt().getBool("WEBGL_PACK")&&!0===r,o=a?nR(e):e,i=a?new xR(o):new bR(o),l=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=nt(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=nt(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);o.kernelMs=Y(t),o.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:as(),endMs:null}}endTimer(t){return Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=as(),t)}async getQueryTime(t){if(Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(t),i=o&&o.origDataId||t,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=128){return Vt().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&rt(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){hd("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return FM(t.shape,e)}packedUnaryOp(t,e,n){const r=new RM(t.shape,e),s=this.compileAndRun(r,[t],n);return hi().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=cM(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,EM,t.dtype);const e=new $M(t.shape,EM),n=this.compileAndRun(e,[t]);return hi().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&It(n[0])){const s=n.map((t=>is(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return hi().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new MM(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new kM(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[tR(t.shape),...eR(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[tR(e),...eR(e)],a=new IM(s,n),o=this.runWebGLProgram(a,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=nR(r);let o;return o=n?new yR(a):new gR(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(o,[{shape:a,dtype:s,dataId:t}],s,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const a=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(a.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===OA.DENSE){const e=BA(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===rt(a.shape))return o.values=mt(a.dtype,0),a;const i=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&rt(e.shape)<=Vt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),i.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!sR(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),i.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:o,isUniform:!1},c=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s,a}(t,l,u),h=this.getAndSaveBinary(c,(()=>function(t,e,n,r){const s=e.userCode,a=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),o=a.map((t=>t.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=AR(a,i,s,e.packedInputs),u=t.createProgram(l);let c=null;const h=t.getUniformLocation(u,"NAN",!1);1===Vt().getNumber("WEBGL_VERSION")&&(c=t.getUniformLocation(u,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],s=!1;p[r]=t.getUniformLocation(u,r,s),p[`offset${r}`]=t.getUniformLocation(u,`offset${r}`,s)}return{program:e,source:l,webGLProgram:u,uniformLocations:p,inShapeInfos:o,outShapeInfo:i,infLoc:c,nanLoc:h}}(this.gpgpu,t,l,u))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(t,e,n,r,s){WR(e.inShapeInfos,n),WR([e.outShapeInfo],[r]);const a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,o[0],o[1]):t.setOutputMatrixTexture(a,o[0],o[1]),t.setProgram(e.webGLProgram),1===Vt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],a=e.uniformLocations[s],o=e.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(rt(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,l,u,r),i.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));const f=Vt().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const t=as();t-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!Vt().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Vt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=fi((()=>{if(!Vt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Vt().getBool("DEBUG");Vt().set("DEBUG",!1);const e=this.abs(Vi(1e-8)).dataSync()[0];if(Vt().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=e;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=as());let c=e.texShape;if(null==c&&(c=function(t,e=!1){let n=Vt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?X(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=ft(t);t=e.newShape}let r=rt(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=tR(t);let n=2,s=2;return t.length&&([n,s]=eR(t)),r=e*(n/2)*(s/2),lt(r).map((t=>2*t))}return lt(r)}(n,i),e.texShape=c),null!=s){const t=nR(n);let a,o=c[1],h=c[0];const p=s instanceof Uint8Array;i?([o,h]=VA(c[0],c[1]),a=new vR(t,[h,o],p)):a=new wR(t,[h,o],p);const d=this.makeTensorInfo([h,o],r);this.texData.get(d.dataId).usage=p?LA.PIXELS:LA.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),o,h,s);const f=!0,m=this.runWebGLProgram(a,[d],r,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(m.dataId),e.values=null,l&&(this.uploadWaitMs+=as()-u)}else{const t=this.acquireTexture(c,o,r,i);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*vt(e)}}_M.nextDataId=0,Gs()&&Ni("webgl",(()=>new _M),2);class OM{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Ji(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class LM{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ji(e,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===rt(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${PR(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=vM("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function zM(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const PM={kernelName:sn,backendName:"webgl",kernelFunc:zM};function BM(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=zM({inputs:{x:r},backend:n}),l=zM({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:l},a}const VM={kernelName:ye,backendName:"webgl",kernelFunc:BM},WM="return (a < 0.) ? b * a : a;",UM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",GM={kernelName:hn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:a}=r,o=n.makeTensorInfo([],"float32",rs(a,"float32")),i=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new LM(UM,s.shape,o.shape):new OM(WM,s.shape,o.shape),l=n.runWebGLProgram(i,[s,o],s.dtype);return n.disposeIntermediateTensorInfo(o),l}},HM="return (a < 0.) ? b * a : a;",jM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",qM={kernelName:Kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,a=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new LM(jM,r.shape,s.shape):new OM(HM,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function KM({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,l=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const t=i.texData.get(o.dataId),e=n(t.values,l);return i.makeTensorInfo(o.shape,l,e)}let u;return u=Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new RM(o.shape,e):new $M(o.shape,t),i.runWebGLProgram(u,[o],l)}}function XM({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:l,b:u}=o,c=i;if(r&&"complex64"===l.dtype){const e=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},o=new OM(t,l.shape,u.shape);return c.runWebGLProgram(o,[s,a],As(n.dtype,r.dtype))})),a=BM({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||As(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const t=c.texData.get(l.dataId),e=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,t.values,e.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let p;return p=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new LM(e,l.shape,u.shape,n):new OM(t,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function YM(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?jM:HM;if("leakyrelu"===t)return e?UM:WM;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class ZM{constructor(t,e,n,r=!1,s=!1,a=!1,o=null,i=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class JM{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ji(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const QM="return a * b;";function tF(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,a=As(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),a=new JM("return areal * breal - aimag * bimag;",r.shape,s.shape),o=new JM("return areal * bimag + aimag * breal;",r.shape,s.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,i,"float32"),u=n.runWebGLProgram(o,i,"float32"),c=BM({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[o,i]=aM(r.shape,s.shape,t.values,e.values,a),l=n.makeTensorInfo(i,a);return n.texData.get(l.dataId).values=o,l}let o;return o=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new LM(QM,r.shape,s.shape):new OM(QM,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const eF={kernelName:On,backendName:"webgl",kernelFunc:tF};function nF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:a}=r,o=n,i=rt(s.shape),l=pt(a,i),u=rt(l);Q(i===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(s.dataId);return!c.isPacked||sR(s.shape,l)||null!==c.texture&&sR(c.shape,l)?(o.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(t,e,n){const r=[tR(t.shape),...eR(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[tR(e),...eR(e)],o=new IM(a,r),i=n.runWebGLProgram(o,[s],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}(s,l,o)}const rF={kernelName:tr,backendName:"webgl",kernelFunc:nF};class sF{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let l="sumValue += dot(values, ones);";if(null!=e){const t=1/e;l=`sumValue += dot(values * ${ot(t)?t.toPrecision(2):t}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class aF{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=t;this.outputShape=[r,a];let o="0.0",i="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",i="min"):"max"===e&&(o="-1.0 / 1e-20",i="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function oF(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=Yp(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let a=t;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:l,outSize:u}=s[o];let c,h;c="mean"===n?0===o?new sF({windowSize:l,inSize:i,batchSize:t.shape[0],outSize:u},i):new sF({windowSize:l,inSize:i,batchSize:t.shape[0],outSize:u}):new aF({windowSize:l,inSize:i,batchSize:t.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],e),h.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class iF{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=PR(this.rank),s=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class lF{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=PR(this.rank),s=wM("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=s[t];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${i}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${i}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function uF(t,e,n){const r=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lF(t.shape,e):new iF(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function cF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r;return function(t,e,n,r){const s=e,a=t.shape.length,o=dt(s,t.shape);let i=o;const l=Xu(i,a),u=null!=l;let c=t;u&&(c=uF(t,l,r),i=Zu(i.length,a)),Ku("sum",i,a);const[h,p]=ju(c.shape,i);let d=h;n&&(d=qu(h,o));const f=rt(p),m=nF({inputs:{x:c},attrs:{shape:[rt(t.shape)/f,f]},backend:r}),g=oF(m,Rs(t.dtype),"sum",r),y=nF({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,o,n)}const hF={kernelName:xr,backendName:"webgl",kernelFunc:cF};function pF(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:a}=r,o=n,i=s.shape.length,l=new Array(i);for(let t=0;t<l.length;t++)l[t]=s.shape[a[t]];let u;if(o.shouldExecuteOnCPU([s])){const t=o.texData.get(s.dataId).values,e=bM(t,s.shape,s.dtype,a,l);u=o.makeTensorInfo(l,s.dtype),o.texData.get(u.dataId).values=e}else u=uF(s,a,o);return u}const dF={kernelName:_r,backendName:"webgl",kernelFunc:pF};function fF({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:l=null}){const u=t.shape.length,c=e.shape.length,h=n?t.shape[u-2]:t.shape[u-1],p=r?e.shape[c-1]:e.shape[c-2],d=n?t.shape[u-1]:t.shape[u-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=rt(m),b=rt(g);Q(u>=2&&c>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([d,f]);Q(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],v=r?[b,f,p]:[b,p,f],k=nF({inputs:{x:t},backend:s,attrs:{shape:w}}),I=nF({inputs:{x:e},backend:s,attrs:{shape:v}}),N=[k,I],S=Math.max(y,b),C=n?k.shape[1]:k.shape[2],T=null!=a,$=null!=o,E="leakyrelu"===l,A=null!=l?YM(l,!0):null;let R;if((1===d||1===f)&&C>1e3&&!1===(T||$||E||null!=A)){let t=k,e=I;n&&(t=pF({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),N.push(t)),r&&(e=pF({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(e));const a=1===f;let o=t;1!==f&&(o=nF({inputs:{x:t},backend:s,attrs:{shape:[S,C,1]}}),N.push(o));const i=1===f?2:1;let l=e;a&&(l=nF({inputs:{x:e},backend:s,attrs:{shape:[S,1,C]}}),N.push(l));const u=tF({inputs:{a:o,b:l},backend:s});R=cF({inputs:{x:u},backend:s,attrs:{axis:i,keepDims:!0}}),N.push(u)}else{const l=As(t.dtype,e.dtype),u=new ZM(w,v,[S,d,f],n,r,T,A,$,E),c=[k,I];if(null!=a&&c.push(a),$&&c.push(o),E){const t=s.makeTensorInfo([],"float32",rs(i,"float32"));c.push(t),N.push(t)}R=s.runWebGLProgram(u,c,l)}const M=nF({inputs:{x:R},backend:s,attrs:{shape:x}});N.push(R);for(const t of N)s.disposeIntermediateTensorInfo(t);return M}const mF={kernelName:Ur,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a,bias:o,preluActivationWeights:i}=e,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return fF({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:c})}},gF="return abs(x);",yF={kernelName:jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=cM(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RM(r.shape,gF):new $M(r.shape,gF),n.runWebGLProgram(s,[r],r.dtype)}},bF=KM({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),xF={kernelName:qt,backendName:"webgl",kernelFunc:bF},wF=KM({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),vF={kernelName:Kt,backendName:"webgl",kernelFunc:wF},kF="return a + b;",IF=XM({opSnippet:kF,packedOpSnippet:kF,supportsComplex:!0,cpuKernelImpl:UR}),NF={kernelName:Xt,backendName:"webgl",kernelFunc:IF};class SF{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class CF{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const TF={kernelName:Yt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return zM({inputs:{x:s[0]},backend:r});if(s.length>Vt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),a=t({inputs:s.slice(e),backend:r});return t({inputs:[n,a],backend:r})}const a=s.map((t=>t.dtype)).reduce(((t,e)=>As(t,e))),o=s.map((t=>t.shape)),i=Vt().getBool("WEBGL_PACK")?new CF(s[0].shape,o):new SF(s[0].shape,o);return r.runWebGLProgram(i,s,a)}},$F={kernelName:Zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r,i=s.shape.length,l=dt(a,s.shape);let u=l;const c=Xu(u,i);let h=s;null!=c&&(h=pF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Zu(u.length,i)),Ku("all",u,i);const[p,d]=ju(h.shape,u),f=nF({inputs:{x:h},backend:n,attrs:{shape:[-1,rt(d)]}}),m=oF(f,f.dtype,"all",n);let g;return g=nF(o?{inputs:{x:m},backend:n,attrs:{shape:qu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},EF={kernelName:Jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r,i=s.shape.length,l=dt(a,s.shape);let u=l;const c=Xu(u,i);let h=s;null!=c&&(h=pF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Zu(u.length,i)),Ku("any",u,i);const[p,d]=ju(h.shape,u),f=nF({inputs:{x:h},backend:n,attrs:{shape:[-1,rt(d)]}}),m=oF(f,f.dtype,"any",n);let g;return g=nF(o?{inputs:{x:m},backend:n,attrs:{shape:qu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class AF{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class RF{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Q(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,l=PR(i),u=vM("coords",i);let c,h;if(1===a){h=i+1;const t=PR(h);c=`\n        ${t} sourceLocR = ${t}(${u.join()}, 0);\n        ++${u[i-1]};\n        ${t} sourceLocG = ${t}(${u.join()}, 0);\n        ++${u[i-2]};\n        ${t} sourceLocA = ${t}(${u.join()}, 0);\n        --${u[i-1]};\n        ${t} sourceLocB = ${t}(${u.join()}, 0);\n        --${u[i-2]};`}else h=i,c=`\n        ${l} sourceLocR = coords;\n        ++${u[i-1]};\n        ${l} sourceLocG = coords;\n        ++${u[i-2]};\n        ${l} sourceLocA = coords;\n        --${u[i-1]};\n        ${l} sourceLocB = coords;\n        --${u[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((t=>"int "+t)),m=vM("sourceLocR",h-1).concat("inIdx.r"),g=vM("sourceLocG",h-1).concat("inIdx.g"),y=vM("sourceLocB",h-1).concat("inIdx.b"),b=vM("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${u[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function MF(t,e,n,r=null){let s=e.shape[0],a=e.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=Yp(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},l=new AF(i,n,null==r),u=[e];null!=r&&u.push(r);const c=t.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=MF(t,e,n,c);return t.disposeIntermediateTensorInfo(c),h}function FF(t,e,n,r=null){const s=null!=r?r.shape:e.shape,a=Yp(s[s.length-1]),o=new RF(s,a,n,null==r),i=null==r?[e]:[e,r],l=t.runWebGLProgram(o,i,"int32");if(l.shape.length===e.shape.length){const r=FF(t,e,n,l);return t.disposeIntermediateTensorInfo(l),r}return l}function DF(t,e,n,r){const s=[n];if(Ku("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!Vt().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[a,o]=ju(e.shape,s),i=rt(o),l=nF({inputs:{x:e},backend:t,attrs:{shape:[-1,i]}});n.push(l);const u=MF(t,l,r);n.push(u);const c=nF({inputs:{x:u},backend:t,attrs:{shape:a}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),c}return FF(t,e,r)}const _F={kernelName:Qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a}=r;let o=dt(a,s.shape);const i=Xu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=pF({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Zu(o.length,l.shape.length)),Ku("argMax",[o[0]],l.shape.length);const c=DF(n,l,o[0],"max");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},OF={kernelName:te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a}=r;let o=dt(a,s.shape);const i=Xu(o,s.shape.length);let l=s;const u=[];null!=i&&(l=pF({inputs:{x:s},backend:n,attrs:{perm:i}}),u.push(l),o=Zu(o.length,l.shape.length)),Ku("argMin",[o[0]],l.shape.length);const c=DF(n,l,o[0],"min");return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}},LF=KM({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),zF={kernelName:ee,backendName:"webgl",kernelFunc:LF},PF=KM({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),BF={kernelName:ne,backendName:"webgl",kernelFunc:PF},VF=KM({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),WF={kernelName:re,backendName:"webgl",kernelFunc:VF},UF=XM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),GF={kernelName:ae,backendName:"webgl",kernelFunc:UF},HF=KM({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),jF={kernelName:se,backendName:"webgl",kernelFunc:HF};class qF{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,o=t.strideHeight,i=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class KF{constructor(t,e,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,o=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const XF={kernelName:oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;cR(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;Q(Tl(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=yl(s.shape,a,o,1,i,l);if(1===u.filterWidth&&1===u.filterHeight&&at(u.inShape,u.outShape))return zM({inputs:{x:s},backend:n});const c=new qF(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},YF={kernelName:le,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:a,strides:o,pad:i,dimRoundingMode:l,dataFormat:u}=r,c=bl(s.shape,a,o,[1,1,1],i,l,u),h=new KF(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class ZF{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=i-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JF{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const QF={kernelName:ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=r,h=bl(o.shape,i,l,[1,1,1],u,c),p=new JF(h);return n.runWebGLProgram(p,[s],o.dtype)}},tD={kernelName:ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,o=a;cR([s,a],"avgPoolGrad");const{filterSize:i,strides:l,pad:u}=r,c=yl(o.shape,i,l,1,u),h=new ZF(c);return n.runWebGLProgram(h,[s],o.dtype)}},eD={kernelName:ce,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:a}=e,{transposeA:o,transposeB:i}=r;return fF({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class nD{constructor(t,e,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ji(t,e),Ji(t,n);let o="0.0";null!=r&&(Ji(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(Ji(t,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class rD{constructor(t,e,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ji(t,e),Ji(t,n);let o="vec4(0.0)";null!=r&&(Ji(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(Ji(t,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const sD={kernelName:Qe,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=t;Q(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Q(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Q(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=o&&(c=o.shape,u.push(o));let h=null;null!=i&&(h=i.shape,u.push(i));const p=Vt().getBool("WEBGL_PACK_NORMALIZATION")?new rD(r.shape,s.shape,a.shape,c,h,l):new nD(r.shape,s.shape,a.shape,c,h,l);return e.runWebGLProgram(p,u,u[0].dtype)}};class aD{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=PR(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return oD.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${oD[e]} = start[${e}] + coords.${oD[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const oD=["x","y","z","w","u","v"];class iD{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=PR(this.rank),n=vM("coords",this.rank),r=vM("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function lD(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,size:o}=r,[i,l]=Uo(s,a,o);if(Eo(s,i,l),0===rt(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=hM(t.values,i,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,e)}const{isPacked:u}=n.texData.get(s.dataId),c=Vo(s.shape,i,l);if(u||!c){const t=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iD(l):new aD(l),e=t.getCustomSetupFunc(i);return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,r){const s=r.texData.get(t.dataId),a=r.makeTensorInfo(n,t.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=t.dtype;let i=Wo(e,Et(t.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||t.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),a}(s,i,l,n)}const uD={kernelName:pr,backendName:"webgl",kernelFunc:lD},cD={kernelName:he,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,crops:o}=r;Q(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((t,e)=>t*e)),l=Jp(s.shape,a,i),u=Qp(l.length,a.length),c=td(s.shape,a,i),h=ed(o,a.length),p=nd(c,o,a.length),d=[],f=nF({inputs:{x:s},backend:n,attrs:{shape:l}}),m=pF({inputs:{x:f},backend:n,attrs:{perm:u}}),g=nF({inputs:{x:m},backend:n,attrs:{shape:c}}),y=lD({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},hD={kernelName:pe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:a}=e,{size:o}=r,i=n.readSync(s.dataId),l=n.readSync(a.dataId),u=GR(i,l,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,u)}},pD=XM({opSnippet:"return float(a != b);",dtype:"bool"}),dD={kernelName:zn,backendName:"webgl",kernelFunc:pD};function fD(t){const{inputs:e,backend:n}=t,{input:r}=e;return zM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const mD={kernelName:Zn,backendName:"webgl",kernelFunc:fD},gD={kernelName:fe,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return zM({inputs:{x:a},backend:r});const e=ic(a.shape),n=t({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=BM({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const e=fD({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(e),n}if(!xt(a.dtype,o)){const t=zM({inputs:{x:a},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:o}}if("int32"===o)return function(t,e){const n=new $M(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const t=r.makeTensorInfo([],"bool",mt("bool",1)),e=pD({inputs:{a,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},yD="return ceil(x);",bD=KM({opSnippet:yD,packedOpSnippet:yD,cpuKernelImpl:jR}),xD={kernelName:me,backendName:"webgl",kernelFunc:bD};class wD{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class vD{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const kD={kernelName:ge,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:a,clipValueMax:o}=r;let i;i=Vt().getBool("WEBGL_PACK_CLIP")?new vD(s.shape):new wD(s.shape);const l=i.getCustomSetupFunc(a,o);return n.runWebGLProgram(i,[s],s.dtype,l)}};class ID{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function ND(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const SD={kernelName:be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),a=new ID(r.shape),o=[ND(r,s.complexTensorInfos.real),ND(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}};class CD{constructor(t){this.outputShape=[],this.outputShape=Kp(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class TD{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Kp(t,e);const n=this.outputShape,r=n.length,s=PR(r),a=vM("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const i=new Array(t.length-1);i[0]=t[0][e];for(let n=1;n<i.length;n++)i[n]=i[n-1]+t[n][e];const l=o[e],u=o.slice(-2),c=o.join();let h=`if (${l} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let t=1;t<i.length;t++){const e=i[t-1];h+=`\n        if (${l} < ${i[t]}  && ${l} >= ${i[t-1]}) {\n          return getChannel(\n            getT${t}(${$D(o,l,e)}),\n            vec2(${$D(u,l,e)}));\n        }`}const p=i.length,d=i[i.length-1];h+=`\n        return getChannel(\n          getT${p}(${$D(o,l,d)}),\n          vec2(${$D(u,l,d)}));`,this.userCode=`\n      float getValue(${o.map((t=>"int "+t))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function $D(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function ED(t){const{inputs:e,backend:n}=t,{input:r}=e;return zM({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const AD={kernelName:on,backendName:"webgl",kernelFunc:ED};function RD(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>fD({inputs:{input:t},backend:n}))),s=t.map((t=>ED({inputs:{input:t},backend:n}))),a=RD(r,e,n),o=RD(s,e,n),i=BM({inputs:{real:a,imag:o},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),s.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(t);if("string"===r&&(s=!0),s){const s=t.map((t=>{const r=rt(t.shape.slice(e));return nF({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),o=Kp(s.map((t=>t.shape)),1),i=1===s[0].shape[0],l=qR(a,o,r,i),u=Kp(t.map((t=>t.shape)),e),c=n.makeTensorInfo(u,r,l);return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}if(t.length>Vt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),s=RD(t.slice(0,r),e,n),a=RD(t.slice(r),e,n),o=RD([s,a],e,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}if(Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const s=new TD(t.map((t=>t.shape)),e);return n.runWebGLProgram(s,t,r)}const{tensors2D:a,outShape:o}=function(t,e,n){const r=Kp(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>nF({inputs:{x:t},attrs:{shape:[-1,rt(t.shape.slice(e))]},backend:n}))),outShape:r}}(t,e,n),i=new CD(a.map((t=>t.shape))),l=n.runWebGLProgram(i,a,r);a.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=nF({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),u}function MD(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,a=dt(s,e[0].shape)[0],o=Kp(e.map((t=>t.shape)),a);if(0===rt(o))return n.makeTensorInfo(o,e[0].dtype,[]);const i=e.filter((t=>rt(t.shape)>0));return 1===i.length?zM({inputs:{x:i[0]},backend:n}):(qp(i.map((t=>t.shape)),a),RD(i,a,n))}const FD={kernelName:xe,backendName:"webgl",kernelFunc:MD};class DD{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,o=t.padInfo.left,i=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${l});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class _D{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OD{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:o,padInfo:i,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=i,f=s*r,m=pR(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${o} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${e[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function LD({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const l=t.shape,u=r.texData.get(t.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===p)&&c>1e3,y=l[2]%2!=0&&!!u.isPacked;if(!g&&Vt().getBool("WEBGL_LAZILY_UNPACK")&&Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const c=d?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:t.dataId,shape:[1,c,n.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Q(sR(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=nF({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const y=fF({a:h,b:g,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),b=r.texData.get(y.dataId);Q(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,b.shape=n.outShape,f=zM({inputs:{x:y},backend:r}),f.shape=n.outShape,m.push(y)}else{const u=nF({inputs:{x:t},backend:r,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=nF({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=fF({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o});f=nF({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const t of m)r.disposeIntermediateTensorInfo(t);return f}function zD({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=nF({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),w=nF({inputs:{x:e},backend:r,attrs:{shape:[1,m,rt(e.shape)/m]}});b.push(x),b.push(w);const v=new OD(y,x.shape,n),k=r.runWebGLProgram(v,[x],"float32"),I=nF({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(k),b.push(I);const N=null!=s,S=null!=a,C="leakyrelu"===i,T=i?YM(i,!0):null,$=new ZM(I.shape,w.shape,[1,g,n.outChannels],!0,!1,N,T,S,C),E=[I,w];if(s&&E.push(s),S&&E.push(a),C){const t=r.makeTensorInfo([],"float32",rs(o,"float32"));E.push(t),b.push(t)}const A=r.runWebGLProgram($,E,"float32"),R=nF({inputs:{x:A},backend:r,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(A);for(const t of b)r.disposeIntermediateTensorInfo(t);return R}const PD={kernelName:we,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:o,pad:i,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=$l(l),p=xl(s.shape,a.shape,o,u,i,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Vt().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])d=zD({x:s,filter:a,convInfo:p,backend:n});else{const t=new DD(p);d=n.runWebGLProgram(t,[s,a],"float32")}else d=LD({x:s,filter:a,convInfo:p,backend:n});const f=nF({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class BD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VD{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,i=n-1-t.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,o=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${s};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UD{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,s=t.strideDepth,a=t.strideHeight,o=t.strideWidth,i=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GD={kernelName:ve,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:o,pad:i,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=$l(l),p=xl(s.shape,c,o,1,i,u,!1,h),d=new BD(p);return n.runWebGLProgram(d,[s,a],"float32")}},HD={kernelName:ke,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{inputShape:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=$l(u),p=xl(o,a.shape,i,1,l,c,!1,h),d=new VD(p);return n.runWebGLProgram(d,[s,a],"float32")}},jD={kernelName:Ie,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:o,pad:i,dilations:l}=r,u=wl(s.shape,a.shape,o,l,i),c=new _D(u);return n.runWebGLProgram(c,[s,a],"float32")}},qD={kernelName:Ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:o,pad:i,filterShape:l}=r,u=wl(s.shape,l,o,1,i),c=new WD(u);return n.runWebGLProgram(c,[s,a],"float32")}},KD={kernelName:Se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{pad:o,strides:i,inputShape:l}=r,u=wl(l,a.shape,i,1,o),c=new UD(u);return n.runWebGLProgram(c,[s,a],"float32")}},XD=KM({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),YD={kernelName:Ce,backendName:"webgl",kernelFunc:XD},ZD=KM({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),JD={kernelName:Te,backendName:"webgl",kernelFunc:ZD};class QD{constructor(t,e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===r?1:0,[d,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(i-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const t_={kernelName:Ee,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:a,boxInd:o}=e,{cropSize:i,method:l,extrapolationValue:u}=r,c=new QD(s.shape,a.shape,i,l,u);return n.runWebGLProgram(c,[s,a,o],"float32")}};class e_{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,s=e?"0.0":`getX(${n_(r,"coords")})`,a=t[t.length-1];let o="",i="";e?(o=n?"end != "+(a-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${a}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${PR(r)} coords = getOutputCoords();\n        int end = ${r_(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${r_(r,"coords")} = idx;\n          val += getX(${n_(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function n_(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function r_(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const s_={kernelName:$e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,exclusive:o,reverse:i}=r,l=s.shape.length,u=Xu([a],l);let c=s;null!=u&&(c=pF({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=Zu(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const p=c.shape[h];let d=zM({inputs:{x:c},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){const e=new e_(c.shape,!1,i),r=e.getCustomSetupFunc(t),s=d;d=n.runWebGLProgram(e,[d],d.dtype,r),n.disposeIntermediateTensorInfo(s)}if(o){const t=new e_(c.shape,o,i),e=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=u){const t=pF({inputs:{x:d},backend:n,attrs:{perm:Yu(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),t}return d}},a_={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:a}=e,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const t=n.readSync(s.dataId),e=n.readSync(a.dataId),r=GR(t,e,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const t=n.bufferSync(s),e=n.bufferSync(a),r=HR(t,e,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class o_{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const i_={kernelName:Re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:a,dataFormat:o}=r;Q(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const i=s.shape[0],l="NHWC"===o?s.shape[1]:s.shape[2],u="NHWC"===o?s.shape[2]:s.shape[3],c="NHWC"===o?s.shape[3]:s.shape[1],h=l*a,p=u*a,d=c/(a*a),f=new o_("NHWC"===o?[i,h,p,d]:[i,d,h,p],a,o);return n.runWebGLProgram(f,[s],s.dtype)}};class l_{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.inHeight,o=t.inWidth,i=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${i}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${o}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class u_{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.outChannels/t.inChannels,o=t.inHeight,i=t.inWidth,l=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,h=t.strideWidth,p=t.dilationHeight,d=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,g=m;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let t=0;t<m;t++)y+=`\n          vec4 xTexelC${2*t};\n          int xTexelC${2*t}Ready;\n          vec4 xC${t};`;for(let t=0;t<f;t++){for(let t=0;t<m;t++)y+=`\n          xTexelC${2*t} = vec4(0.0);\n          xTexelC${2*t}Ready = 0;\n          xC${t} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${t*p};\n        if (xR >=0 && xR < ${o}) {\n      `;for(let e=0;e<(g+1)/2;e++){const n=2*e,r=n*d;if(y+=`\n          xC = xCCorner + ${r};\n          `,1===h){if(n<m&&(u%2==1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${i}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n              `,y+=1===d&&r>0?`\n                xC${n} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${i}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${i}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${r}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${r}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${i} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${i}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xC${n} = xTexelC${r};\n                `,r+1<m)){const t=u%2==0?X(d):d;d%2==0&&u%2==1||d%2!=0&&u%2!=1?(y+=`\n                  xCOffset = xC + ${u%2} + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${r+2}Ready == 0) {\n                    xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${i}) {\n                      xTexelC${r+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${r+2}Ready = 1;\n                  }\n                  `,d>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${r}Ready == 0) {\n                      xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${r}Ready = 1;\n                    }\n                    `),y+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.xy);\n                  `):y+=1===t?`\n                    xC${n+1} = xTexelC${r};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < ${i} && xTexelC${r+2}Ready == 0) {\n                      xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${i}) {\n                        xTexelC${r+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${r+2}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${r+2};\n                    `}}else r<m&&(u%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${i} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${i}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${i}) {\n                    xTexelC${r+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n              `,r+1<m&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${r+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${i} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${i}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${i} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${i}) {\n                    xTexelC${r+2}.zw = vec2(0.);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${r}.xy, xTexelC${r+2}.xy);\n              `,r+1<m&&(y+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n                `)));n<m&&(y+=`\n            wTexel = getW(${t}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<m&&(y+=`\n              wTexel = getW(${t}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let b="",x="";n&&(b=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}const c_={kernelName:Me,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:o,pad:i,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),Q(Tl(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const h=xl(s.shape,a.shape,o,c,i,u,!0);let p;return p=Vt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new u_(h):new l_(h),n.runWebGLProgram(p,[s,a],"float32")}};class h_{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class p_{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,o=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const d_={kernelName:Fe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:a}=e,{strides:o,dilations:i,pad:l,dimRoundingMode:u,filterShape:c}=r,h=xl(s.shape,c,o,i,l,u,!0),p=new h_(h);return n.runWebGLProgram(p,[s,a],"float32")}},f_={kernelName:De,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:a}=e,{strides:o,dilations:i,pad:l,dimRoundingMode:u,inputShape:c}=r,h=xl(c,a.shape,o,i,l,u,!0),p=new p_(h);return n.runWebGLProgram(p,[s,a],"float32")}};class m_{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const g_={kernelName:_e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],a=rt(r.shape),o=nF({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new m_(a),l=n.runWebGLProgram(i,[o],o.dtype),u=nF({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}};class y_{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=t,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const b_={kernelName:Oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a}=e,{strides:o,pad:i,dilations:l}=r,u=gl(s.shape,a.shape,o,i,"NHWC",l);let c;const h=new y_(u);c=n.runWebGLProgram(h,[s,a],"float32");const p=nF({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},x_={kernelName:Be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,a=e,{allDims:o,summedDims:i,idDims:l}=kd(s,a.length);Nd(o.length,l,a);const{path:u,steps:c}=Sd(i,l),h=c.length;let p=null,d=o.length;const f=[];for(let t=0;t<h;++t){for(const e of c[t]){const{permutationIndices:t,expandDims:r}=Id(d,l[e]);let s;Cd(t)?s=a[e]:(s=pF({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let t=0;t<r.length;++t)o.splice(r[t],0,1);at(s.shape,o)||(s=nF({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===p?p=s:(p=tF({inputs:{a:s,b:p},backend:n}),f.push(p))}t<h-1&&(u[t]>=0&&(p=cF({inputs:{x:p},backend:n,attrs:{axis:u[t]-(o.length-d),keepDims:!1}}),f.push(p)),d--)}for(const t of f)t!==p&&n.disposeIntermediateTensorInfo(t);return p}},w_=KM({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),v_={kernelName:Ve,backendName:"webgl",kernelFunc:w_},k_={kernelName:We,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,a=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new LM("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new OM("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},I_=XM({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),N_={kernelName:Ge,backendName:"webgl",kernelFunc:I_},S_=KM({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${ad};\n  float a1 = ${od};\n  float a2 = ${id};\n  float a3 = ${ld};\n  float a4 = ${ud};\n  float a5 = ${cd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),C_={kernelName:Ue,backendName:"webgl",kernelFunc:S_},T_="return exp(x);",$_=KM({opSnippet:T_,packedOpSnippet:T_,cpuKernelImpl:KR}),E_={kernelName:He,backendName:"webgl",kernelFunc:$_};function A_(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:a}=e,o=a.shape.length,i=a.shape.slice();let l=s;return s<0&&(Q(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+s+1),i.splice(l,0,1),nF({inputs:{x:a},backend:r,attrs:{shape:i}})}const R_={kernelName:je,backendName:"webgl",kernelFunc:A_},M_="return exp(x) - 1.0;",F_=KM({opSnippet:M_,packedOpSnippet:M_,cpuKernelImpl:XR}),D_={kernelName:qe,backendName:"webgl",kernelFunc:F_};class __{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function O_(t,e,n){const r=n.texData.get(t.dataId),s=rt(t.shape),a=t.shape[t.shape.length-1],o=nF({inputs:{x:t},backend:n,attrs:{shape:[s/a,a]}}),i=o.shape,l=new __("real",i,e),u=new __("imag",i,e),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=BM({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=nF({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(d),f}const L_={kernelName:Ke,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return O_(r,!1,n)}};class z_{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function P_(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Ct(s),"string"===a){const t=gt(a,rt(r));return t.fill(s),e.makeTensorInfo(r,a,t)}{const t=new z_(r,s),n=t.getCustomSetupFunc(s);return e.runWebGLProgram(t,[],a,n)}}const B_={kernelName:Xe,backendName:"webgl",kernelFunc:P_};class V_{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const W_={kernelName:Ye,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new V_(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},U_="return floor(x);",G_=KM({opSnippet:U_,packedOpSnippet:U_,cpuKernelImpl:YR}),H_={kernelName:Ze,backendName:"webgl",kernelFunc:G_},j_=XM({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),q_={kernelName:Je,backendName:"webgl",kernelFunc:j_};class K_{constructor(t){this.variableNames=["A"];const e=pR(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class X_{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=pR(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const Y_={kernelName:Vr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:a}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];(i||o)&&(null==Z_&&(Z_=document.createElement("canvas").getContext("2d")),Z_.canvas.width=l,Z_.canvas.height=u,Z_.drawImage(s,0,0,l,u),s=Z_.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=LA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=Vt().getBool("WEBGL_PACK")?new X_(h):new K_(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let Z_;const J_={kernelName:Gr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:o,preluActivationWeights:i}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=$l(c),g=xl(s.shape,a.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Vt().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=zD({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{const t=null!=o,e=null!=i,r="leakyrelu"===d,l=d?YM(d,!1):null,u=new DD(g,t,l,e,r),c=[s,a];if(o&&c.push(o),i&&c.push(i),r){const t=n.makeTensorInfo([],"float32",rs(f,"float32"));c.push(t),b.push(t)}y=n.runWebGLProgram(u,c,"float32")}else y=LD({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});const x=nF({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},Q_={kernelName:Hr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:a,bias:o,preluActivationWeights:i}=e,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),Q(Tl(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=xl(s.shape,a.shape,l,m,u,h,!0),y=Vt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?YM(p,y):null,x=[s,a],w=null!=o,v=null!=i,k="leakyrelu"===p;if(w&&x.push(o),v&&x.push(i),k){const t=n.makeTensorInfo([],"float32",rs(d,"float32"));x.push(t),f.push(t)}let I;I=y?new u_(g,w,b,v,k):new l_(g,w,b,v,k);const N=n.runWebGLProgram(I,x,"float32");return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class tO{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=PR(e.length),s=PR(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const eO={kernelName:en,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,a=s.shape,o=a[a.length-1],[i,l,u,c]=So(r,s),h=nF({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),p=nF({inputs:{x:r},backend:n,attrs:{shape:[rt(r.shape)/u,u]}}),d=new tO(o,c,[l,u]),f=n.runWebGLProgram(d,[p,h],p.dtype),m=nF({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};class nO{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=PR(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[e]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const rO={kernelName:tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:a}=e,{axis:o,batchDims:i}=r,l=Rd(s,a,dt(o,s.shape)[0],i),u=rt(a.shape),c=[],h=nF({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=nF({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(p);const d=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const t=n.bufferSync(p),e=n.bufferSync(h),r=ZR(e,t,d);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new nO(h.shape,d),m=n.runWebGLProgram(f,[h,p],h.dtype);c.push(m);const g=nF({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},sO=XM({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:JR,dtype:"bool"}),aO={kernelName:nn,backendName:"webgl",kernelFunc:sO},oO=XM({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),iO={kernelName:rn,backendName:"webgl",kernelFunc:oO},lO={kernelName:an,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return O_(r,!0,n)}},uO=KM({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),cO={kernelName:ln,backendName:"webgl",kernelFunc:uO},hO=KM({opSnippet:"return float(isinf(x));",dtype:"bool"}),pO={kernelName:un,backendName:"webgl",kernelFunc:hO},dO=KM({opSnippet:"return float(isnan(x));",dtype:"bool"}),fO={kernelName:cn,backendName:"webgl",kernelFunc:dO},mO=XM({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:QR,dtype:"bool"}),gO={kernelName:pn,backendName:"webgl",kernelFunc:mO},yO=XM({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),bO={kernelName:dn,backendName:"webgl",kernelFunc:yO},xO={kernelName:fn,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:a}=n,o=tM(r,s,a);return e.makeTensorInfo([o.length],"float32",o)}},wO=KM({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:eM}),vO={kernelName:mn,backendName:"webgl",kernelFunc:wO},kO=KM({opSnippet:"return log(1.0 + x);"}),IO={kernelName:gn,backendName:"webgl",kernelFunc:kO},NO=XM({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),SO={kernelName:yn,backendName:"webgl",kernelFunc:NO},CO=KM({opSnippet:"return float(!(x >= 1.0));"}),TO={kernelName:bn,backendName:"webgl",kernelFunc:CO},$O=XM({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),EO={kernelName:xn,backendName:"webgl",kernelFunc:$O};class AO{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=e,o=t[3]-1;let i;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class RO{constructor(t,e,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,o=t[3]-1;let i;this.outputShape=t;const l=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const MO={kernelName:vn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:a,bias:o,alpha:i,beta:l}=r,u=Vt().getBool("WEBGL_PACK_NORMALIZATION")?new RO(s.shape,a,o,i,l):new AO(s.shape,a,o,i,l);return n.runWebGLProgram(u,[s],s.dtype)}};class FO{constructor(t,e,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const DO={kernelName:kn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:a,dy:o}=e,{depthRadius:i,bias:l,alpha:u,beta:c}=r,h=new FO(s.shape,i,l,u,c);return n.runWebGLProgram(h,[s,a,o],s.dtype)}};function _O(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,l=dt(a,s.shape);let u=l;const c=Xu(u,i),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const t=n.texData.get(d.dataId).values,e=new Array(i);for(let t=0;t<e.length;t++)e[t]=s.shape[c[t]];const r=bM(t,s.shape,s.dtype,c,e);d=n.makeTensorInfo(e,s.dtype),n.texData.get(d.dataId).values=r}else d=uF(s,c,n);u=Zu(u.length,i)}Ku("max",u,i);const[f,m]=ju(d.shape,u);let g,y=f;if(o&&(y=qu(f,l)),p){const t=n.texData.get(d.dataId).values,e=nM(t,rt(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const s=rt(e),a=nF({inputs:{x:t},attrs:{shape:[rt(t.shape)/s,s]},backend:r}),o=oF(a,t.dtype,"max",r),i=nF({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const OO={kernelName:In,backendName:"webgl",kernelFunc:_O},LO=XM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:rM}),zO={kernelName:Nn,backendName:"webgl",kernelFunc:LO},PO={kernelName:Sn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;cR(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:l}=r;Q(Tl(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const u=yl(s.shape,a,o,1,i,l);if(1===u.filterWidth&&1===u.filterHeight&&at(u.inShape,u.outShape))return zM({inputs:{x:s},backend:n});const c=new qF(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},BO={kernelName:Tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:a,strides:o,pad:i,dataFormat:l,dimRoundingMode:u}=r,c=bl(s.shape,a,o,[1,1,1],i,u,l),h=new KF(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class VO{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,o=s-1-t.padInfo.top,i=a-1-t.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WO{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=i-1-t.padInfo.front,h=l-1-t.padInfo.top,p=u-1-t.padInfo.left,d=i*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const UO={kernelName:$n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a}=e,o=a,{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=r,h=bl(o.shape,i,l,[1,1,1],u,c),p=new KF(h,"max",!0),d=n.runWebGLProgram(p,[o],o.dtype),f=new WO(h),m=n.runWebGLProgram(f,[s,d],o.dtype);return n.disposeIntermediateTensorInfo(d),m}},GO={kernelName:Cn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:a,output:o}=e,i=a;cR([a,o],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=yl(i.shape,l,u,1,c,h),d=new qF(p,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new VO(p),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},HO={kernelName:En,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=e,l=n;Q(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];Q(Tl(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=yl(r.shape,s,a,u,o),[h,p]=function(t,e,n,r){let s=new qF(n,"max",!1);const a=r.runWebGLProgram(s,[t],"float32");return s=new qF(n,"max",!0,!0,e),[a,r.runWebGLProgram(s,[t],"float32")]}(r,i,c,l);return[h,p]}},jO={kernelName:An,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:a}=e,o=n,i=r.shape.length,l=dt(a,r.shape);let u=l;const c=Xu(u,i),h=null!=c,p=o.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const t=o.texData.get(f.dataId).values,e=new Array(i);for(let t=0;t<e.length;t++)e[t]=r.shape[c[t]];const n=bM(t,r.shape,r.dtype,c,e);f=o.makeTensorInfo(e,r.dtype),o.texData.get(f.dataId).values=n}else f=uF(r,c,o);d.push(f),u=Zu(u.length,i)}Ku("sum",u,i);const[m,g]=ju(f.shape,u);let y=m;s&&(y=qu(m,l));const b=function(t,e,n,r){const s=rt(e),a=nF({inputs:{x:t},attrs:{shape:[rt(t.shape)/s,s]},backend:r}),o=oF(a,"float32","mean",r),i=nF({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(f,g,y,o);for(const t of d)o.disposeIntermediateTensorInfo(t);return b}},qO={kernelName:Rn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r,i=s.shape.length,l=dt(a,s.shape);let u=l;const c=Xu(u,i);let h=s;null!=c&&(h=pF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Zu(u.length,s.shape.length)),Ku("min",u,i);const[p,d]=ju(h.shape,u),f=nF({inputs:{x:h},backend:n,attrs:{shape:[-1,rt(d)]}}),m=oF(f,f.dtype,"min",n);let g;return g=nF(o?{inputs:{x:m},backend:n,attrs:{shape:qu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},KO=XM({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sM}),XO={kernelName:Mn,backendName:"webgl",kernelFunc:KO};class YO{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=PR(r),a=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class ZO{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=PR(r),a=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=vM("rc",r),l=vM("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const JO={kernelName:Fn,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:a}=n,o=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZO(r.shape,s,a):new YO(r.shape,s,a);return e.runWebGLProgram(o,[r],r.dtype)}},QO=XM({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),tL={kernelName:Dn,backendName:"webgl",kernelFunc:QO};class eL{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const nL=XM({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),rL={kernelName:Pe,backendName:"webgl",kernelFunc:nL},sL="return a - b;",aL=XM({opSnippet:sL,packedOpSnippet:sL,supportsComplex:!0,cpuKernelImpl:mM}),oL={kernelName:Er,backendName:"webgl",kernelFunc:aL};function iL(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:a}=r,o=dt([a],s.shape),i=_O({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=qu(i.shape,o),u=nF({inputs:{x:i},backend:n,attrs:{shape:l}}),c=aL({inputs:{a:s,b:u},backend:n}),h=$_({inputs:{x:c},backend:n}),p=cF({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),d=nF({inputs:{x:p},backend:n,attrs:{shape:l}}),f=nL({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const lL={kernelName:kr,backendName:"webgl",kernelFunc:iL},uL={kernelName:_n,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:a,seed:o,normalized:i}=r,l=i?s:iL({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new eL(u,c,a),p=h.getCustomSetupFunc(o),d=n.runWebGLProgram(h,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),d}},cL="return -x;",hL={kernelName:Ln,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,s]=oM(t.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,e)}let s;return s=Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new RM(r.shape,cL):new $M(r.shape,cL),n.runWebGLProgram(s,[r],r.dtype)}},pL=lp,dL={kernelName:Pn,backendName:"webgl",kernelFunc:function(t){hd("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=pL(u,c,o,i,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},fL=up,mL={kernelName:Bn,backendName:"webgl",kernelFunc:function(t){hd("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=fL(c,h,o,i,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},gL=cp,yL={kernelName:Vn,backendName:"webgl",kernelFunc:function(t){hd("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=o,d=i,f=l,m=u,{selectedIndices:g,selectedScores:y}=gL(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class bL{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const xL={kernelName:Un,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:a,onValue:o,offValue:i}=r,l=rt(s.shape),u=new bL(l,a,o,i),c=nF({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const p=nF({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function wL(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=fD({inputs:{input:r},backend:n}),e=wL({inputs:{x:t},backend:n}),s=ED({inputs:{input:r},backend:n}),a=wL({inputs:{x:s},backend:n}),o=BM({inputs:{real:e,imag:a},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return P_({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const vL={kernelName:Pr,backendName:"webgl",kernelFunc:wL},kL={kernelName:Wn,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=fD({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r}),a=ED({inputs:{input:s},backend:r}),o=wL({inputs:{x:a},backend:r}),i=BM({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return P_({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},IL={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return A_({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const a=e[0].shape,o=e[0].dtype;e.forEach((t=>{tt(a,t.shape,"All tensors passed to stack must have matching shapes"),Q(o===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],l=MD({inputs:e.map((t=>{const e=A_({inputs:{input:t},backend:n,attrs:{dim:s}});return i.push(e),e})),backend:n,attrs:{axis:s}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};class NL{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=PR(r),a=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n      uniform float value;\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class SL{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,s=PR(r),a=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=vM("rc",r),l=vM("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===r?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n      uniform float value;\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}const CL=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:a,constantValue:o}=r,i=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SL(s.shape,a,o):new NL(s.shape,a,o),l=i.getCustomSetupFunc(o);return n.runWebGLProgram(i,[s],s.dtype,l)},TL={kernelName:Hn,backendName:"webgl",kernelFunc:CL},$L=XM({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),EL={kernelName:qn,backendName:"webgl",kernelFunc:$L},AL={kernelName:Xn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:a,keepDims:o}=r,i=s.shape.length,l=[],u=dt(a,s.shape);let c=u;const h=Xu(c,i);let p,d=s;if(null!=h&&(d=pF({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Zu(c.length,i),l.push(d)),Ku("prod",c,i),n.shouldExecuteOnCPU([d])){const t=n.texData.get(d.dataId).values,{outVals:e,outShape:r,outDtype:s}=iM(d.shape,d.dtype,t,c);p=n.makeTensorInfo(r,s,e)}else{const[t,e]=ju(d.shape,c),r=rt(e),a=nF({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),o=oF(a,Rs(s.dtype),"prod",n);p=nF({inputs:{x:o},backend:n,attrs:{shape:t}}),l.push(a),l.push(o)}if(o){l.push(p);const t=qu(p.shape,u);p=nF({inputs:{x:p},backend:n,attrs:{shape:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}},RL=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:a,dtype:o}=n,i=lM(r,s,a,o);return e.makeTensorInfo([i.length],o,i)},ML={kernelName:Yn,backendName:"webgl",kernelFunc:RL},FL=KM({opSnippet:"return 1.0 / x;"}),DL={kernelName:Jn,backendName:"webgl",kernelFunc:FL},_L=KM({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),OL={kernelName:Qn,backendName:"webgl",kernelFunc:_L},LL=KM({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),zL={kernelName:ar,backendName:"webgl",kernelFunc:LL};class PL{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,l]=t;this.outputShape=[a,e,n,l];const u=[r&&e>1?o-1:o,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class BL{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,l]=t;this.outputShape=[a,e,n,l];const u=[r&&e>1?o-1:o,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const VL={kernelName:rr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,u]=i,c=Vt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BL(s.shape,l,u,a,o):new PL(s.shape,l,u,a,o);return n.runWebGLProgram(c,[s],"float32")}};class WL{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,a,o]=t,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const UL={kernelName:sr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:a}=e,{alignCorners:o}=r,i=new WL(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class GL{constructor(t,e,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,l]=t;this.outputShape=[a,e,n,l];const u=[r&&e>1?o-1:o,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class HL{constructor(t,e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,l]=t;this.outputShape=[a,e,n,l];const u=[r&&e>1?o-1:o,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const jL={kernelName:er,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:a,halfPixelCenters:o,size:i}=r,[l,u]=i,c=Vt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new HL(s.shape,l,u,a,o):new GL(s.shape,l,u,a,o);return n.runWebGLProgram(c,[s],s.dtype)}};class qL{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,s]=e,[,a,o]=t,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],l=[n&&a>1?a-1:a,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const KL={kernelName:nr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:a}=e,{alignCorners:o}=r,i=new qL(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class XL{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=PR(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class YL{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=vM("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=PR(n);function i(n){const r=t.map(((r,s)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return i(t)}(r.slice())};\n          if(${s}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const ZL={kernelName:or,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:a}=r,o=s.shape.length,i=dt(a,s.shape);if(0===o)return zM({inputs:{x:s},backend:n});const l=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YL(s.shape,i):new XL(s.shape,i);return n.runWebGLProgram(l,[s],s.dtype)}};class JL{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],r=t[2];this.outputShape=t;let s="";s="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(t,e,n,r){return(s,a)=>{null==this.paramsLoc&&(this.paramsLoc=s.getUniformLocationNoThrow(a,"params")),s.gl.uniform4f(this.paramsLoc,t,e,n,r)}}}const QL={kernelName:Wr,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:a,center:o}=e,i=n,l=new JL(r.shape,a),[u,c]=Zp(o,r.shape[1],r.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(s),Math.cos(s));return i.runWebGLProgram(l,[r],r.dtype,h)}},tz=KM({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ez={kernelName:ir,backendName:"webgl",kernelFunc:tz},nz=KM({opSnippet:"return inversesqrt(x);",cpuKernelImpl:uM}),rz={kernelName:lr,backendName:"webgl",kernelFunc:nz};class sz{constructor(t,e,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const i=PR(s.length),l=PR(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const az={kernelName:ur,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:a}=e,{shape:o}=r,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=$o(0,s,o),p=[h/u,u];if(0===h)return n.makeTensorInfo(o,s.dtype);const d=nF({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),f=nF({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new sz(l,i,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=nF({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class oz{constructor(t,e,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<e.length;r++)o.push(`${n[r]}`),r<t&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=PR(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const iz={kernelName:cr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:a}=e,o=new oz(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],As(s.dtype,a.dtype))}},lz=KM({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${rd};\n  float scale = ${sd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),uz={kernelName:hr,backendName:"webgl",kernelFunc:lz},cz=KM({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),hz={kernelName:gr,backendName:"webgl",kernelFunc:cz},pz=KM({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),dz={kernelName:mr,backendName:"webgl",kernelFunc:pz},fz=KM({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),mz={kernelName:dr,backendName:"webgl",kernelFunc:fz},gz=KM({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),yz={kernelName:fr,backendName:"webgl",kernelFunc:gz},bz=KM({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),xz={kernelName:yr,backendName:"webgl",kernelFunc:bz},wz={kernelName:wr,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:a,paddings:o}=r;Q(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((t,e)=>t*e)),l=[[0,0]];l.push(...o);for(let t=1+a.length;t<s.shape.length;++t)l.push([0,0]);const u=[],c=CL({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Jp(c.shape,a,i,!1),p=Qp(h.length,a.length,!1),d=td(c.shape,a,i,!1),f=nF({inputs:{x:c},backend:n,attrs:{shape:h}}),m=pF({inputs:{x:f},backend:n,attrs:{perm:p}}),g=nF({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},vz={kernelName:Ir,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:a,defaultValue:o}=e;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[h,p,d,f,m]=pM(i,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((t=>Number(t))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},kz={kernelName:Nr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:a}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=dM(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},Iz={kernelName:Sr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:a,defaultValue:o}=e,{outputShape:i}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=$o(0,s,i),p=new sz(u,l,s.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,s,o],a.dtype),f=nF({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),f}},Nz={kernelName:vr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:a,axis:o}=r,i=dt(o,s.shape)[0],l=$d(s,a,i),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((t=>{const e=[...h];e[i]=t;const r=lD({inputs:{x:s},backend:n,attrs:{begin:c,size:e}});return c[i]+=t,r}))}},Sz=KM({opSnippet:"return sqrt(x);"}),Cz={kernelName:br,backendName:"webgl",kernelFunc:Sz},Tz=KM({opSnippet:"return x * x;"}),$z={kernelName:Tr,backendName:"webgl",kernelFunc:Tz},Ez="return (a - b) * (a - b);",Az=XM({opSnippet:Ez,packedOpSnippet:Ez}),Rz={kernelName:Cr,backendName:"webgl",kernelFunc:Az},Mz={kernelName:Br,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,a=new $M(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class Fz{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=PR(n.length),a=PR(n.length);let o="";if(1===r)o="coords * strides + begin";else{let t=0;o=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${t});\n      ${s} strides = ${s}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const Dz={kernelName:$r,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:a,end:o,strides:i,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Go(s.shape,a,o,i,l,u,c,h,p),x=nF({inputs:{x:s},backend:n,attrs:{shape:y}});let w;if(d){const t=lD({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=nF({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))w=n.makeTensorInfo(b,s.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const t=n.texData.get(x.dataId).values,e=qa(x.shape,x.dtype,t),r=fM(b,e,m,f);w=n.makeTensorInfo(b,x.dtype,r.values)}else{const t=new Fz(f,m,b);w=n.runWebGLProgram(t,[x],x.dtype)}const v=nF({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}},_z=KM({opSnippet:"return tan(x);"}),Oz={kernelName:Ar,backendName:"webgl",kernelFunc:_z},Lz=KM({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),zz={kernelName:Rr,backendName:"webgl",kernelFunc:Lz};class Pz{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=PR(this.rank),s=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function Bz(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const t=n.readSync(s.dataId),e="string"===s.dtype?t.map((t=>ls(t))):t,r=qa(s.shape,s.dtype,e),o=gM(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new Pz(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}const Vz={kernelName:Mr,backendName:"webgl",kernelFunc:Bz},Wz={kernelName:Fr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:a,sorted:o}=r,i=n.readSync(s.dataId),[l,u]=yM(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class Uz{constructor(t,e,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Gz={kernelName:Dr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:a}=e,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=r,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=new Uz(h,p,o,i,l,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}},Hz={kernelName:Or,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:a}=e;cR(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:l,indices:u}=xM(o,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}},jz={kernelName:Lr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,l=s.shape[a],u=new Array(i-1);let c=0;for(let t=0;t<i;t++)t!==a&&(u[c++]=o.shape[t]);const h=[],p=new Array(i).fill(0),d=o.shape.slice();d[a]=1;const f=new Array(l);for(let t=0;t<f.length;t++){p[a]=t;const e=lD({inputs:{x:o},backend:n,attrs:{begin:p,size:d}}),r=nF({inputs:{x:e},backend:n,attrs:{shape:u}});f[t]=r,h.push(e)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class qz{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,s=t.inSize,a=t.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Kz=[MO,DO,mF,yF,xF,vF,NF,TF,$F,EF,_F,OF,zF,BF,GF,WF,jF,YF,XF,QF,tD,eD,sD,cD,hD,gD,xD,kD,SD,VM,FD,GD,HD,PD,qD,KD,jD,YD,JD,t_,s_,a_,i_,d_,f_,c_,g_,b_,x_,v_,k_,N_,C_,E_,R_,D_,L_,B_,W_,H_,q_,Y_,J_,Q_,eO,rO,aO,iO,PM,lO,AD,cO,pO,fO,GM,gO,bO,xO,IO,vO,SO,TO,EO,OO,BO,PO,UO,GO,HO,zO,jO,qO,XO,JO,tL,uL,eF,hL,dL,mL,yL,dD,xL,kL,IL,TL,EL,qM,AL,ML,mD,rL,DL,zL,OL,rF,VL,UL,jL,KL,ZL,QL,ez,rz,az,iz,uz,hz,dz,mz,yz,uD,lL,xz,wz,vz,kz,Iz,Nz,Cz,$z,Rz,Mz,Dz,oL,hF,Oz,zz,Vz,Wz,Gz,dF,Hz,jz,{kernelName:zr,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:a}=e,{numSegments:o}=r,i=s.shape.length,l=[];let u=0;const c=Xu([u],i);let h=s;null!=c&&(h=pF({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Zu(1,i)[0]);const p=Ad(h.shape,u,o),d=rt([h.shape[u]]),f=nF({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=Rs(s.dtype),g=(t,e,r,s,a)=>{const o=t.shape[0],i=t.shape[1],u=Ed(i,a),c=new qz({windowSize:u,inSize:i,batchSize:o,numSegments:a},e),h=n.compileAndRun(c,[t,r],s);if(l.push(h),h.shape[1]===a)return h;const p=RL({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=Bz({inputs:{x:p},backend:n,attrs:{reps:[i/u]}});return l.push(p),l.push(d),g(h,e,d,s,a)},y=nF({inputs:{x:g(f,"unsortedSegmentSum",a,m,o)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const t=Yu(c);b=pF({inputs:{x:b},backend:n,attrs:{perm:t}})}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},vL];for(const t of Kz)Zr(t);const Xz={"tfjs-core":ai,"tfjs-backend-cpu":"3.6.0","tfjs-backend-webgl":"3.6.0","tfjs-data":KN,"tfjs-layers":ab,"tfjs-converter":VI,tfjs:"3.6.0"}},58485:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var r=n(23645),s=n.n(r)()((function(t){return t[1]}));s.push([t.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:0.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:white;opacity:0.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:0.8;background:linear-gradient(to right, #fff 10px, transparent 10px) 0 0,linear-gradient(to right, #fff 10px, transparent 10px) 0 100%,linear-gradient(to left, #fff 10px, transparent 10px) 100% 0,linear-gradient(to left, #fff 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, #fff 10px, transparent 10px) 0 0,linear-gradient(to bottom, #fff 10px, transparent 10px) 100% 0,linear-gradient(to top, #fff 10px, transparent 10px) 0 100%,linear-gradient(to top, #fff 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}\n",""]);const a=s},23645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=t(e);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var s={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(s[o]=!0)}for(var i=0;i<t.length;i++){var l=[].concat(t[i]);r&&s[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),e.push(l))}},e}},97676:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},69894:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},22810:(t,e,n)=>{"use strict";n.d(e,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},36377:(t,e,n)=>{var r=n(84832),s=n(68652),a=n(90801),o=n(92030),i=n(3618),l=n(89049),u=n(51971);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=o,u.xor4096=i,u.tychei=l,t.exports=u},84832:function(t,e,n){var r;!function(t,s,a){function o(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new o(t),r=e&&e.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.alea=l}(0,t=n.nmd(t),n.amdD)},89049:function(t,e,n){var r;!function(t,s,a){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.tychei=l}(0,t=n.nmd(t),n.amdD)},68652:function(t,e,n){var r;!function(t,s,a){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor128=l}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,s,a){function o(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,o,i=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,a=-32;a<l;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;t.w=o,t.X=i,t.i=s}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},92030:function(t,e,n){var r;!function(t,s,a){function o(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},90801:function(t,e,n){var r;!function(t,s,a){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new o(t),r=e&&e.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(e,n,e,s))||(s.exports=r):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},51971:(t,e,n)=>{var r;!function(s,a){var o,i=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(t,e,n){var r=[],p=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,b(s)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(l):(t=new Uint8Array(l),(i.crypto||i.msCrypto).getRandomValues(t)),b(t)}catch(t){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,b(s)]}}():t,3),r),d=new f(r),x=function(){for(var t=d.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=d.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,d),t.state=function(){return m(d,{})}),n?(a.random=t,e):t})(x,p,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);s<l;)o[s]=s++;for(s=0;s<l;s++)o[s]=o[a=p&a+t[s%n]+(e=o[s])],o[a]=e;(r.g=function(t){for(var e,n=0,s=r.i,a=r.j,o=r.S;t--;)e=o[s=p&s+1],n=n*l+o[p&(o[s]=o[a=p&a+e])+(o[a]=e)];return r.i=s,r.j=a,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function y(t,e){for(var n,r=t+"",s=0;s<r.length;)e[p&s]=p&(n^=19*e[p&s])+r.charCodeAt(s++);return b(e)}function b(t){return String.fromCharCode.apply(0,t)}if(a.seedrandom=d,y(a.random(),s),t.exports){t.exports=d;try{o=n(63906)}catch(t){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)},74412:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>o});var r=n(93379),s=n.n(r),a=n(58485);s()(a.Z,{insert:"head",singleton:!1});const o=a.Z.locals||{}},93379:(t,e,n)=>{"use strict";var r,s=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function o(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function i(t,e){for(var n={},r=[],s=0;s<t.length;s++){var i=t[s],l=e.base?i[0]+e.base:i[0],u=n[l]||0,c="".concat(l," ").concat(u);n[l]=u+1;var h=o(c),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==h?(a[h].references++,a[h].updater(p)):a.push({identifier:c,updater:m(p,e),references:1}),r.push(c)}return r}function l(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var o=s(t.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}return e}var u,c=(u=[],function(t,e){return u[t]=e,u.filter(Boolean).join("\n")});function h(t,e,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=c(e,s);else{var a=document.createTextNode(s),o=t.childNodes;o[e]&&t.removeChild(o[e]),o.length?t.insertBefore(a,o[e]):t.appendChild(a)}}function p(t,e,n){var r=n.css,s=n.media,a=n.sourceMap;if(s?t.setAttribute("media",s):t.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var d=null,f=0;function m(t,e){var n,r,s;if(e.singleton){var a=f++;n=d||(d=l(e)),r=h.bind(null,n,a,!1),s=h.bind(null,n,a,!0)}else n=l(e),r=p.bind(null,n,e),s=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else s()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=i(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var s=o(n[r]);a[s].references--}for(var l=i(t,e),u=0;u<n.length;u++){var c=o(n[u]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}n=l}}}},80383:(t,e,n)=>{t.exports=function(){return n(69855)('(()=>{var t={508:(t,e,r)=>{const{resize:a}=r(140);t.exports={buildImageList:t=>{const e=[];let r=100/Math.min(t.width,t.height);for(;;)if(e.push(r),r*=Math.pow(2,1/3),r>=.95){r=1;break}e.push(r),e.reverse();const i=[];for(let r=0;r<e.length;r++)t.width,e[r],t.height,e[r],i.push(Object.assign(a({image:t,ratio:e[r]}),{scale:e[r]}));return i},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),r=[],i=[];r.push(256/e),r.push(128/e);for(let e=0;e<r.length;e++)i.push(Object.assign(a({image:t,ratio:r[e]}),{scale:r[e]}));return i}}},589:(t,e,r)=>{const{Cumsum:a}=r(535),i=({image:t,cx:e,cy:r,sdThresh:a,imageDataCumsum:i,imageDataSqrCumsum:s})=>{if(e-6<0||e+6>=t.width)return null;if(r-6<0||r+6>=t.height)return null;let h=i.query(e-6,r-6,e+6,r+6);h/=169;let o=s.query(e-6,r-6,e+6,r+6);return o-=2*h*i.query(e-6,r-6,e+6,r+6),o+=169*h*h,o/169<a*a?null:(o=Math.sqrt(o),o)},s=t=>{const{image:e,cx:r,cy:a,vlen:i,tx:s,ty:h,imageDataCumsum:o,imageDataSqrCumsum:l}=t,{data:u,width:n,height:m}=e;if(r-6<0||r+6>=n)return null;if(a-6<0||a+6>=m)return null;let c=o.query(r-6,a-6,r+6,a+6),f=l.query(r-6,a-6,r+6,a+6),g=0,d=(a-6)*n+(r-6),p=(h-6)*n+(s-6),w=n-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=u[d]*u[p],d+=1,p+=1;d+=w,p+=w}let M=o.query(s-6,h-6,s+6,h+6);M/=169,g-=M*c;let y=f-c*c/169;return 0==y?null:(y=Math.sqrt(y),1*g/(i*y))};t.exports={extract:t=>{const{data:e,width:r,height:h,scale:o}=t,l=[r*h];for(let t=0;t<l.length;t++)l[t]=!1;const u=new Float32Array(e.length);for(let t=0;t<r;t++)u[t]=-1,u[r*(h-1)+t]=-1;for(let t=0;t<h;t++)u[t*r]=-1,u[t*r+r-1]=-1;for(let t=1;t<r-1;t++)for(let a=1;a<h-1;a++){let i=t+r*a,s=0,h=0;for(let t=-1;t<=1;t++)s+=e[i+r*t+1]-e[i+r*t-1],h+=e[i+r+t]-e[i-r+t];s/=768,h/=768,u[i]=Math.sqrt((s*s+h*h)/2)}const n=new Uint32Array(1e3);for(let t=0;t<1e3;t++)n[t]=0;const m=[-1,1,-r,r];let c=0;for(let t=1;t<r-1;t++)for(let e=1;e<h-1;e++){let a=t+r*e,i=!0;for(let t=0;t<m.length;t++)if(u[a]<=u[a+m[t]]){i=!1;break}if(i){let t=Math.floor(1e3*u[a]);t>999&&(t=999),t<0&&(t=0),n[t]+=1,c+=1,l[a]=!0}}const f=.02*r*h;let g=999,d=0;for(;g>=0&&(d+=n[g],!(d>f));)g--;for(let t=0;t<l.length;t++)l[t]&&1e3*u[t]<g&&(l[t]=!1);const p=[];for(let t=0;t<e.length;t++)p[t]=e[t]*e[t];const w=new a(e,r,h),M=new a(p,r,h),y=new Float32Array(e.length);for(let e=0;e<r;e++)for(let a=0;a<h;a++){const h=a*r+e;if(!l[h]){y[h]=1;continue}const o=i({image:t,cx:e,cy:a,sdThresh:5,imageDataCumsum:w,imageDataSqrCumsum:M});if(null===o){y[h]=1;continue}let u=-1;for(let r=-10;r<=10;r++){for(let i=-10;i<=10;i++){if(i*i+r*r<=4)continue;const h=s({image:t,cx:e+i,cy:a+r,vlen:o,tx:e,ty:a,imageDataCumsum:w,imageDataSqrCumsum:M});if(null!==h&&h>u&&(u=h,u>.95))break}if(u>.95)break}y[h]=u}return(t=>{let{image:e,featureMap:r,templateSize:a,searchSize:h,occSize:o,maxSimThresh:l,minSimThresh:u,sdThresh:n,imageDataCumsum:m,imageDataSqrCumsum:c}=t;const{data:f,width:g,height:d,scale:p}=e;o=Math.floor(Math.min(e.width,e.height)/10);const w=3*(2*a+1),M=Math.floor(g/w),y=Math.floor(d/w);let x=Math.floor(g/o)*Math.floor(d/o)+M*y;const q=[],C=new Float32Array(f.length);for(let t=0;t<C.length;t++)C[t]=r[t];let S=0;for(;S<x;){let t=l,r=-1,f=-1;for(let e=0;e<d;e++)for(let a=0;a<g;a++)C[e*g+a]<t&&(t=C[e*g+a],r=a,f=e);if(-1===r)break;const p=i({image:e,cx:r,cy:f,sdThresh:0,imageDataCumsum:m,imageDataSqrCumsum:c});if(null===p){C[f*g+r]=1;continue}if(p/(2*a+1)<n){C[f*g+r]=1;continue}let w=1,M=-1;for(let a=-h;a<=h;a++){for(let i=-h;i<=h;i++){if(i*i+a*a>h*h)continue;if(0===i&&0===a)continue;const o=s({image:e,vlen:p,cx:r+i,cy:f+a,tx:r,ty:f,imageDataCumsum:m,imageDataSqrCumsum:c});if(null!==o){if(o<w&&(w=o,w<u&&w<t))break;if(o>M&&(M=o,M>.99))break}}if(w<u&&w<t||M>.99)break}if(w<u&&w<t||M>.99)C[f*g+r]=1;else{q.push({x:r,y:f}),S+=1;for(let t=-o;t<=o;t++)for(let e=-o;e<=o;e++)f+t<0||f+t>=d||r+e<0||r+e>=g||(C[(f+t)*g+(r+e)]=1)}}return q})({image:t,featureMap:y,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:w,imageDataSqrCumsum:M})}}},535:t=>{t.exports={Cumsum:class{constructor(t,e,r){this.cumsum=[];for(let t=0;t<r;t++){this.cumsum.push([]);for(let r=0;r<e;r++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let r=1;r<e;r++)this.cumsum[0][r]=this.cumsum[0][r-1]+t[r];for(let a=1;a<r;a++)this.cumsum[a][0]=this.cumsum[a-1][0]+t[a*e];for(let a=1;a<r;a++)for(let r=1;r<e;r++)this.cumsum[a][r]=t[a*e+r]+this.cumsum[a-1][r]+this.cumsum[a][r-1]-this.cumsum[a-1][r-1]}query(t,e,r,a){let i=this.cumsum[a][r];return e>0&&(i-=this.cumsum[e-1][r]),t>0&&(i-=this.cumsum[a][t-1]),t>0&&e>0&&(i+=this.cumsum[e-1][t-1]),i}}}},140:t=>{t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:r,height:a}=t,i=Math.floor(r/2),s=Math.floor(a/2),h=new Float32Array(i*s),o=[0,1,r,r+1];for(let t=0;t<s;t++)for(let a=0;a<i;a++){let s=2*t*r+2*a,l=0;for(let t=0;t<o.length;t++)l+=e[s+o[t]];l*=.25,h[t*i+a]=l}return{data:h,width:i,height:s}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:r})=>{const{width:a,height:i,data:s}=t,h=2*t.width+(e?1:0),o=2*t.height+(r?1:0),l=new Float32Array(h*o);for(let t=0;t<h;t++){const e=.5*t-.25;let r=Math.floor(e),u=Math.ceil(e);r<0&&(r=0),u>=a&&(u=a-1);for(let n=0;n<o;n++){const o=.5*n-.25;let m=Math.floor(o),c=Math.ceil(o);m<0&&(m=0),c>=i&&(c=i-1);const f=(u-e)*(c-o)*s[m*a+r]+(u-e)*(o-m)*s[c*a+r]+(e-r)*(c-o)*s[m*a+u]+(e-r)*(o-m)*s[c*a+u];l[n*h+t]=f}}return{data:l,width:h,height:o}},resize:({image:t,ratio:e})=>{const r=Math.round(t.width*e),a=Math.round(t.height*e),i=new Uint8Array(r*a);for(let s=0;s<r;s++){let h=Math.round(1*s/e),o=Math.round(1*(s+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<a;l++){let a=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let n=0,m=0;for(let e=h;e<=o;e++)for(let r=a;r<=u;r++)n+=1*t.data[r*t.width+e],m+=1;i[l*r+s]=Math.floor(n/m)}}return{data:i,width:r,height:a}}}}},e={};function r(a){if(e[a])return e[a].exports;var i=e[a]={exports:{}};return t[a](i,i.exports,r),i.exports}(()=>{const{extract:t}=r(589),{buildTrackingImageList:e}=r(508);onmessage=t=>{const{data:r}=t;if("compile"===r.type){const{targetImages:t}=r,i=50/t.length;let s=0;const h=[];for(let r=0;r<t.length;r++){const o=t[r],l=e(o),u=i/l.length,n=a(l,(t=>{s+=u,postMessage({type:"progress",percent:s})}));h.push(n)}postMessage({type:"compileDone",list:h})}};const a=(e,r)=>{const a=[];for(let i=0;i<e.length;i++){const s=e[i],h=t(s),o={data:s.data,scale:s.scale,width:s.width,height:s.height,points:h};a.push(o),r(i)}return a}})()})();',n.p+"compiler.worker.prod.js")}},71077:(t,e,n)=>{t.exports=function(){return n(69855)('(()=>{var t={331:(t,e,r)=>{"use strict";r.r(e),r.d(e,{AbstractMatrix:()=>v,CHO:()=>tt,CholeskyDecomposition:()=>tt,EVD:()=>K,EigenvalueDecomposition:()=>K,LU:()=>H,LuDecomposition:()=>H,Matrix:()=>k,MatrixColumnSelectionView:()=>T,MatrixColumnView:()=>I,MatrixFlipColumnView:()=>A,MatrixFlipRowView:()=>q,MatrixRowSelectionView:()=>P,MatrixRowView:()=>C,MatrixSelectionView:()=>V,MatrixSubView:()=>N,MatrixTransposeView:()=>j,NIPALS:()=>et,Nipals:()=>et,QR:()=>$,QrDecomposition:()=>$,SVD:()=>L,SingularValueDecomposition:()=>L,WrapperMatrix1D:()=>z,WrapperMatrix2D:()=>F,correlation:()=>J,covariance:()=>B,default:()=>k,determinant:()=>X,inverse:()=>O,linearDependencies:()=>Q,pseudoInverse:()=>W,solve:()=>U,wrap:()=>D});const s=Object.prototype.toString;function o(t){return s.call(t).endsWith("Array]")}const n=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]>h&&(h=t[l]);return h},i=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]<h&&(h=t[l]);return h},h=function(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!o(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var s=i(t),h=n(t);if(s===h)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var l=r.min,u=void 0===l?r.autoMinMax?s:0:l,a=r.max,c=void 0===a?r.autoMinMax?h:1:a;if(u>=c)throw new RangeError("min option must be smaller than max option");for(var f=(c-u)/(h-s),m=0;m<t.length;m++)e[m]=(t[m]-s)*f+u;return e},l=" ".repeat(2),u=" ".repeat(4);function a(t,e={}){const{maxRows:r=15,maxColumns:s=10,maxNumSize:o=8}=e;return`${t.constructor.name} {\\n${l}[\\n${u}${function(t,e,r,s){const{rows:o,columns:n}=t,i=Math.min(o,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let o=0;o<h;o++)r.push(c(t.get(e,o),s));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==o&&l.push(`... ${o-e} more rows`),l.join(`\\n${u}`)}(t,r,s,o)}\\n${l}]\\n${l}rows: ${t.rows}\\n${l}columns: ${t.columns}\\n}`}function c(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const s=t.toPrecision(e-2);if(s.length<=e)return s;const o=t.toExponential(e-2),n=o.indexOf("e"),i=o.slice(n);return o.slice(0,e-i.length)+i}function f(t,e,r){let s=r?t.rows:t.rows-1;if(e<0||e>s)throw new RangeError("Row index out of range")}function m(t,e,r){let s=r?t.columns:t.columns-1;if(e<0||e>s)throw new RangeError("Column index out of range")}function g(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function w(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function p(t,e,r){return{row:d(t,e),column:y(t,r)}}function d(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for row indices");if(e.some((e=>e<0||e>=t.rows)))throw new RangeError("row indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function y(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for column indices");if(e.some((e=>e<0||e>=t.columns)))throw new RangeError("column indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function M(t,e,r,s,o){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(x("startRow",e),x("endRow",r),x("startColumn",s),x("endColumn",o),e>r||s>o||e<0||e>=t.rows||r<0||r>=t.rows||s<0||s>=t.columns||o<0||o>=t.columns)throw new RangeError("Submatrix indices are out of range")}function b(t,e=0){let r=[];for(let s=0;s<t;s++)r.push(e);return r}function x(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function E(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class v{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let s=new k(t,e);for(let o=0;o<t;o++)for(let t=0;t<e;t++)s.set(o,t,r[o*e+t]);return s}static rowVector(t){let e=new k(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new k(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new k(t,e)}static ones(t,e){return new k(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:s=Math.random}=r;let o=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)o.set(r,t,s());return o}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:s=0,max:o=1e3,random:n=Math.random}=r;if(!Number.isInteger(s))throw new TypeError("min must be an integer");if(!Number.isInteger(o))throw new TypeError("max must be an integer");if(s>=o)throw new RangeError("min must be smaller than max");let i=o-s,h=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=s+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let s=Math.min(t,e),o=this.zeros(t,e);for(let t=0;t<s;t++)o.set(t,t,r);return o}static diag(t,e,r){let s=t.length;void 0===e&&(e=s),void 0===r&&(r=e);let o=Math.min(s,e,r),n=this.zeros(e,r);for(let e=0;e<o;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new k(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return o}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new this(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return o}static checkMatrix(t){return v.isMatrix(t)?t:new k(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);t++}return s}isReducedEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(s=!1);t++}return s}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let s=e;for(let o=e;o<t.rows;o++)t.get(o,r)>t.get(s,r)&&(s=o);if(0===t.get(s,r))r++;else{t.swapRows(e,s);let o=t.get(e,r);for(let s=r;s<t.columns;s++)t.set(e,s,t.get(e,s)/o);for(let s=e+1;s<t.rows;s++){let o=t.get(s,r)/t.get(e,r);t.set(s,r,0);for(let n=r+1;n<t.columns;n++)t.set(s,n,t.get(s,n)-t.get(e,n)*o)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,s=r-1;for(;s>=0;)if(0===t.maxRow(s))s--;else{let o=0,n=!1;for(;o<r&&!1===n;)1===t.get(s,o)?n=!0:o++;for(let r=0;r<s;r++){let n=t.get(r,o);for(let i=o;i<e;i++){let e=t.get(r,i)-n*t.get(s,i);t.set(r,i,e)}}s--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let s=new k(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)s.setSubMatrix(this,this.rows*t,this.columns*e);return s}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){f(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return k.rowVector(this.getRow(t))}setRow(t,e){f(this,t),e=g(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){f(this,t),f(this,e);for(let r=0;r<this.columns;r++){let s=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,s)}return this}getColumn(t){m(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return k.columnVector(this.getColumn(t))}setColumn(t,e){m(this,t),e=w(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){m(this,t),m(this,e);for(let r=0;r<this.rows;r++){let s=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,s)}return this}addRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){f(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){m(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}maxIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)>t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}min(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}minIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)<t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}maxRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)>e&&(e=this.get(t,s),r[1]=s);return r}minRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)<e&&(e=this.get(t,s),r[1]=s);return r}maxColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)>e&&(e=this.get(s,t),r[0]=s);return r}minColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)<e&&(e=this.get(s,t),r[0]=s);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){v.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let s=0;s<e.length;s++)r+=e[s]*t[s];return r}mmul(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.columns,o=new k(e,s),n=new Float64Array(r);for(let i=0;i<s;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let s=0;s<r;s++)e+=this.get(t,s)*n[s];o.set(t,i,e)}}return o}strassen2x2(t){t=k.checkMatrix(t);let e=new k(2,2);const r=this.get(0,0),s=t.get(0,0),o=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(s+u),c=(i+l)*s,f=r*(n-u),m=l*(h-s),g=(r+o)*u,w=a+m-g+(o-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(s+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=k.checkMatrix(t);let e=new k(3,3);const r=this.get(0,0),s=this.get(0,1),o=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),v=r*c,S=(-r+l+u)*(c-m+p),R=(-r+l)*(m-p),I=(l+u)*(-c+m),T=(-o+u+a)*(w+d-y),A=(o-a)*(w-y),q=o*d,C=(u+a)*(-d+y),P=(-o+i+h)*(p+d-M),V=(o-h)*(p-M),N=(i+h)*(-d+M),j=v+q+s*g,z=(r+s+o-n-i-u-a)*w+x+E+v+T+q+C,F=v+S+I+(r+s+o-i-h-l-u)*p+q+P+N,D=b+i*(-c+f+g-w-p-d+M)+x+v+q+P+V,H=b+x+E+v+h*y,_=q+P+V+N+n*m,$=v+S+R+u*(-c+m+g-w-p-d+y)+T+A+q,L=T+A+q+C+l*f,O=v+S+R+I+a*M;return e.set(0,0,j),e.set(0,1,z),e.set(0,2,F),e.set(1,0,D),e.set(1,1,H),e.set(1,2,_),e.set(2,0,$),e.set(2,1,L),e.set(2,2,O),e}mmulStrassen(t){t=k.checkMatrix(t);let e=this.clone(),r=e.rows,s=e.columns,o=t.rows,n=t.columns;function i(t,e,r){let s=t.rows,o=t.columns;if(s===e&&o===r)return t;{let s=v.zeros(e,r);return s=s.setSubMatrix(t,0,0),s}}s!==o&&console.warn(`Multiplying ${r} x ${s} and ${o} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,o),l=Math.max(s,n);return e=i(e,h,l),function t(e,r,s,o){if(s<=512||o<=512)return e.mmul(r);s%2==1&&o%2==1?(e=i(e,s+1,o+1),r=i(r,s+1,o+1)):s%2==1?(e=i(e,s+1,o),r=i(r,s+1,o)):o%2==1&&(e=i(e,s,o+1),r=i(r,s,o+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(v.add(l,g),v.add(u,w),n,h),d=t(v.add(f,g),u,n,h),y=t(l,v.sub(c,w),n,h),M=t(g,v.sub(m,u),n,h),b=t(v.add(l,a),w,n,h),x=t(v.sub(f,l),v.add(u,c),n,h),E=t(v.sub(a,g),v.add(m,w),n,h),S=v.add(p,M);S.sub(b),S.add(E);let k=v.add(y,b),R=v.add(d,M),I=v.sub(p,d);I.add(y),I.add(x);let T=v.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(k,S.rows,0),T=T.setSubMatrix(R,0,S.columns),T=T.setSubMatrix(I,S.rows,S.columns),T.subMatrix(0,s-1,0,o-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.rows;t++){const o=this.getRow(t);o.length>0&&h(o,{min:e,max:r,output:o}),s.setRow(t,o)}return s}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.columns;t++){const o=this.getColumn(t);o.length&&h(o,{min:e,max:r,output:o}),s.setColumn(t,o)}return s}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),s=this.get(e,this.columns-1-r);this.set(e,r,s),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),s=this.get(this.rows-1-r,e);this.set(r,e,s),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.rows,o=t.columns,n=new k(e*s,r*o);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<s;r++)for(let h=0;h<o;h++)n.set(s*i+r,o*e+h,this.get(i,e)*t.get(r,h));return n}transpose(){let t=new k(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=S){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=S){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,s){M(this,t,e,r,s);let o=new k(e-t+1,s-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=s;e++)o.set(n-t,e-r,this.get(n,e));return o}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let s=new k(t.length,r-e+1);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.rows)throw new RangeError(`Row index out of range: ${t[o]}`);s.set(o,n-e,this.get(t[o],n))}return s}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let s=new k(r-e+1,t.length);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.columns)throw new RangeError(`Column index out of range: ${t[o]}`);s.set(n-e,o,this.get(n,t[o]))}return s}setSubMatrix(t,e,r){if((t=k.checkMatrix(t)).isEmpty())return this;M(this,e,e+t.rows-1,r,r+t.columns-1);for(let s=0;s<t.rows;s++)for(let o=0;o<t.columns;o++)this.set(e+s,r+o,t.get(s,o));return this}selection(t,e){let r=p(this,t,e),s=new k(t.length,e.length);for(let t=0;t<r.row.length;t++){let e=r.row[t];for(let o=0;o<r.column.length;o++){let n=r.column[o];s.set(t,o,this.get(e,n))}}return s}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new k(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=b(t.rows);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]+=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]+=t.get(r,s);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e+=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=b(t.rows,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]*=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]*=t.get(r,s);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e*=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:s=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(i,e)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,s);case"column":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(e,i)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,s);case void 0:if("number"!=typeof s)throw new TypeError("mean must be a number");return function(t,e,r){const s=t.rows,o=t.columns,n=s*o;let i=0,h=0,l=0;for(let e=0;e<s;e++)for(let s=0;s<o;s++)l=t.get(e,s)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,s);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[r])}(this,r),this;case"column":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[s])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let s=0;for(let e=0;e<t.columns;e++)s+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let s=0;for(let e=0;e<t.rows;e++)s+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[s])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let s=0;s<t.columns;s++)for(let o=0;o<t.rows;o++)r+=Math.pow(t.get(o,s),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return a(this,t)}}function S(t,e){return t-e}v.prototype.klass="Matrix","undefined"!=typeof Symbol&&(v.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return a(this)}),v.random=v.rand,v.randomInt=v.randInt,v.diagonal=v.diag,v.prototype.diagonal=v.prototype.diag,v.identity=v.eye,v.prototype.negate=v.prototype.neg,v.prototype.tensorProduct=v.prototype.kroneckerProduct;class k extends v{constructor(t,e){if(super(),k.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!Array.isArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let s=0;s<t;s++){if(r[s].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(r[s]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return f(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),f(this,t,!0),e=Float64Array.from(g(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){m(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let s=0;s<t;s++)r[s]=this.data[e][s];for(let s=t+1;s<this.columns;s++)r[s-1]=this.data[e][s];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),m(this,t,!0),e=w(this,e);for(let r=0;r<this.rows;r++){const s=new Float64Array(this.columns+1);let o=0;for(;o<t;o++)s[o]=this.data[r][o];for(s[o++]=e[r];o<this.columns+1;o++)s[o]=this.data[r][o-1];this.data[r]=s}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(v,k);class R extends v{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class I extends R{constructor(t,e){m(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}}class T extends R{constructor(t,e){e=y(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}}class A extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}}class q extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}}class C extends R{constructor(t,e){f(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}}class P extends R{constructor(t,e){super(t,(e=d(t,e)).length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}}class V extends R{constructor(t,e,r){let s=p(t,e,r);super(t,s.row.length,s.column.length),this.rowIndices=s.row,this.columnIndices=s.column}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class N extends R{constructor(t,e,r,s,o){M(t,e,r,s,o),super(t,r-e+1,o-s+1),this.startRow=e,this.startColumn=s}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}}class j extends R{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}}class z extends v{constructor(t,e={}){const{rows:r=1}=e;if(t.length%r!=0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let s=this._calculateIndex(t,e);return this.data[s]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class F extends v{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}function D(t,e){if(Array.isArray(t))return t[0]&&Array.isArray(t[0])?new F(t):new z(t,e);throw new Error("the argument is not an array")}class H{constructor(t){let e,r,s,o,n,i,h,l,u,a=(t=F.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,s=0;s<u;s++)n+=a.get(e,s)*l[s];l[e]-=n,a.set(e,r,l[e])}for(o=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[o])&&(o=e);if(o!==r){for(s=0;s<f;s++)i=a.get(o,s),a.set(o,s,a.get(r,s)),a.set(r,s,i);h=m[o],m[o]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=k.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,s,o,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(o=0;o<h;o++)for(r=o+1;r<h;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o));for(o=h-1;o>=0;o--){for(s=0;s<n;s++)i.set(o,s,i.get(o,s)/e.get(o,o));for(r=0;r<o;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let s=0;s<r;s++)e*=t.get(s,s);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o>e?s.set(o,e,t.get(o,e)):o===e?s.set(o,e,1):s.set(o,e,0);return s}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o<=e?s.set(o,e,t.get(o,e)):s.set(o,e,0);return s}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function _(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class ${constructor(t){let e,r,s,o,n=(t=F.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(s=0;s<h;s++){let t=0;for(e=s;e<i;e++)t=_(t,n.get(e,s));if(0!==t){for(n.get(s,s)<0&&(t=-t),e=s;e<i;e++)n.set(e,s,n.get(e,s)/t);for(n.set(s,s,n.get(s,s)+1),r=s+1;r<h;r++){for(o=0,e=s;e<i;e++)o+=n.get(e,s)*n.get(e,r);for(o=-o/n.get(s,s),e=s;e<i;e++)n.set(e,r,n.get(e,r)+o*n.get(e,s))}}l[s]=-t}this.QR=n,this.Rdiag=l}solve(t){t=k.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let s,o,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(o=0;o<h;o++){for(i=0,s=n;s<r;s++)i+=e.get(s,n)*l.get(s,o);for(i=-i/e.get(n,n),s=n;s<r;s++)l.set(s,o,l.get(s,o)+i*e.get(s,n))}for(n=u-1;n>=0;n--){for(o=0;o<h;o++)l.set(n,o,l.get(n,o)/this.Rdiag[n]);for(s=0;s<n;s++)for(o=0;o<h;o++)l.set(s,o,l.get(s,o)-l.get(n,o)*e.get(s,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,s=r.columns,o=new k(s,s);for(t=0;t<s;t++)for(e=0;e<s;e++)t<e?o.set(t,e,r.get(t,e)):t===e?o.set(t,e,this.Rdiag[t]):o.set(t,e,0);return o}get orthogonalMatrix(){let t,e,r,s,o=this.QR,n=o.rows,i=o.columns,h=new k(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==o.get(r,r)){for(s=0,t=r;t<n;t++)s+=o.get(t,r)*h.get(t,e);for(s=-s/o.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+s*o.get(t,r))}}return h}}class L{constructor(t,e={}){if((t=F.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,s=t.columns;const{computeLeftSingularVectors:o=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(o),u=Boolean(n),a=!1;if(r<s)if(i){h=t.transpose(),r=h.rows,s=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,s),f=Math.min(r+1,s),m=new Float64Array(f),g=new k(r,c),w=new k(s,s),p=new Float64Array(s),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,s),b=Math.max(0,Math.min(s-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=_(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<s;e++){if(t<M&&0!==m[t]){let s=0;for(let o=t;o<r;o++)s+=h.get(o,t)*h.get(o,e);s=-s/h.get(t,t);for(let o=t;o<r;o++)h.set(o,e,h.get(o,e)+s*h.get(o,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<s;e++)p[t]=_(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<s;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<s;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<s;e++){let s=-p[e]/p[t+1];for(let o=t+1;o<r;o++)h.set(o,e,h.get(o,e)+s*d[o])}}if(u)for(let e=t+1;e<s;e++)w.set(e,t,p[e])}}let E=Math.min(s,r+1);if(M<s&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let s=0;for(let o=t;o<r;o++)s+=g.get(o,t)*g.get(o,e);s=-s/g.get(t,t);for(let o=t;o<r;o++)g.set(o,e,g.get(o,e)+s*g.get(o,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=s-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<s;e++){let r=0;for(let o=t+1;o<s;o++)r+=w.get(o,t)*w.get(o,e);r=-r/w.get(t+1,t);for(let o=t+1;o<s;o++)w.set(o,e,w.get(o,e)+r*w.get(o,t))}for(let e=0;e<s;e++)w.set(e,t,0);w.set(t,t,1)}let v=E-1,S=0,R=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+R*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=R*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let o=_(m[r],e),n=m[r]/o,i=e/o;if(m[r]=o,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<s;t++)o=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,o)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let s=t;s<E;s++){let o=_(m[s],e),n=m[s]/o,i=e/o;if(m[s]=o,e=-i*p[s],p[s]=n*p[s],l)for(let e=0;e<r;e++)o=n*g.get(e,s)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,s)+n*g.get(e,t-1)),g.set(e,s,o)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),o=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+o)*(n-o)+i*i)/2,f=o*i*(o*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+o)*(h-o)+d,M=h*a;for(let e=t;e<E-1;e++){let o=_(y,M);0===o&&(o=Number.MIN_VALUE);let n=y/o,i=M/o;if(e!==t&&(p[e-1]=o),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<s;t++)o=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,o);if(o=_(y,M),0===o&&(o=Number.MIN_VALUE),n=y/o,i=M/o,m[e]=o,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)o=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,o)}p[E-2]=y,S+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=v;e++)w.set(e,t,-w.get(e,t));for(;t<v&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<s-1)for(let r=0;r<s;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let s=0;s<r;s++)e=g.get(s,t+1),g.set(s,t+1,g.get(s,t)),g.set(s,t,e);t++}S=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=s,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,s=this.s.length,o=k.zeros(s,s);for(let t=0;t<s;t++)Math.abs(this.s[t])<=r?o.set(t,t,0):o.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(o),l=i.rows,u=n.rows,a=k.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let o=0;o<s;o++)r+=h.get(t,o)*n.get(e,o);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(k.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,s=t.columns,o=new k(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<s;r++)Math.abs(this.s[r])>e&&o.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new k(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let s=0;s<h;s++)r+=o.get(t,s)*n.get(e,s);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let s=0,o=r.length;s<o;s++)r[s]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return k.diag(this.s)}}function O(t,e=!1){return t=F.checkMatrix(t),e?new L(t).inverse():U(t,k.eye(t.rows))}function U(t,e,r=!1){return t=F.checkMatrix(t),e=F.checkMatrix(e),r?new L(t).solve(e):t.isSquare()?new H(t).solve(e):new $(t).solve(e)}function X(t){if((t=k.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let e,r,s,o;if(2===t.columns)return e=t.get(0,0),r=t.get(0,1),s=t.get(1,0),o=t.get(1,1),e*o-r*s;if(3===t.columns){let o,n,i;return o=new V(t,[1,2],[1,2]),n=new V(t,[1,2],[0,2]),i=new V(t,[1,2],[0,1]),e=t.get(0,0),r=t.get(0,1),s=t.get(0,2),e*X(o)-r*X(n)+s*X(i)}return new H(t).determinant}throw Error("determinant can only be calculated for a square matrix")}function Y(t,e){let r=[];for(let s=0;s<t;s++)s!==e&&r.push(s);return r}function G(t,e,r,s=1e-9,o=1e-9){if(t>o)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<s&&t.set(e,0,0);return t.to1DArray()}}function Q(t,e={}){const{thresholdValue:r=1e-9,thresholdError:s=1e-9}=e;let o=(t=k.checkMatrix(t)).rows,n=new k(o,o);for(let e=0;e<o;e++){let i=k.columnVector(t.getRow(e)),h=t.subMatrixRow(Y(o,e)).transpose(),l=new L(h).solve(i),u=k.sub(i,h.mmul(l)).abs().max();n.setRow(e,G(u,l,e,r,s))}return n}function W(t,e=Number.EPSILON){if((t=k.checkMatrix(t)).isEmpty())return t.transpose();let r=new L(t,{autoTranspose:!0}),s=r.leftSingularVectors,o=r.rightSingularVectors,n=r.diagonal;for(let t=0;t<n.length;t++)Math.abs(n[t])>e?n[t]=1/n[t]:n[t]=0;return o.mmul(k.diag(n).mmul(s.transpose()))}function B(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0}=r;o&&(t=t.center("column"),s||(e=e.center("column")));const n=t.transpose().mmul(e);for(let e=0;e<n.rows;e++)for(let r=0;r<n.columns;r++)n.set(e,r,n.get(e,r)*(1/(t.rows-1)));return n}function J(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0,scale:n=!0}=r;o&&(t.center("column"),s||e.center("column")),n&&(t.scale("column"),s||e.scale("column"));const i=t.standardDeviation("column",{unbiased:!0}),h=s?i:e.standardDeviation("column",{unbiased:!0}),l=t.transpose().mmul(e);for(let e=0;e<l.rows;e++)for(let r=0;r<l.columns;r++)l.set(e,r,l.get(e,r)*(1/(i[e]*h[r]))*(1/(t.rows-1)));return l}class K{constructor(t,e={}){const{assumeSymmetric:r=!1}=e;if(!(t=F.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let s,o,n=t.columns,i=new k(n,n),h=new Float64Array(n),l=new Float64Array(n),u=t,a=!1;if(a=!!r||t.isSymmetric(),a){for(s=0;s<n;s++)for(o=0;o<n;o++)i.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c;for(l=0;l<t;l++)r[l]=s.get(t-1,l);for(h=t-1;h>0;h--){for(c=0,i=0,u=0;u<h;u++)c+=Math.abs(r[u]);if(0===c)for(e[h]=r[h-1],l=0;l<h;l++)r[l]=s.get(h-1,l),s.set(h,l,0),s.set(l,h,0);else{for(u=0;u<h;u++)r[u]/=c,i+=r[u]*r[u];for(o=r[h-1],n=Math.sqrt(i),o>0&&(n=-n),e[h]=c*n,i-=o*n,r[h-1]=o-n,l=0;l<h;l++)e[l]=0;for(l=0;l<h;l++){for(o=r[l],s.set(l,h,o),n=e[l]+s.get(l,l)*o,u=l+1;u<=h-1;u++)n+=s.get(u,l)*r[u],e[u]+=s.get(u,l)*o;e[l]=n}for(o=0,l=0;l<h;l++)e[l]/=i,o+=e[l]*r[l];for(a=o/(i+i),l=0;l<h;l++)e[l]-=a*r[l];for(l=0;l<h;l++){for(o=r[l],n=e[l],u=l;u<=h-1;u++)s.set(u,l,s.get(u,l)-(o*e[u]+n*r[u]));r[l]=s.get(h-1,l),s.set(h,l,0)}}r[h]=i}for(h=0;h<t-1;h++){if(s.set(t-1,h,s.get(h,h)),s.set(h,h,1),i=r[h+1],0!==i){for(u=0;u<=h;u++)r[u]=s.get(u,h+1)/i;for(l=0;l<=h;l++){for(n=0,u=0;u<=h;u++)n+=s.get(u,h+1)*s.get(u,l);for(u=0;u<=h;u++)s.set(u,l,s.get(u,l)-n*r[u])}}for(u=0;u<=h;u++)s.set(u,h+1,0)}for(l=0;l<t;l++)r[l]=s.get(t-1,l),s.set(t-1,l,0);s.set(t-1,t-1,1),e[0]=0}(n,l,h,i),function(t,e,r,s){let o,n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b;for(i=1;i<t;i++)e[i-1]=e[i];e[t-1]=0;let x=0,E=0,v=Number.EPSILON;for(u=0;u<t;u++){for(E=Math.max(E,Math.abs(r[u])+Math.abs(e[u])),a=u;a<t&&!(Math.abs(e[a])<=v*E);)a++;if(a>u){b=0;do{for(b+=1,o=r[u],c=(r[u+1]-o)/(2*e[u]),f=_(c,1),c<0&&(f=-f),r[u]=e[u]/(c+f),r[u+1]=e[u]*(c+f),m=r[u+1],n=o-r[u],i=u+2;i<t;i++)r[i]-=n;for(x+=n,c=r[a],g=1,w=g,p=g,d=e[u+1],y=0,M=0,i=a-1;i>=u;i--)for(p=w,w=g,M=y,o=g*e[i],n=g*c,f=_(c,e[i]),e[i+1]=y*f,y=e[i]/f,g=c/f,c=g*r[i]-y*o,r[i+1]=n+y*(g*o+y*r[i]),l=0;l<t;l++)n=s.get(l,i+1),s.set(l,i+1,y*s.get(l,i)+g*n),s.set(l,i,g*s.get(l,i)-y*n);c=-y*M*p*d*e[u]/m,e[u]=y*c,r[u]=g*c}while(Math.abs(e[u])>v*E)}r[u]=r[u]+x,e[u]=0}for(i=0;i<t-1;i++){for(l=i,c=r[i],h=i+1;h<t;h++)r[h]<c&&(l=h,c=r[h]);if(l!==i)for(r[l]=r[i],r[i]=c,h=0;h<t;h++)c=s.get(h,i),s.set(h,i,s.get(h,l)),s.set(h,l,c)}}(n,l,h,i)}else{let t=new k(n,n),e=new Float64Array(n);for(o=0;o<n;o++)for(s=0;s<n;s++)t.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c=t-1;for(u=1;u<=c-1;u++){for(a=0,h=u;h<=c;h++)a+=Math.abs(e.get(h,u-1));if(0!==a){for(i=0,h=c;h>=u;h--)r[h]=e.get(h,u-1)/a,i+=r[h]*r[h];for(n=Math.sqrt(i),r[u]>0&&(n=-n),i-=r[u]*n,r[u]=r[u]-n,l=u;l<t;l++){for(o=0,h=c;h>=u;h--)o+=r[h]*e.get(h,l);for(o/=i,h=u;h<=c;h++)e.set(h,l,e.get(h,l)-o*r[h])}for(h=0;h<=c;h++){for(o=0,l=c;l>=u;l--)o+=r[l]*e.get(h,l);for(o/=i,l=u;l<=c;l++)e.set(h,l,e.get(h,l)-o*r[l])}r[u]=a*r[u],e.set(u,u-1,a*n)}}for(h=0;h<t;h++)for(l=0;l<t;l++)s.set(h,l,h===l?1:0);for(u=c-1;u>=1;u--)if(0!==e.get(u,u-1)){for(h=u+1;h<=c;h++)r[h]=e.get(h,u-1);for(l=u;l<=c;l++){for(n=0,h=u;h<=c;h++)n+=r[h]*s.get(h,l);for(n=n/r[u]/e.get(u,u-1),h=u;h<=c;h++)s.set(h,l,s.get(h,l)+n*r[h])}}}(n,t,e,i),function(t,e,r,s,o){let n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b=t-1,x=t-1,E=Number.EPSILON,v=0,S=0,k=0,R=0,I=0,T=0,A=0,q=0;for(n=0;n<t;n++)for((n<0||n>x)&&(r[n]=o.get(n,n),e[n]=0),i=Math.max(n-1,0);i<t;i++)S+=Math.abs(o.get(n,i));for(;b>=0;){for(l=b;l>0&&(T=Math.abs(o.get(l-1,l-1))+Math.abs(o.get(l,l)),0===T&&(T=S),!(Math.abs(o.get(l,l-1))<E*T));)l--;if(l===b)o.set(b,b,o.get(b,b)+v),r[b]=o.get(b,b),e[b]=0,b--,q=0;else if(l===b-1){if(c=o.get(b,b-1)*o.get(b-1,b),k=(o.get(b-1,b-1)-o.get(b,b))/2,R=k*k+c,A=Math.sqrt(Math.abs(R)),o.set(b,b,o.get(b,b)+v),o.set(b-1,b-1,o.get(b-1,b-1)+v),f=o.get(b,b),R>=0){for(A=k>=0?k+A:k-A,r[b-1]=f+A,r[b]=r[b-1],0!==A&&(r[b]=f-c/A),e[b-1]=0,e[b]=0,f=o.get(b,b-1),T=Math.abs(f)+Math.abs(A),k=f/T,R=A/T,I=Math.sqrt(k*k+R*R),k/=I,R/=I,i=b-1;i<t;i++)A=o.get(b-1,i),o.set(b-1,i,R*A+k*o.get(b,i)),o.set(b,i,R*o.get(b,i)-k*A);for(n=0;n<=b;n++)A=o.get(n,b-1),o.set(n,b-1,R*A+k*o.get(n,b)),o.set(n,b,R*o.get(n,b)-k*A);for(n=0;n<=x;n++)A=s.get(n,b-1),s.set(n,b-1,R*A+k*s.get(n,b)),s.set(n,b,R*s.get(n,b)-k*A)}else r[b-1]=f+k,r[b]=f+k,e[b-1]=A,e[b]=-A;b-=2,q=0}else{if(f=o.get(b,b),m=0,c=0,l<b&&(m=o.get(b-1,b-1),c=o.get(b,b-1)*o.get(b-1,b)),10===q){for(v+=f,n=0;n<=b;n++)o.set(n,n,o.get(n,n)-f);T=Math.abs(o.get(b,b-1))+Math.abs(o.get(b-1,b-2)),f=m=.75*T,c=-.4375*T*T}if(30===q&&(T=(m-f)/2,T=T*T+c,T>0)){for(T=Math.sqrt(T),m<f&&(T=-T),T=f-c/((m-f)/2+T),n=0;n<=b;n++)o.set(n,n,o.get(n,n)-T);v+=T,f=m=c=.964}for(q+=1,u=b-2;u>=l&&(A=o.get(u,u),I=f-A,T=m-A,k=(I*T-c)/o.get(u+1,u)+o.get(u,u+1),R=o.get(u+1,u+1)-A-I-T,I=o.get(u+2,u+1),T=Math.abs(k)+Math.abs(R)+Math.abs(I),k/=T,R/=T,I/=T,u!==l)&&!(Math.abs(o.get(u,u-1))*(Math.abs(R)+Math.abs(I))<E*(Math.abs(k)*(Math.abs(o.get(u-1,u-1))+Math.abs(A)+Math.abs(o.get(u+1,u+1)))));)u--;for(n=u+2;n<=b;n++)o.set(n,n-2,0),n>u+2&&o.set(n,n-3,0);for(h=u;h<=b-1&&(y=h!==b-1,h!==u&&(k=o.get(h,h-1),R=o.get(h+1,h-1),I=y?o.get(h+2,h-1):0,f=Math.abs(k)+Math.abs(R)+Math.abs(I),0!==f&&(k/=f,R/=f,I/=f)),0!==f);h++)if(T=Math.sqrt(k*k+R*R+I*I),k<0&&(T=-T),0!==T){for(h!==u?o.set(h,h-1,-T*f):l!==u&&o.set(h,h-1,-o.get(h,h-1)),k+=T,f=k/T,m=R/T,A=I/T,R/=k,I/=k,i=h;i<t;i++)k=o.get(h,i)+R*o.get(h+1,i),y&&(k+=I*o.get(h+2,i),o.set(h+2,i,o.get(h+2,i)-k*A)),o.set(h,i,o.get(h,i)-k*f),o.set(h+1,i,o.get(h+1,i)-k*m);for(n=0;n<=Math.min(b,h+3);n++)k=f*o.get(n,h)+m*o.get(n,h+1),y&&(k+=A*o.get(n,h+2),o.set(n,h+2,o.get(n,h+2)-k*I)),o.set(n,h,o.get(n,h)-k),o.set(n,h+1,o.get(n,h+1)-k*R);for(n=0;n<=x;n++)k=f*s.get(n,h)+m*s.get(n,h+1),y&&(k+=A*s.get(n,h+2),s.set(n,h+2,s.get(n,h+2)-k*I)),s.set(n,h,s.get(n,h)-k),s.set(n,h+1,s.get(n,h+1)-k*R)}}}if(0!==S){for(b=t-1;b>=0;b--)if(k=r[b],R=e[b],0===R)for(l=b,o.set(b,b,1),n=b-1;n>=0;n--){for(c=o.get(n,n)-k,I=0,i=l;i<=b;i++)I+=o.get(n,i)*o.get(i,b);if(e[n]<0)A=c,T=I;else if(l=n,0===e[n]?o.set(n,b,0!==c?-I/c:-I/(E*S)):(f=o.get(n,n+1),m=o.get(n+1,n),R=(r[n]-k)*(r[n]-k)+e[n]*e[n],a=(f*T-A*I)/R,o.set(n,b,a),o.set(n+1,b,Math.abs(f)>Math.abs(A)?(-I-c*a)/f:(-T-m*a)/A)),a=Math.abs(o.get(n,b)),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b,o.get(i,b)/a)}else if(R<0)for(l=b-1,Math.abs(o.get(b,b-1))>Math.abs(o.get(b-1,b))?(o.set(b-1,b-1,R/o.get(b,b-1)),o.set(b-1,b,-(o.get(b,b)-k)/o.get(b,b-1))):(M=Z(0,-o.get(b-1,b),o.get(b-1,b-1)-k,R),o.set(b-1,b-1,M[0]),o.set(b-1,b,M[1])),o.set(b,b-1,0),o.set(b,b,1),n=b-2;n>=0;n--){for(g=0,w=0,i=l;i<=b;i++)g+=o.get(n,i)*o.get(i,b-1),w+=o.get(n,i)*o.get(i,b);if(c=o.get(n,n)-k,e[n]<0)A=c,I=g,T=w;else if(l=n,0===e[n]?(M=Z(-g,-w,c,R),o.set(n,b-1,M[0]),o.set(n,b,M[1])):(f=o.get(n,n+1),m=o.get(n+1,n),p=(r[n]-k)*(r[n]-k)+e[n]*e[n]-R*R,d=2*(r[n]-k)*R,0===p&&0===d&&(p=E*S*(Math.abs(c)+Math.abs(R)+Math.abs(f)+Math.abs(m)+Math.abs(A))),M=Z(f*I-A*g+R*w,f*T-A*w-R*g,p,d),o.set(n,b-1,M[0]),o.set(n,b,M[1]),Math.abs(f)>Math.abs(A)+Math.abs(R)?(o.set(n+1,b-1,(-g-c*o.get(n,b-1)+R*o.get(n,b))/f),o.set(n+1,b,(-w-c*o.get(n,b)-R*o.get(n,b-1))/f)):(M=Z(-I-m*o.get(n,b-1),-T-m*o.get(n,b),A,R),o.set(n+1,b-1,M[0]),o.set(n+1,b,M[1]))),a=Math.max(Math.abs(o.get(n,b-1)),Math.abs(o.get(n,b))),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b-1,o.get(i,b-1)/a),o.set(i,b,o.get(i,b)/a)}for(n=0;n<t;n++)if(n<0||n>x)for(i=n;i<t;i++)s.set(n,i,o.get(n,i));for(i=t-1;i>=0;i--)for(n=0;n<=x;n++){for(A=0,h=0;h<=Math.min(i,x);h++)A+=s.get(n,h)*o.get(h,i);s.set(n,i,A)}}}(n,l,h,i,t)}this.n=n,this.e=l,this.d=h,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,s=this.e,o=this.d,n=new k(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)n.set(t,e,0);n.set(t,t,o[t]),s[t]>0?n.set(t,t+1,s[t]):s[t]<0&&n.set(t,t-1,s[t])}return n}}function Z(t,e,r,s){let o,n;return Math.abs(r)>Math.abs(s)?(o=s/r,n=r+o*s,[(t+o*e)/n,(e-o*t)/n]):(o=r/s,n=s+o*r,[(o*t+e)/n,(o*e-t)/n])}class tt{constructor(t){if(!(t=F.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,s,o=t,n=o.rows,i=new k(n,n),h=!0;for(r=0;r<n;r++){let t=0;for(s=0;s<r;s++){let n=0;for(e=0;e<s;e++)n+=i.get(s,e)*i.get(r,e);n=(o.get(r,s)-n)/i.get(s,s),i.set(r,s,n),t+=n*n}for(t=o.get(r,r)-t,h&=t>0,i.set(r,r,Math.sqrt(Math.max(t,0))),s=r+1;s<n;s++)i.set(r,s,0)}this.L=i,this.positiveDefinite=Boolean(h)}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=F.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let s,o,n,i=t.columns,h=t.clone();for(n=0;n<r;n++)for(o=0;o<i;o++){for(s=0;s<n;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(n,s));h.set(n,o,h.get(n,o)/e.get(n,n))}for(n=r-1;n>=0;n--)for(o=0;o<i;o++){for(s=n+1;s<r;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(s,n));h.set(n,o,h.get(n,o)/e.get(n,n))}return h}get lowerTriangularMatrix(){return this.L}}class et{constructor(t,e={}){t=F.checkMatrix(t);let{Y:r}=e;const{scaleScores:s=!1,maxIterations:o=1e3,terminationCriteria:n=1e-10}=e;let i;if(r){if(r=Array.isArray(r)&&"number"==typeof r[0]?k.columnVector(r):F.checkMatrix(r),!r.isColumnVector()||r.rows!==t.rows)throw new Error("Y must be a column vector of length X.rows");i=r}else i=t.getColumnVector(0);let h,l,u,a,c=1;for(let e=0;e<o&&c>n;e++)u=t.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0)),u=u.div(u.norm()),h=t.mmul(u).div(u.transpose().mmul(u).get(0,0)),e>0&&(c=h.clone().sub(a).pow(2).sum()),a=h.clone(),r?(l=r.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),l=l.div(l.norm()),i=r.mmul(l).div(l.transpose().mmul(l).get(0,0))):i=h;if(r){let e=t.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0));e=e.div(e.norm());let s=t.clone().sub(h.clone().mmul(e.transpose())),o=i.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),n=r.clone().sub(h.clone().mulS(o.get(0,0)).mmul(l.transpose()));this.t=h,this.p=e.transpose(),this.w=u.transpose(),this.q=l,this.u=i,this.s=h.transpose().mmul(h),this.xResidual=s,this.yResidual=n,this.betas=o}else this.w=u.transpose(),this.s=h.transpose().mmul(h).sqrt(),this.t=s?h.clone().div(this.s.get(0,0)):h,this.xResidual=t.sub(h.mmul(u.transpose()))}}},842:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});class s{constructor(t=[],e=o){if(this.data=t,this.length=this.data.length,this.compare=e,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,s=e[t];for(;t>0;){const o=t-1>>1,n=e[o];if(r(s,n)>=0)break;e[t]=n,t=o}e[t]=s}_down(t){const{data:e,compare:r}=this,s=this.length>>1,o=e[t];for(;t<s;){let s=1+(t<<1),n=e[s];const i=s+1;if(i<this.length&&r(e[i],n)<0&&(s=i,n=e[i]),r(n,o)>=0)break;e[t]=n,t=s}e[t]=o}}function o(t,e){return t<e?-1:t>e?1:0}},902:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{solveHomography:n}=r(450);t.exports={estimate:({screenCoords:t,worldCoords:e,projectionTransform:r})=>{const i=n(e.map((t=>[t.x,t.y])),t.map((t=>[t.x,t.y]))),h=new s([[i[0],i[1],i[2]],[i[3],i[4],i[5]],[i[6],i[7],i[8]]]),l=new s(r),u=o(l).mmul(h).to1DArray(),a=Math.sqrt(u[0]*u[0]+u[3]*u[3]+u[6]*u[6]),c=Math.sqrt(u[1]*u[1]+u[4]*u[4]+u[7]*u[7]),f=(a+c)/2,m=[];m[0]=u[0]/a,m[3]=u[3]/a,m[6]=u[6]/a,m[1]=u[1]/c,m[4]=u[4]/c,m[7]=u[7]/c,m[2]=m[3]*m[7]-m[6]*m[4],m[5]=m[6]*m[1]-m[0]*m[7],m[8]=m[0]*m[4]-m[1]*m[3];const g=Math.sqrt(m[2]*m[2]+m[5]*m[5]+m[8]*m[8]);m[2]/=g,m[5]/=g,m[8]/=g;const w=[];return w[0]=u[2]/f,w[1]=u[5]/f,w[2]=u[8]/f,[[m[0],m[1],m[2],w[0]],[m[3],m[4],m[5],w[1]],[m[6],m[7],m[8],w[2]]]}}},421:(t,e,r)=>{const{estimate:s}=r(902),{refineEstimate:o}=r(269);t.exports={Estimator:class{constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return s({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return o({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}}},269:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{normalizePoints:n,applyModelViewProjectionTransform:i,buildModelViewProjectionTransform:h,computeScreenCoordiate:l}=r(420);let u=[[],[],[]],a=[[],[]],c=[[],[],[]];const f=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s,inlierProb:o})=>{const n=o<1;let i=t,u=0,a=0,c=new Array(r.length),f=new Array(r.length),p=new Array(r.length),d=new Array(r.length);for(let t=0;t<=10;t++){const y=h(e,i);for(let t=0;t<r.length;t++){const e=l(y,r[t].x,r[t].y,r[t].z),o=s[t].x-e.x,n=s[t].y-e.y;p[t]=o,d[t]=n,c[t]=o*o+n*n}let M;if(a=0,n){const t=Math.max(3,Math.floor(r.length*o)-1);for(let t=0;t<r.length;t++)f[t]=c[t];f.sort(((t,e)=>t-e)),M=Math.max(4*f[t],16);for(let t=0;t<r.length;t++)f[t]>M?a+=M/6:a+=M/6*(1-(1-f[t]/M)*(1-f[t]/M)*(1-f[t]/M))}else for(let t=0;t<r.length;t++)a+=c[t];if(a/=r.length,a<.1)break;if(t>0&&a/u>.99)break;if(10===t)break;u=a;const b=[],x=[];for(let t=0;t<r.length;t++){if(n&&c[t]>M)continue;const s=w({modelViewProjectionTransform:y,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-c[t]/M)*(1-c[t]/M);for(let t=0;t<2;t++)for(let r=0;r<6;r++)s[t][r]*=e;b.push([p[t]*e]),b.push([d[t]*e])}else b.push([p[t]]),b.push([d[t]]);for(let t=0;t<s.length;t++)x.push(s[t])}const E=g({dU:b,J_U_S:x});if(null===E)break;i=m({modelViewTransform:i,dS:E})}return{modelViewTransform:i,err:a}},m=({modelViewTransform:t,dS:e})=>{let r,s,o,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];n<1e-6?(r=1,s=0,o=0,n=0):(n=Math.sqrt(n),r=e[0]/n,s=e[1]/n,o=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;u[0][0]=r*r*l+i,u[0][1]=r*s*l-o*h,u[0][2]=r*o*l+s*h,u[0][3]=e[3],u[1][0]=s*r*l+o*h,u[1][1]=s*s*l+i,u[1][2]=s*o*l-r*h,u[1][3]=e[4],u[2][0]=o*r*l-s*h,u[2][1]=o*s*l+r*h,u[2][2]=o*o*l+i,u[2][3]=e[5];const a=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)a[e][r]=t[e][0]*u[0][r]+t[e][1]*u[1][r]+t[e][2]*u[2][r];a[e][3]+=t[e][3]}return a},g=({dU:t,J_U_S:e})=>{const r=new s(e),n=new s(t),i=r.transpose(),h=i.mmul(r),l=i.mmul(n);let u;try{u=o(h)}catch(t){return null}return u.mmul(l).to1DArray()},w=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:s})=>{const o=e,{x:n,y:h,z:l}=s,u=i(t,n,h,l),f=u.z*u.z;a[0][0]=r[0][0]*u.z/f,a[0][1]=r[0][1]*u.z/f,a[0][2]=(r[0][2]*u.z-r[2][2]*u.x)/f,a[1][0]=r[1][0]*u.z/f,a[1][1]=r[1][1]*u.z/f,a[1][2]=(r[1][2]*u.z-r[2][2]*u.y)/f,c[0][0]=o[0][2]*h,c[0][1]=-o[0][2]*n,c[0][2]=o[0][1]*n-o[0][0]*h,c[0][3]=o[0][0],c[0][4]=o[0][1],c[0][5]=o[0][2],c[1][0]=o[1][2]*h,c[1][1]=-o[1][2]*n,c[1][2]=o[1][1]*n-o[1][0]*h,c[1][3]=o[1][0],c[1][4]=o[1][1],c[1][5]=o[1][2],c[2][0]=o[2][2]*h,c[2][1]=-o[2][2]*n,c[2][2]=o[2][1]*n-o[2][0]*h,c[2][3]=o[2][0],c[2][4]=o[2][1],c[2][5]=o[2][2];const m=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){m[t][e]=0;for(let r=0;r<3;r++)m[t][e]+=a[t][r]*c[r][e]}return m};t.exports={refineEstimate:({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s})=>{let o=0,n=0;for(let t=0;t<r.length;t++)o+=r[t].x,n+=r[t].y;o/=r.length,n/=r.length;const i=[];for(let t=0;t<r.length;t++)i.push({x:r[t].x-o,y:r[t].y-n,z:r[t].z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*o+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*o+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*o+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(let t=0;t<l.length;t++){const r=f({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:s,inlierProb:l[t]});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*o-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*o-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*o-a[2][1]*n,a)}}},420:t=>{const e=(t,e,r,s)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,r,s,o)=>{const{x:n,y:i,z:h}=e(t,r,s);return{x:n/h,y:i/h}}}},233:t=>{t.exports={compute:t=>{const{v1:e,v2:r}=t;let s=0;for(let t=0;t<e.length;t++){let i=(e[t]^r[t])>>>0;s+=(n=void 0,((n=((n=((n=((n=(o=i)-(o>>1&1431655765))>>2&858993459)+(858993459&n))>>4)+n&252645135)>>8)+n&16711935)>>16)+n&65535)}var o,n;return s}}},934:t=>{const e=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:s,scaleOneOverLogK:o})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*s+c,y:u[2]*r+u[3]*s+f,angle:n,scale:Math.log(i)*o}};t.exports={computeHoughMatches:t=>{const{keywidth:r,keyheight:s,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(r,s),g=Math.floor(r/2),w=Math.floor(s/2),p=[];for(let t=0;t<i.length;t++){const e=i[t].querypoint.scale,r=i[t].keypoint.scale;0==r&&console.log("ERROR divide zero");const s=e/r;p.push(s*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],v=[],S={};for(let t=0;t<i.length;t++){const r=i[t].querypoint,s=i[t].keypoint,{x:o,y:n,scale:m,angle:p}=e({querypoint:r,keypoint:s,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(o<l||o>=h||n<a||n>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}let d=y*(o-l)/(h-l),k=M*(n-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),I=10*(m- -1)/2;v[t]={binX:d,binY:k,binAngle:R,binScale:I};let T=Math.floor(d-.5),A=Math.floor(k-.5),q=Math.floor(I-.5),C=(Math.floor(R-.5)+c)%c;if(T<0||T+1>=y||A<0||A+1>=M||q<0||q+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){let e=T+t;for(let t=0;t<2;t++){let r=A+t;for(let t=0;t<2;t++){let s=(C+t)%c;for(let t=0;t<2;t++){const o=e+r*y+s*b+(q+t)*x;void 0===S[o]&&(S[o]=0),S[o]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(S).forEach((t=>{S[t]>k&&(k=S[t],R=t)})),k<3)return[];const I=Math.floor(R%x%b%y),T=Math.floor((R-I)%x%b/y),A=Math.floor((R-I-T*y)%x/b),q=Math.floor((R-I-T*y-A*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=v[t];if(Math.abs(e.binX-(I+.5))>=1)continue;if(Math.abs(e.binY-(T+.5))>=1)continue;if(Math.abs(e.binScale-(q+.5))>=1)continue;const r=Math.abs(e.binAngle-(A+.5));Math.min(r,c-r)>=1||C.push(i[t])}return C}}},582:(t,e,r)=>{const{match:s}=r(492);t.exports={Matcher:class{constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){let r={frames:[]},o=null;for(let n=0;n<t.length;n++){const{H:i,matches:h,debugExtra:l}=s({keyframe:t[n],querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});r.frames.push(l),i&&(null===o||o.matches.length<h.length)&&(o={keyframeIndex:n,H:i,matches:h})}if(null===o)return{keyframeIndex:-1,debugExtra:r};const n=[],i=[],h=t[o.keyframeIndex];for(let t=0;t<o.matches.length;t++){const e=o.matches[t].querypoint,r=o.matches[t].keypoint;n.push({x:e.x,y:e.y}),i.push({x:(r.x+.5)/h.scale,y:(r.y+.5)/h.scale,z:0})}return{screenCoords:n,worldCoords:i,keyframeIndex:o.keyframeIndex,debugExtra:r}}}}},492:(t,e,r)=>{const s=r(842).Z,{compute:o}=r(233),{computeHoughMatches:n}=r(934),{computeHomography:i}=r(838),{multiplyPointHomographyInhomogenous:h,matrixInverse33:l}=r(289),u=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(let e=0;e<t.pointIndexes.length;e++)n.push(t.pointIndexes[e]);return}const h=[];for(let s=0;s<t.children.length;s++){const n=t.children[s].centerPointIndex,i=o({v1:e[n].descriptors,v2:r.descriptors});h.push(i)}let l=Number.MAX_SAFE_INTEGER;for(let e=0;e<t.children.length;e++)l=Math.min(l,h[e]);for(let e=0;e<t.children.length;e++)h[e]!==l&&s.push({node:t.children[e],d:h[e]});for(let o=0;o<t.children.length;o++)h[o]===l&&u({node:t.children[o],keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const{node:t,d:o}=s.pop();u({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}},a=t=>{const{H:e,matches:r,threshold:s}=t,o=s*s,n=[];for(let t=0;t<r.length;t++){const s=r[t].querypoint,i=r[t].keypoint,l=h([i.x,i.y],e);(l[0]-s.x)*(l[0]-s.x)+(l[1]-s.y)*(l[1]-s.y)<=o&&n.push(r[t])}return n};t.exports={match:({keyframe:t,querypoints:e,querywidth:r,queryheight:c,debugMode:f})=>{let m={};const g=[];for(let r=0;r<e.length;r++){const n=e[r],i=n.maxima?t.maximaPoints:t.minimaPoints;if(0===i.length)continue;const h=n.maxima?t.maximaPointsCluster.rootNode:t.minimaPointsCluster.rootNode,l=[],a=new s([],((t,e)=>t.d-e.d));u({node:h,keypoints:i,querypoint:n,queue:a,keypointIndexes:l,numPop:0});let c=-1,f=Number.MAX_SAFE_INTEGER,m=Number.MAX_SAFE_INTEGER;for(let t=0;t<l.length;t++){const e=i[l[t]],r=o({v1:e.descriptors,v2:n.descriptors});r<f?(m=f,f=r,c=l[t]):r<m&&(m=r)}-1!==c&&(m===Number.MAX_SAFE_INTEGER||1*f/m<.7)&&g.push({querypoint:n,keypoint:i[c]})}if(f&&(m.matches=g),g.length<6)return{debugExtra:m};const w=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:g});f&&(m.houghMatches=w);const p=i({srcPoints:w.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:w.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===p)return{debugExtra:m};const d=a({H:p,matches:w,threshold:3});if(f&&(m.inlierMatches=d),d.length<6)return{debugExtra:m};const y=l(p,1e-5),M=[];for(let r=0;r<e.length;r++){const s=e[r],n=h([s.x,s.y],y);let i=-1,l=Number.MAX_SAFE_INTEGER,u=Number.MAX_SAFE_INTEGER;const a=s.maxima?t.maximaPoints:t.minimaPoints;for(let t=0;t<a.length;t++){const e=a[t];if((e.x-n[0])*(e.x-n[0])+(e.y-n[1])*(e.y-n[1])>100)continue;const r=o({v1:e.descriptors,v2:s.descriptors});r<l?(u=l,l=r,i=t):r<u&&(u=r)}-1!==i&&(u===Number.MAX_SAFE_INTEGER||1*l/u<.7)&&M.push({querypoint:s,keypoint:a[i]})}f&&(m.matches2=M);const b=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:M});f&&(m.houghMatches2=b);const x=i({srcPoints:b.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:b.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===x)return{debugExtra:m};const E=a({H:x,matches:b,threshold:3});return f&&(m.inlierMatches2=E),{H:x,matches:E,debugExtra:m}}}},838:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{createRandomizer:n}=r(48),{quadrilateralConvex:i,matrixInverse33:h,smallestTriangleArea:l,multiplyPointHomographyInhomogenous:u,checkThreePointsConsistent:a,checkFourPointsConsistent:c,determinant:f}=r(289),{solveHomography:m}=r(450),g=({H:t,testPoints:e,keyframe:r})=>{const s=h(t,1e-5);if(null===s)return!1;const o=[];for(let t=0;t<e.length;t++)o.push(u(e[t],s));return!(l(o[0],o[1],o[2],o[3])<r.width*r.height*1e-4||!i(o[0],o[1],o[2],o[3]))},w=({inH:t})=>{const e=1/t[8],r=[];for(let s=0;s<8;s++)r[s]=t[s]*e;return r[8]=1,r},p=({H:t,srcPoint:e,dstPoint:r,oneOverScale2:s})=>{const o=u(e,t),n=[o[0]-r[0],o[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*s)},d=({H:t,testPoints:e})=>{const r=[];for(let s=0;s<e.length;s++)r[s]=u(e[s],t);for(let t=0;t<e.length;t++){const s=t,o=(t+1)%e.length,n=(t+2)%e.length;if(!a(e[s],e[o],e[n],r[s],r[o],r[n]))return!1}return!0};t.exports={computeHomography:t=>{const{srcPoints:e,dstPoints:r,keyframe:s,quickMode:o}=t,i=[[0,0],[s.width,0],[s.width,s.height],[0,s.height]];if(e.length<4)return null;const h=Math.min(10,e.length),l=n(),u=[];for(let t=0;t<e.length;t++)u[t]=t;l.arrayShuffle({arr:u,sampleSize:u.length});const a=o?10:20,f=2*a;let y=0;const M=[];for(;y<f&&M.length<a;){if(y+=1,l.arrayShuffle({arr:u,sampleSize:4}),!c(e[u[0]],e[u[1]],e[u[2]],e[u[3]],r[u[0]],r[u[1]],r[u[2]],r[u[3]]))continue;const t=m([e[u[0]],e[u[1]],e[u[2]],e[u[3]]],[r[u[0]],r[u[1]],r[u[2]],r[u[3]]]);null!==t&&d({H:t,testPoints:i})&&M.push(t)}if(0===M.length)return null;const b=[];for(let t=0;t<M.length;t++)b.push({H:M[t],cost:0});let x=h;for(let t=0;t<e.length&&b.length>2;t+=x){x=Math.min(h,e.length-t);let s=t+x;for(let o=0;o<b.length;o++)for(let n=t;n<s;n++){const t=p({H:b[o].H,srcPoint:e[n],dstPoint:r[n],oneOverScale2:1e4});b[o].cost+=t}b.sort(((t,e)=>t.cost-e.cost)),b.splice(-Math.floor((b.length+1)/2))}let E=null;for(let t=0;t<b.length;t++){const e=w({inH:b[t].H});if(g({H:e,testPoints:i,keyframe:s})){E=e;break}}return E}}},289:t=>{const e=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),r=t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],s=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*s},s=(t,e)=>[t[0]-e[0],t[1]-e[1]],o=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)};t.exports={matrixInverse33:(t,e)=>{const s=r(t);if(Math.abs(s)<=e)return null;const o=1/s;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},matrixMul33:(t,e)=>{const r=[];return r[0]=t[0]*e[0]+t[1]*e[3]+t[2]*e[6],r[1]=t[0]*e[1]+t[1]*e[4]+t[2]*e[7],r[2]=t[0]*e[2]+t[1]*e[5]+t[2]*e[8],r[3]=t[3]*e[0]+t[4]*e[3]+t[5]*e[6],r[4]=t[3]*e[1]+t[4]*e[4]+t[5]*e[7],r[5]=t[3]*e[2]+t[4]*e[5]+t[5]*e[8],r[6]=t[6]*e[0]+t[7]*e[3]+t[8]*e[6],r[7]=t[6]*e[1]+t[7]*e[4]+t[8]*e[7],r[8]=t[6]*e[2]+t[7]*e[5]+t[8]*e[8],r},quadrilateralConvex:(t,r,s,o)=>{const n=e(t,r,s)<=0;return e(r,s,o)<=0===n&&e(s,o,t)<=0===n&&e(o,t,r)<=0===n},smallestTriangleArea:(t,e,r,n)=>{const i=s(e,t),h=s(r,t),l=s(n,t),u=s(e,r),a=s(n,r),c=o(i,h),f=o(h,l),m=o(i,l),g=o(u,a);return Math.min(Math.min(Math.min(c,f),m),g)},multiplyPointHomographyInhomogenous:(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8],s=[];return s[0]=(e[0]*t[0]+e[1]*t[1]+e[2])/r,s[1]=(e[3]*t[0]+e[4]*t[1]+e[5])/r,s},checkThreePointsConsistent:(t,r,s,o,n,i)=>e(t,r,s)>0==e(o,n,i)>0,checkFourPointsConsistent:(t,r,s,o,n,i,h,l)=>e(t,r,s)>0==e(n,i,h)>0&&e(r,s,o)>0==e(i,h,l)>0&&e(s,o,t)>0==e(h,l,n)>0&&e(o,t,r)>0==e(l,n,i)>0,determinant:r}},450:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),n=t=>{let e=0,r=0;for(let s=0;s<t.length;s++)e+=t[s][0],r+=t[s][1];let s=e/t.length,o=r/t.length,n=0;for(let e=0;e<t.length;e++){const r=t[e][0]-s,i=t[e][1]-o;n+=Math.sqrt(r*r+i*i)}let i=Math.sqrt(2)*t.length/n;const h=[];for(let e=0;e<t.length;e++)h.push([(t[e][0]-s)*i,(t[e][1]-o)*i]);return{normPoints:h,param:{meanX:s,meanY:o,s:i}}};t.exports={solveHomography:(t,e)=>{const{normPoints:r,param:i}=n(t),{normPoints:h,param:l}=n(e),u=h.length,a=[],c=[];for(let t=0;t<u;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*h[t][0],-r[t][1]*h[t][0]],s=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*h[t][1],-r[t][1]*h[t][1]];a.push(e),a.push(s),c.push([h[t][0]]),c.push([h[t][1]])}try{const t=new s(a),e=new s(c),r=t.transpose(),n=r.mmul(t),h=r.mmul(e);return((t,e,r)=>{const s=r.s*r.meanX,o=r.s*r.meanY,n=[t[0]+s*t[6],t[1]+s*t[7],(t[0]+s*t[6])*-e.meanX+(t[1]+s*t[7])*-e.meanY+(t[2]+s)/e.s,t[3]+o*t[6],t[4]+o*t[7],(t[3]+o*t[6])*-e.meanX+(t[4]+o*t[7])*-e.meanY+(t[5]+o)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(o(n).mmul(h).to1DArray(),i,l)}catch(t){return null}}}},48:t=>{t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;let s=e[t];e[t]=e[r],e[r]=s}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}}},e={};function r(s){if(e[s])return e[s].exports;var o=e[s]={exports:{}};return t[s](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{const{Matcher:t}=r(582),{Estimator:e}=r(421);let s=null,o=null,n=!1,i=null,h=null;onmessage=r=>{const{data:l}=r;if("setup"===l.type)s=l.projectionTransform,o=l.matchingDataList,n=l.debugMode,i=new t(l.inputWidth,l.inputHeight,n),h=new e(l.projectionTransform);else if("match"===l.type){const t=l.targetIndexes;let e=-1,r=null,s=null;for(let n=0;n<t.length;n++){const u=t[n],{keyframeIndex:a,screenCoords:c,worldCoords:f,debugExtra:m}=i.matchDetection(o[u],l.featurePoints);if(s=m,-1!==a){const t=h.estimate({screenCoords:c,worldCoords:f});t&&(e=u,r=t);break}}postMessage({type:"matchDone",targetIndex:e,modelViewTransform:r,debugExtra:s})}else if("trackUpdate"===l.type){const{modelViewTransform:t,worldCoords:e,screenCoords:r}=l,s=h.refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})}}})()})();',n.p+"controller.worker.prod.js")}},69855:t=>{"use strict";var e=window.URL||window.webkitURL;t.exports=function(t,n){try{try{var r;try{(r=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(t),r=r.getBlob()}catch(e){r=new Blob([t])}return new Worker(e.createObjectURL(r))}catch(e){return new Worker("data:application/javascript,"+encodeURIComponent(t))}}catch(t){if(!n)throw Error("Inline worker is not supported");return new Worker(n)}}},95217:(t,e,n)=>{const r=n(80383),{Detector:s}=n(66416),{buildImageList:a,buildTrackingImageList:o}=n(17508),{build:i}=n(80723),l=n(61113),u=n(47091),c=async(t,e)=>{const n=[];for(let r=0;r<t.length;r++){const a=t[r],o=new s(a.width,a.height);await u.nextFrame(),u.tidy((()=>{const t=u.tensor(a.data,[a.data.length],"float32").reshape([a.height,a.width]),{featurePoints:s}=o.detect(t),l=s.filter((t=>t.maxima)),c=s.filter((t=>!t.maxima)),h=i({points:l}),p=i({points:c});n.push({maximaPoints:l,minimaPoints:c,maximaPointsCluster:h,minimaPointsCluster:p,width:a.width,height:a.height,scale:a.scale}),e(r)}))}return n};t.exports={Compiler:class{constructor(){this.data=null}compileImageTargets(t,e){return new Promise((async(n,s)=>{const i=[];for(let e=0;e<t.length;e++){const n=t[e],r=document.createElement("canvas");r.width=n.width,r.height=n.height;const s=r.getContext("2d");s.drawImage(n,0,0,n.width,n.height);const a=s.getImageData(0,0,n.width,n.height),o=new Uint8Array(n.width*n.height);for(let t=0;t<o.length;t++){const e=4*t;o[t]=Math.floor((a.data[e]+a.data[e+1]+a.data[e+2])/3)}const l={data:o,height:n.height,width:n.width};i.push(l)}const l=50/i.length;let u=0;this.data=[];for(let t=0;t<i.length;t++){const n=i[t],r=a(n),s=l/r.length,o=await c(r,(()=>{u+=s,e(u)}));this.data.push({targetImage:n,imageList:r,matchingData:o})}for(let t=0;t<i.length;t++){const e=o(i[t]);this.data[t].trackingImageList=e}const h=await new Promise(((t,n)=>{const s=new r;s.onmessage=n=>{"progress"===n.data.type?e(50+n.data.percent):"compileDone"===n.data.type&&t(n.data.list)},s.postMessage({type:"compile",targetImages:i})}));for(let t=0;t<i.length;t++)this.data[t].trackingData=h[t];n(this.data)}))}exportData(){const t=[];for(let e=0;e<this.data.length;e++)t.push({targetImage:{width:this.data[e].targetImage.width,height:this.data[e].targetImage.height},trackingData:this.data[e].trackingData,matchingData:this.data[e].matchingData});return l.encode({v:2,dataList:t})}importData(t){const e=l.decode(new Uint8Array(t));if(!e.v||2!==e.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=e;this.data=[];for(let t=0;t<n.length;t++)this.data.push({targetImage:n[t].targetImage,trackingData:n[t].trackingData,matchingData:n[t].matchingData});return this.data}}}},57957:(t,e,n)=>{const r=n(47091),s=n(71077),{Tracker:a}=n(46417),{CropDetector:o}=n(47051),{Compiler:i}=n(95217),{InputLoader:l}=n(37325);t.exports={Controller:class{constructor({inputWidth:t,inputHeight:e,onUpdate:n=null,debugMode:r=!1,maxTrack:a=1}){this.inputWidth=t,this.inputHeight=e,this.maxTrack=a,this.cropDetector=new o(this.inputWidth,this.inputHeight,r),this.inputLoader=new l(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.shouldCaptureRegion=!1,this.capturedRegion=null,this.interestedTargetIndex=-1,this.trackingStates=[];const i=45*Math.PI/180,u=this.inputHeight/2/Math.tan(i/2);this.projectionTransform=[[u,0,this.inputWidth/2],[0,u,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e4}),this.worker=new s,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=t=>{"matchDone"===t.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(t.data),"trackUpdateDone"===t.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(t.data)}}showTFStats(){console.log(r.memory().numTensors),console.table(r.memory())}addImageTargets(t){return new Promise((async(e,n)=>{const r=await fetch(t),s=await r.arrayBuffer();e(this.addImageTargetsFromBuffer(s))}))}addImageTargetsFromBuffer(t){const e=(new i).importData(t),n=[],r=[],s=[];for(let t=0;t<e.length;t++)r.push(e[t].matchingData),n.push(e[t].trackingData),s.push([e[t].targetImage.width,e[t].targetImage.height]);return this.tracker=new a(s,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=s,{dimensions:s,matchingDataList:r,trackingDataList:n}}dummyRun(t){const e=this.inputLoader.loadInput(t);this.cropDetector.detect(e),this.tracker.dummyRun(e),e.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(t,e){return this._glModelViewMatrix(t,e)}async _detectAndMatch(t,e){const{featurePoints:n}=this.cropDetector.detectMoving(t),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(n,e);return{targetIndex:r,modelViewTransform:s}}async _trackAndUpdate(t,e,n){const{worldCoords:r,screenCoords:s}=this.tracker.track(t,e,n);return r.length<4?null:await this._workerTrackUpdate(e,{worldCoords:r,screenCoords:s})}processVideo(t){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.markerDimensions.length;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0});(async()=>{for(;this.processingVideo;){const e=this.inputLoader.loadInput(t);let n=!1;if(this.trackingStates.reduce(((t,e)=>t+(e.isTracking?1:0)),0)<this.maxTrack){const t=[];for(let e=0;e<this.trackingStates.length;e++)!0!==this.trackingStates[e].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==e||t.push(e));const{targetIndex:r,modelViewTransform:s}=await this._detectAndMatch(e,t);-1!==r&&(this.trackingStates[r].isTracking=!0,this.trackingStates[r].currentModelViewTransform=s,this.shouldCaptureRegion&&(n=!0))}for(let r=0;r<this.trackingStates.length;r++){const s=this.trackingStates[r];if(s.isTracking){let a=await this._trackAndUpdate(e,s.currentModelViewTransform,r);null===a?s.isTracking=!1:(s.currentModelViewTransform=a,n&&(this.capturedRegion=this.captureRegion(t,a,r)))}if(s.showing||s.isTracking&&(s.trackMiss=0,s.trackCount+=1,s.trackCount>10&&(s.showing=!0,s.trackingMatrix=null)),s.showing&&(s.isTracking?s.trackMiss=0:(s.trackCount=0,s.trackMiss+=1,s.trackMiss>30&&(s.showing=!1,s.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:r,worldMatrix:null})))),s.showing){const t=this._glModelViewMatrix(s.currentModelViewTransform,r);if(null===s.trackingMatrix)s.trackingMatrix=t;else for(let e=0;e<t.length;e++)s.trackingMatrix[e]=s.trackingMatrix[e]+(t[e]-s.trackingMatrix[e])/5;const e=[];for(let n=0;n<t.length;n++)e[n]=s.trackingMatrix[n];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:r,worldMatrix:e})}}e.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await r.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(t){const e=this.inputLoader.loadInput(t),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(e);return e.dispose(),{featurePoints:n,debugExtra:r}}async match(t,e){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(t,[e]);return{modelViewTransform:n,debugExtra:r}}async track(t,e,n){const r=this.inputLoader.loadInput(t),s=this.tracker.track(r,e,n);return r.dispose(),s}captureRegion(t,e,n){const s=r.browser.fromPixels(t),a=this.markerDimensions[n],o=Math.floor(800*a[1]/a[0]),i=this.tracker.captureRegion(s,e,n,800,o);return s.dispose(),i}async trackUpdate(t,e){return e.worldCoords.length<4?null:await this._workerTrackUpdate(t,e)}_workerMatch(t,e){return new Promise((async(n,r)=>{this.workerMatchDone=t=>{n({targetIndex:t.targetIndex,modelViewTransform:t.modelViewTransform,debugExtra:t.debugExtra})},this.worker.postMessage({type:"match",featurePoints:t,targetIndexes:e})}))}_workerTrackUpdate(t,e){return new Promise((async(n,r)=>{this.workerTrackDone=t=>{n(t.modelViewTransform)};const{worldCoords:s,screenCoords:a}=e;this.worker.postMessage({type:"trackUpdate",modelViewTransform:t,worldCoords:s,screenCoords:a})}))}_glModelViewMatrix(t,e){const n=this.markerDimensions[e][1];return[t[0][0],-t[1][0],-t[2][0],0,-t[0][1],t[1][1],t[2][1],0,-t[0][2],t[1][2],t[2][2],0,t[0][1]*n+t[0][3],-(t[1][1]*n+t[1][3]),-(t[2][1]*n+t[2][3]),1]}_glProjectionMatrix({projectionTransform:t,width:e,height:n,near:r,far:s}){const a=[[2*t[0][0]/e,0,-(2*t[0][2]/e-1),0],[0,2*t[1][1]/n,-(2*t[1][2]/n-1),0],[0,0,-(s+r)/(s-r),-2*s*r/(s-r)],[0,0,-1,0]],o=[];for(let t=0;t<4;t++)for(let e=0;e<4;e++)o.push(a[e][t]);return o}}}},47051:(t,e,n)=>{n(47091);const{Detector:r}=n(66416),{buildModelViewProjectionTransform:s,computeScreenCoordiate:a}=n(47420);t.exports={CropDetector:class{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let s=Math.min(t,e)/2,a=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=a,this.detector=new r(a,a,n),this.kernelCaches={},this.lastRandomIndex=4}detect(t){const e=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=this._detect(t,n,e);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:e,cropSize:this.cropSize}),r}detectMoving(t){const e=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),s=Math.floor(this.width/2-this.cropSize+e*this.cropSize/2);return s<0&&(s=0),r<0&&(r=0),s>=this.width-this.cropSize&&(s=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(t,s,r)}_detect(t,e,n){const r=t.slice([n,e],[this.cropSize,this.cropSize]),{featurePoints:s,debugExtra:a}=this.detector.detect(r);return s.forEach((t=>{t.x+=e,t.y+=n})),this.debugMode&&(a.projectedImage=r.arraySync()),r.dispose(),{featurePoints:s,debugExtra:a}}}}},66416:(t,e,n)=>{const r=n(47091),{FREAKPOINTS:s}=n(12793),a=(s.length-1)*s.length/2;t.exports={Detector:class{constructor(t,e,n=!1){this.debugMode=n,this.width=t,this.height=e;let r=0;for(;t>=8&&e>=8&&(t/=2,e/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(t){const e=new Uint8ClampedArray(4*t.length);for(let n=0;n<t.length;n++)e[4*n]=t[n],e[4*n+1]=t[n],e[4*n+2]=t[n],e[4*n+3]=255;const n=new ImageData(e,this.width,this.height);return this.detect(n)}detect(t){let e=null;const n=[];for(let e=0;e<this.numOctaves;e++){let r,s;r=0===e?this._applyFilter(t):this._downsampleBilinear(n[e-1][n[e-1].length-1]),s=this._applyFilter(r),n.push([r,s])}const r=[];for(let t=0;t<this.numOctaves;t++){let e=this._differenceImageBinomial(n[t][0],n[t][1]);r.push(e)}const s=[];for(let t=1;t<this.numOctaves-1;t++){const e=this._buildExtremas(r[t-1],r[t],r[t+1]);s.push(e)}const a=this._applyPrune(s),o=this._computeLocalization(a,r),i=this._computeOrientationHistograms(o,n),l=this._smoothHistograms(i),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,o,u),h=this._computeFreakDescriptors(c),p=o.arraySync(),d=u.arraySync(),f=h.arraySync();this.debugMode&&(e={pyramidImages:n.map((t=>t.map((t=>t.arraySync())))),dogPyramidImages:r.map((t=>t?t.arraySync():null)),extremasResults:s.map((t=>t.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:a,localizedExtremas:o.arraySync()}),n.forEach((t=>t.forEach((t=>t.dispose())))),r.forEach((t=>t&&t.dispose())),s.forEach((t=>t.dispose())),o.dispose(),i.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const m=[];for(let t=0;t<p.length;t++){if(0==p[t][0])continue;const e=[];for(let n=0;n<f[t].length;n+=4){let r=16777216*f[t][n]+65536*f[t][n+1]+256*f[t][n+2]+f[t][n+3];e.push(r)}const n=p[t][1],r=p[t][2],s=p[t][3]*Math.pow(2,n)+Math.pow(2,n-1)-.5,a=r*Math.pow(2,n)+Math.pow(2,n-1)-.5,o=Math.pow(2,n);m.push({maxima:p[t][0]>0,x:s,y:a,scale:o,angle:d[t],descriptors:e})}return{featurePoints:m,debugExtra:e}}_computeFreakDescriptors(t){if(!this.tensorCaches.computeFreakDescriptors){const e=[],n=[];for(let r=0;r<t.shape[1];r++)for(let s=r+1;s<t.shape[1];s++)e.push(r),n.push(s);const s=r.tensor(e,[e.length]).cast("int32"),a=r.tensor(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:r.keep(r.stack([s,a],1))}}const{positionT:e}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(a/8);if(!this.kernelCaches.computeFreakDescriptors){const e={variableNames:["freak","p"],outputShape:[t.shape[0],n],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${a}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`};this.kernelCaches.computeFreakDescriptors=[e]}return r.tidy((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[t,e],"int32")}))}_computeExtremaFreak(t,e,n){this.tensorCaches._computeExtremaFreak||r.tidy((()=>{const t=r.tensor(s);this.tensorCaches._computeExtremaFreak={freakPointsT:r.keep(t)}}));const{freakPointsT:a}=this.tensorCaches._computeExtremaFreak,o=[];for(let e=1;e<t.length;e++)o.push(t[e][1]);if(!this.kernelCaches._computeExtremaFreak){const n=[];for(let e=1;e<t.length;e++)n.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)r+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n\t`;r+="}";const a={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e.shape[0],s.length],userCode:`\n\t  ${r}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[a]}return r.tidy((()=>{const[t]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(t,[...o,e,n,a])}))}_computeExtremaAngles(t){if(!this.kernelCaches.computeExtremaAngles){const e={variableNames:["histogram"],outputShape:[t.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=e}return r.tidy((()=>{const e=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(e,[t])}))}_computeOrientationHistograms(t,e){const n=[];for(let t=1;t<e.length;t++)n.push(e[t][1]);this.tensorCaches.orientationHistograms||r.tidy((()=>{const t=Math.ceil(4.5),e=[];for(let n=-t;n<=t;n++)for(let r=-t;r<=t;r++){const t=r*r+n*n;if(t<=20.25){const s=-.05555555555555555*t;let a=.0013888888*(720+s*(720+s*(360+s*(120+s*(30+s*(6+s))))));e.push([n,r,a])}}this.tensorCaches.orientationHistograms={radialPropertiesT:r.keep(r.tensor(e,[e.length,3]))}}));const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const n=[];for(let t=1;t<e.length;t++)n.push("image"+t);let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n\t`;r+="}";const a={variableNames:[...n,"extrema","radial"],outputShape:[t.shape[0],s.shape[0],2],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`},o={variableNames:["fbinMag"],outputShape:[t.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${s.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[a,o]}return r.tidy((()=>{const[e,r]=this.kernelCaches.computeOrientationHistograms,a=this._compileAndRun(e,[...n,t,s]);return this._compileAndRun(r,[a])}))}_smoothHistograms(t){if(!this.kernelCaches.smoothHistograms){const e={variableNames:["histogram"],outputShape:[t.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"};this.kernelCaches.smoothHistograms=e}return r.tidy((()=>{const e=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)t=this._compileAndRun(e,[t]);return t}))}_computeLocalization(t,e){if(!this.kernelCaches.computeLocalization){const n=[];let r="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)n.push("image"+t),r+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n \t`;r+="}";const s={variableNames:[...n,"extrema"],outputShape:[t.length,3,3],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`};this.kernelCaches.computeLocalization=[s]}return r.tidy((()=>{const n=this.kernelCaches.computeLocalization[0],s=r.tensor(t,[t.length,t[0].length],"int32"),a=this._compileAndRun(n,[...e.slice(1),s]).arraySync(),o=[];for(let t=0;t<a.length;t++){o.push([]);for(let e=0;e<a[t].length;e++)o[t].push([])}const i=[];for(let e=0;e<t.length;e++)i[e]=[t[e][0],t[e][1],t[e][2],t[e][3]];for(let t=0;t<i.length;t++){if(0===i[t][0])continue;const e=a[t],n=.5*(e[1][2]-e[1][0]),r=.5*(e[2][1]-e[0][1]),s=e[1][2]+e[1][0]-2*e[1][1],o=e[2][1]+e[0][1]-2*e[1][1],l=.25*(e[0][0]+e[2][2]-e[0][2]-e[2][0]),u=s*o-l*l,c=(o*-n+-l*-r)/u,h=(-l*-n+s*-r)/u,p=i[t][2]+h,d=i[t][3]+c;Math.abs(u)<1e-4||(i[t][2]=p,i[t][3]=d)}return r.tensor(i,[i.length,i[0].length],"float32")}))}_applyPrune(t){if(!this.kernelCaches.applyPrune){const e=[];for(let n=0;n<t.length;n++){const r=t[n].shape[0],s=t[n].shape[1],a={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};e.push(a)}this.kernelCaches.applyPrune={reductionKernels:e}}const e=[],n=[];for(let t=0;t<100;t++){n.push([]),e.push([]);for(let r=0;r<5;r++)n[t].push([0,0,0,0]),e[t].push(0)}r.tidy((()=>{const{reductionKernels:r}=this.kernelCaches.applyPrune;for(let s=0;s<t.length;s++){const a=r[s],o=this._compileAndRun(a,[t[s]]),i=s+1,l=o.arraySync(),u=o.shape[0],c=o.shape[1],h=2*c/10,p=2*u/10;for(let t=0;t<u;t++)for(let r=0;r<c;r++){const s=l[t][r];if(0==s)continue;const a=s%1e3,o=Math.floor(Math.abs(s)/1e3),u=2*r+(2===o||3===o?1:0),c=2*t+(1===o||3===o?1:0),d=Math.floor(u/h),f=10*Math.floor(c/p)+d,m=Math.abs(a);let g=5;for(;g>=1&&m>e[f][g-1];)g-=1;if(g<5){for(let t=4;t>=g+1;t--)e[f][t]=e[f][t-1],n[f][t][0]=n[f][t-1][0],n[f][t][1]=n[f][t-1][1],n[f][t][2]=n[f][t-1][2],n[f][t][3]=n[f][t-1][3];e[f][g]=m,n[f][g][0]=a,n[f][g][1]=i,n[f][g][2]=c,n[f][g][3]=u}}}}));const s=[];for(let t=0;t<100;t++)for(let e=0;e<5;e++)s.push(n[t][e]);return s}_buildExtremas(t,e,n){const s=e.shape[0],a=e.shape[1],o="w"+a;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[o]){const t={variableNames:["image0","image1","image2"],outputShape:[s,a],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${s-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${a-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`};this.kernelCaches.buildExtremas[o]=t}return r.tidy((()=>{const r=this.kernelCaches.buildExtremas[o];return t=this._downsampleBilinear(t),n=this._upsampleBilinear(n,e),this._compileAndRun(r,[t,e,n])}))}_differenceImageBinomial(t,e){return r.tidy((()=>t.sub(e)))}_applyFilter(t){const e=t.shape[0],n=t.shape[1],s="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[s]){const t={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"},r={variableNames:["p"],outputShape:[e,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.applyFilter[s]=[t,r]}return r.tidy((()=>{const[e,n]=this.kernelCaches.applyFilter[s],r=this._compileAndRun(e,[t]);return this._compileAndRun(n,[r])}))}_upsampleBilinear(t,e){t.shape[0];const n="w"+t.shape[1];if(this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),!this.kernelCaches.upsampleBilinear[n]){const t={variableNames:["p"],outputShape:[e.shape[0],e.shape[1]],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.upsampleBilinear[n]=t}return r.tidy((()=>{const e=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(e,[t])}))}_downsampleBilinear(t){const e=t.shape[0],n=t.shape[1],s="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[s]){const t={variableNames:["p"],outputShape:[Math.floor(e/2),Math.floor(n/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[s]=t}return r.tidy((()=>{const e=this.kernelCaches.downsampleBilinear[s];return this._compileAndRun(e,[t])}))}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const s=r.backend().runWebGLProgram(t,e,n);return r.engine().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}}},12793:t=>{const e=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],n=[];for(let t=0;t<e.length;t++){const r=e[t].sigma;for(let s=0;s<e[t].points.length;s++){const a=e[t].points[s];n.push([r,a[0],a[1]])}}t.exports={FREAKPOINTS:n}},47420:t=>{const e=(t,e,n,r)=>({x:t[0][0]*e+t[0][1]*n+t[0][3],y:t[1][0]*e+t[1][1]*n+t[1][3],z:t[2][0]*e+t[2][1]*n+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,n,r,s)=>{const{x:a,y:o,z:i}=e(t,n,r);return{x:a/i,y:o/i}}}},17508:(t,e,n)=>{const{resize:r}=n(9140);t.exports={buildImageList:t=>{const e=[];let n=100/Math.min(t.width,t.height);for(;;)if(e.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}e.push(n),e.reverse();const s=[];for(let n=0;n<e.length;n++)t.width,e[n],t.height,e[n],s.push(Object.assign(r({image:t,ratio:e[n]}),{scale:e[n]}));return s},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),n=[],s=[];n.push(256/e),n.push(128/e);for(let e=0;e<n.length;e++)s.push(Object.assign(r({image:t,ratio:n[e]}),{scale:n[e]}));return s}}},65260:(t,e,n)=>{const{Controller:r}=n(57957),{Compiler:s}=n(95217),{UI:a}=n(82749),o={Controller:r,Compiler:s,UI:a};window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE=o,t.exports=o},37325:(t,e,n)=>{const r=n(47091);t.exports={InputLoader:class{constructor(t,e){this.width=t,this.height=e,this.texShape=[e,t];const n=document.createElement("canvas").getContext("2d");n.canvas.width=t,n.canvas.height=e,this.context=n,this.program=this.buildProgram(t,e);const s=r.backend();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(t){return r.tidy((()=>{let e=r.browser.fromPixels(t);return e=e.mean(2),e}))}loadInput(t){this.context.drawImage(t,0,0,this.width,this.height);const e=r.backend();return e.gpgpu.uploadPixelDataToTexture(e.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(t,e){const n=2===r.env().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${t}.0, ${e}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(t,e,n){const s=r.backend().runWebGLProgram(t,e,n);return r.engine().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}}},32233:t=>{t.exports={compute:t=>{const{v1:e,v2:n}=t;let r=0;for(let t=0;t<e.length;t++){let o=(e[t]^n[t])>>>0;r+=(a=void 0,((a=((a=((a=((a=(s=o)-(s>>1&1431655765))>>2&858993459)+(858993459&a))>>4)+a&252645135)>>8)+a&16711935)>>16)+a&65535)}var s,a;return r}}},80723:(t,e,n)=>{const{compute:r}=n(32233),{createRandomizer:s}=n(6048),a=t=>{const{points:e,pointIndexes:n,centerPointIndex:r,randomizer:s}=t;let o=!1;(n.length<=8||n.length<=16)&&(o=!0);const i={};if(!o){const t=_computeKMedoids({points:e,pointIndexes:n,randomizer:s});for(let e=0;e<t.length;e++)void 0===i[n[t[e]]]&&(i[n[t[e]]]=[]),i[n[t[e]]].push(n[e])}1===Object.keys(i).length&&(o=!0);const l={centerPointIndex:r};if(o){l.leaf=!0,l.pointIndexes=[];for(let t=0;t<n.length;t++)l.pointIndexes.push(n[t]);return l}return l.leaf=!1,l.children=[],Object.keys(i).forEach((t=>{l.children.push(a({points:e,pointIndexes:i[t],centerPointIndex:t,randomizer:s}))})),l};_computeKMedoids=t=>{const{points:e,pointIndexes:n,randomizer:s}=t,a=[];for(let t=0;t<n.length;t++)a.push(t);let o=Number.MAX_SAFE_INTEGER,i=-1;const l=[];for(let t=0;t<128;t++){s.arrayShuffle({arr:a,sampleSize:8});let u=0;const c=[];for(let t=0;t<n.length;t++){let s=Number.MAX_SAFE_INTEGER;for(let o=0;o<8;o++){const i=n[a[o]],l=r({v1:e[n[t]].descriptors,v2:e[i].descriptors});l<s&&(c[t]=a[o],s=l)}u+=s}l.push(c),u<o&&(o=u,i=t)}return l[i]},t.exports={build:({points:t})=>{const e=[];for(let n=0;n<t.length;n++)e.push(n);const n=s();return{rootNode:a({points:t,pointIndexes:e,centerPointIndex:null,randomizer:n})}}}},46417:(t,e,n)=>{const r=n(47091),{buildModelViewProjectionTransform:s,computeScreenCoordiate:a}=n(47420);t.exports={Tracker:class{constructor(t,e,n,r,s,a=!1){this.markerDimensions=t,this.trackingDataList=e,this.projectionTransform=n,this.debugMode=a,this.trackingKeyframeList=[];for(let t=0;t<e.length;t++)this.trackingKeyframeList.push(e[t][1]);let o=0;for(let t=0;t<this.trackingKeyframeList.length;t++)o=Math.max(o,this.trackingKeyframeList[t].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let t=0;t<this.trackingKeyframeList.length;t++){const{featurePoints:e,imagePixels:n,imageProperties:r}=this._prebuild(this.trackingKeyframeList[t],o);this.featurePointsListT[t]=e,this.imagePixelsListT[t]=n,this.imagePropertiesListT[t]=r}this.kernelCaches={}}dummyRun(t){let e=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(t,e,n)}captureRegion(t,e,n,r,a){const o=s(this.projectionTransform,e),i=this._buildAdjustedModelViewTransform(o),l=this._computeColoredProjection(i,t,n,r,a),u=l.arraySync();return i.dispose(),l.dispose(),u}track(t,e,n){let r={};const o=s(this.projectionTransform,e),i=this._buildAdjustedModelViewTransform(o),l=(this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height,this.featurePointsListT[n]),u=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(i,t,n),{matchingPointsT:p,simT:d}=this._computeMatching(l,u,c,h),f=p.arraySync(),m=d.arraySync(),g=this.trackingKeyframeList[n],y=[],b=[],x=[];for(let t=0;t<f.length;t++)if(m[t]>.8&&t<g.points.length){x.push(t);const e=a(o,f[t][0],f[t][1]);b.push(e),y.push({x:g.points[t].x/g.scale,y:g.points[t].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:p.arraySync(),goodTrack:x,trackedPoints:b}),i.dispose(),h.dispose(),p.dispose(),d.dispose(),{worldCoords:y,screenCoords:b,debugExtra:r}}_computeMatching(t,e,n,s){const a=s.shape[0],o=s.shape[1],i=t.shape[0];if(!this.kernelCaches.computeMatching){const t={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[i,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${o} - 6) || sy < 6 || sy >= (${a} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},e={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[i,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[i],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[t,e,n]}return r.tidy((()=>{const r=this.kernelCaches.computeMatching,a=this._compileAndRun(r[0],[t,e,n,s]),o=a.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[t,n,o]),simT:this._compileAndRun(r[2],[a,o])}}))}_computeProjection(t,e,n){const s=this.trackingKeyframeList[n].width,a=this.trackingKeyframeList[n].height,o=this.trackingKeyframeList[n].scale,i=s+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const t={variableNames:["M","pixel"],outputShape:[a,s],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${o});\n\t      float x = float(coords[1]) / float(${o});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=t}return r.tidy((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[t,e])}))}_computeColoredProjection(t,e,n,s,a){const o=this.trackingKeyframeList[n].width,i=(this.trackingKeyframeList[n].height,this.trackingKeyframeList[n].scale*s/o),l=s+"-"+a;if(this.kernelCaches._computeColoredProjection||(this.kernelCaches._computeColoredProjection={}),!this.kernelCaches._computeColoredProjection[l]){const t={variableNames:["M","pixel"],outputShape:[a,s,3],userCode:`\n\t  void main() {\n\t      ivec3 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${i});\n\t      float x = float(coords[1]) / float(${i});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux), coords[2]));\n\t    }\n\t`};this.kernelCaches._computeColoredProjection[l]=t}return r.tidy((()=>{const n=this.kernelCaches._computeColoredProjection[l];return this._compileAndRun(n,[t,e])}))}_buildAdjustedModelViewTransform(t){return r.tidy((()=>{let e=[];for(let n=0;n<t.length;n++){e.push([]);for(let r=0;r<t[n].length;r++)e[n].push(t[n][r]/1e3)}return r.tensor(e,[3,4])}))}_prebuild(t,e){return r.tidy((()=>{const n=t.scale,s=[];for(let r=0;r<e;r++)r<t.points.length?s.push([t.points[r].x/n,t.points[r].y/n]):s.push([-1,-1]);const a=r.tensor(t.data,[t.width*t.height]),o=r.tensor([t.width,t.height,t.scale],[3]);return{featurePoints:r.tensor(s,[s.length,2],"float32"),imagePixels:a,imageProperties:o}}))}_compileAndRun(t,e){const n=r.backend().compileAndRun(t,e);return r.engine().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}}},9140:t=>{t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:n,height:r}=t,s=Math.floor(n/2),a=Math.floor(r/2),o=new Float32Array(s*a),i=[0,1,n,n+1];for(let t=0;t<a;t++)for(let r=0;r<s;r++){let a=2*t*n+2*r,l=0;for(let t=0;t<i.length;t++)l+=e[a+i[t]];l*=.25,o[t*s+r]=l}return{data:o,width:s,height:a}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:n})=>{const{width:r,height:s,data:a}=t,o=2*t.width+(e?1:0),i=2*t.height+(n?1:0),l=new Float32Array(o*i);for(let t=0;t<o;t++){const e=.5*t-.25;let n=Math.floor(e),u=Math.ceil(e);n<0&&(n=0),u>=r&&(u=r-1);for(let c=0;c<i;c++){const i=.5*c-.25;let h=Math.floor(i),p=Math.ceil(i);h<0&&(h=0),p>=s&&(p=s-1);const d=(u-e)*(p-i)*a[h*r+n]+(u-e)*(i-h)*a[p*r+n]+(e-n)*(p-i)*a[h*r+u]+(e-n)*(i-h)*a[p*r+u];l[c*o+t]=d}}return{data:l,width:o,height:i}},resize:({image:t,ratio:e})=>{const n=Math.round(t.width*e),r=Math.round(t.height*e),s=new Uint8Array(n*r);for(let a=0;a<n;a++){let o=Math.round(1*a/e),i=Math.round(1*(a+1)/e)-1;i>=t.width&&(i=t.width-1);for(let l=0;l<r;l++){let r=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let c=0,h=0;for(let e=o;e<=i;e++)for(let n=r;n<=u;n++)c+=1*t.data[n*t.width+e],h+=1;s[l*n+a]=Math.floor(c/h)}}return{data:s,width:n,height:r}}}},6048:t=>{t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:n}=t;for(let t=0;t<n;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=e.length;let r=e[t];e[t]=e[n],e[n]=r}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}},82749:(t,e,n)=>{n(74412);const r=n(69894).Z,s=n(97676).Z,a=n(22810).Z;t.exports={UI:class{constructor({uiLoading:t,uiScanning:e,uiError:n}){"yes"===t?this.loadingModal=this._loadHTML(r):"no"!==t&&(this.loadingModal=document.querySelector(t)),"yes"===n?this.compatibilityModal=this._loadHTML(s):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===e?this.scanningMask=this._loadHTML(a):"no"!==e&&(this.scanningMask=document.querySelector(e)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(t){const e=document.createElement("template");e.innerHTML=t.trim();const n=e.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}},63906:()=>{},12993:()=>{},78352:()=>{},84589:()=>{},61758:()=>{}},e={};function n(r){if(e[r])return e[r].exports;var s=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),n.p="",n(65260)})();